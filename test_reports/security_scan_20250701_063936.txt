================================================================================
ALEJO Security Scan Report
================================================================================
Files analyzed: 281
Lines of code analyzed: 53900
Total vulnerabilities found: 5154
  Critical: 0
  High: 46
  Medium: 5068
  Low: 40
  Info: 0
================================================================================

File: focused_security_scan.py
--------------------------------------------------------------------------------
[HIGH] DynamicCodeExecution line 63
    Use of eval() can lead to code injection
    Code: 'Use of eval() can lead to code injection',
    Remediation: Replace with safer alternatives like JSON parsing or static code

[MEDIUM] SafeEvalAlternative line 58
    Using ast.literal_eval (safe alternative to eval)
    Code: 'Using ast.literal_eval (safe alternative to eval)',
    Remediation: This is a safe alternative to eval, but verify input is properly validated

[MEDIUM] SQLQuery line 66
    SQL query detected - ensure parameterized queries are used
    Code: 'py_sql_query': (r'(?:execute|executemany)\s*\(\s*["\']SELECT|UPDATE|DELETE|INSERT',
    Remediation: Use parameterized queries with placeholders for all user input


File: security_validation.log
--------------------------------------------------------------------------------
[HIGH] DynamicCodeExecution line 9
    Use of eval() can lead to code injection
    Code: 2025-07-01 06:31:15,004 - __main__ - INFO - Validating eval() usage...
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 24
    Use of eval() can lead to code injection
    Code: 2025-07-01 06:33:28,710 - __main__ - INFO - Validating eval() usage...
    Remediation: Replace with safer alternatives like JSON parsing or static code


File: test_reports\final_security_scan_results.txt
--------------------------------------------------------------------------------
[HIGH] DynamicCodeExecution line 17
    Use of eval() can lead to code injection
    Code: Use of eval() can lead to code injection
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 18
    Use of eval() can lead to code injection
    Code: Code: 'Use of eval() can lead to code injection',
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 30
    Use of eval() can lead to code injection
    Code: Use of eval() can lead to code injection
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 31
    Use of eval() can lead to code injection
    Code: Code: Use of eval() can lead to code injection
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 35
    Use of eval() can lead to code injection
    Code: Use of eval() can lead to code injection
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 36
    Use of eval() can lead to code injection
    Code: Code: Code: 'Use of eval() can lead to code injection',
    Remediation: Replace with safer alternatives like JSON parsing or static code

[MEDIUM] SQLQuery line 23
    SQL query detected - ensure parameterized queries are used
    Code: Code: 'py_sql_query': (r'(?:execute|executemany)\s*\(\s*["\']SELECT|UPDATE|DELETE|INSERT',
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 41
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 'py_sql_query': (r'(?:execute|executemany)\s*\(\s*["\']SELECT|UPDATE|DELETE|INSERT',
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 46
    SQL query detected - ensure parameterized queries are used
    Code: Code: File: .update_cache
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 51
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: {"last_check": "2025-06-30T23:52:42.890553", "update_available": false, "current_version": "abcd1234"}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 56
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Updates services with zero downtime
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 61
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Dependency updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 66
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: * Regular model updates containing collective insights
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 71
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: * User control over update frequency and domains
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 76
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: * Users can delete their local learning data at any time
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 81
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: RUN apt-get update && apt-get install -y \
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 86
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Manages dynamic UI updates and DOM manipulation for gesture-enabled elements.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 91
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Provides methods to update, enable, or disable elements based on their gesture properties.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 96
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - CI/CD pipelines have been updated to include backend validation, integration testing, and security compliance.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 101
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - **Web Interface**: Modern, responsive web interface with real-time updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 106
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - **ServiceRegistry**: Manages service registration and health updates, providing a single source of truth for service status.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 111
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 3. Update the frontend UI in `alejo/templates/gesture_enabled_interface.html`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 116
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: {"action": "delete_file"},
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 121
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 5. **Updates**: Keep all dependencies up to date.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 126
    SQL query detected - ensure parameterized queries are used
    Code: Code: File: alejo_update.log
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 131
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2025-06-30 23:52:21,057 - alejo.update_manager - INFO - Pulling latest changes from repository
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 136
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2025-06-30 23:52:21,058 - alejo.update_manager - ERROR - Error pulling updates: Failed to pull
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 141
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2025-06-30 23:52:21,062 - alejo.update_manager - INFO - Pulling latest changes from repository
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 146
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2025-06-30 23:52:21,063 - alejo.update_manager - INFO - Updating dependencies
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 151
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2025-06-30 23:52:21,063 - alejo.update_manager - INFO - Update completed successfully
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 156
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2025-06-30 23:52:21,068 - alejo.update_manager - INFO - Backing up current ALEJO installation to C:\Users\magic\AppData\Local\Temp\alejo_backup_h5jwy8dw
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 161
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2025-06-30 23:52:21,083 - alejo.update_manager - INFO - Restoring ALEJO from backup C:\Users\magic\AppData\Local\Temp\alejo_backup_h5jwy8dw
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 166
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2025-06-30 23:52:42,882 - alejo.update_manager - ERROR - Error restoring backup: [WinError 32] The process cannot access the file because it is being used by another process: 'C:\\Users\\magic\\CascadeProjects\\ALEJO\\alejo_update.log'
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 171
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Update references to use the new module
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 176
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Update references to use the new module
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 181
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 4. **Update Tests**:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 186
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 5. **Update Documentation**:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 191
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Update user guide
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 196
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2. Update imports to use package structure
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 201
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 3. Update imports to use package structure
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 206
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(self.script_path.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 211
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 216
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 221
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 226
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 5. **Brain Integration**: Update ALEJOBrain and other components to automatically self-register with the ServiceRegistry and intercommunicate via the EventBus.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 231
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Create secure update mechanisms
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 236
    SQL query detected - ensure parameterized queries are used
    Code: Code: File: docs\AUTO_UPDATE_README.md
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 241
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # ALEJO Automatic Update System
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 246
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: This document explains the automatic update system implemented in ALEJO to ensure users always have the latest security patches and features.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 251
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: The ALEJO update system performs the following operations:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 256
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 1. **Pre-launch Update Check**: Before ALEJO starts, it automatically checks for updates from the main repository.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 261
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2. **Secure Update Process**:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 266
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Creates a backup of the current installation before applying any updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 271
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Updates the codebase from the repository
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 276
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Updates dependencies if necessary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 281
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Rolls back to the backup if any errors occur during the update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 286
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 3. **Scheduled Checks**: Updates are checked at configurable intervals (default: every 4 hours) to avoid excessive network traffic.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 291
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: The update system works automatically and requires no user intervention. However, several command-line options are available:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 296
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Normal startup with automatic update check
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 301
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Skip update check during startup
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 306
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: python start_alejo_with_gestures.py --skip-updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 311
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Manually check for updates without starting ALEJO
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 316
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: python update_manager.py --check-only
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 321
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Force update check regardless of when the last check occurred
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 326
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: python update_manager.py --force
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 331
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: The update system can be configured through environment variables:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 336
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - `ALEJO_UPDATE_INTERVAL`: Set the minimum hours between update checks (default: 4)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 341
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: If you encounter issues with the automatic update system:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 346
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 1. Check the log file (`alejo_update.log`) for detailed error messages
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 351
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2. Try running a manual update with `python update_manager.py --force`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 356
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 3. If updates consistently fail, you can bypass them with `--skip-updates` and update manually
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 361
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: The automatic update system enhances ALEJO's security by ensuring users always have the latest security patches. The system:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 366
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Creates backups before applying updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 371
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Maintains a log of all update operations
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 376
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: To extend or modify the update system:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 381
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 1. The core functionality is in `update_manager.py`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 386
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2. Test cases are available in `test_update_manager.py`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 391
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 3. The update system is integrated into ALEJO's startup process in `start_alejo_with_gestures.py`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 396
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: python -m unittest test_update_manager.py
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 401
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - **Event-Driven Updates**: Computing only when necessary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 406
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - **Processing Efficiency**: Neural updates per second
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 411
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - **Modularity**: Components are well-separated, making it easier to update individual parts.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 416
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Update plugins to compatible versions
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 421
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 426
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Insert before the first import
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 431
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Find a good place to insert the polyfill
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 436
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Try to insert after imports or at the beginning of the file
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 441
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Insert at the beginning of the file
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 446
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Insert catch block before the last closing brace
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 451
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: progress_bar.update(len(data))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 456
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sha256_hash.update(byte_block)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 461
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 1. Update images:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 466
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 1. Update Istio:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 471
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2. Update monitoring stack:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 476
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: "last_updated": "2025-06-17T06:34:00.742317"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 481
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2025-06-11 07:31:08,226 - __main__ - INFO - Updated index.html
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 486
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 1. Review and update priorities weekly
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 491
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(self.project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 496
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(self.project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 501
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update results
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 506
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update results
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 511
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def update_html_references(self, js_dir, css_dir):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 516
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Update HTML templates to use optimized files"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 521
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update JS references
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 526
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update CSS references
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 531
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Write updated content
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 536
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info(f"Updated {html_file.name}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 541
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update HTML references
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 546
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: optimizer.update_html_references(js_dir, css_dir)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 551
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Send status updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 556
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.warning(f"{env_file} already exists. Please delete it first if you want to create a new one.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 561
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(PROJECT_ROOT))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 566
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 571
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.dirname(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 576
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 581
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(Path(__file__).resolve().parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 586
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update improvements status in data manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 591
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await data_manager.update_improvements(applied_improvements)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 596
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info(f"Updated status for {len(applied_improvements)} improvements")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 601
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, project_root)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 606
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(Path(__file__).resolve().parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 611
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(script_dir.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 616
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(Path(__file__).resolve().parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 621
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 626
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Update test configuration"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 631
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update database paths in config
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 636
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info("Updated test configuration")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 641
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(PROJECT_ROOT))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 646
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update config with file values
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 651
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self._update_dict(config, file_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 656
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def _update_dict(self, target: Dict, source: Dict) -> None:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 661
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Recursively update dictionary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 666
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self._update_dict(target[key], value)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 671
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Import update manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 676
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: from update_manager import UpdateManager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 681
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: UPDATE_MANAGER_AVAILABLE = True
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 686
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: UPDATE_MANAGER_AVAILABLE = False
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 691
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Add update-related command line arguments
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 696
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: "--skip-updates",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 701
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: help="Skip checking for updates before starting"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 706
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Check for updates before starting services
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 711
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: if UPDATE_MANAGER_AVAILABLE and not args.skip_updates:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 716
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info("Checking for ALEJO updates...")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 721
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager = UpdateManager()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 726
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_success = update_manager.run_update_check(auto_apply=True)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 731
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: if not update_success:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 736
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.error("Update process encountered errors. Starting with current version.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 741
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info("Update check completed successfully.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 746
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.error(f"Error during update process: {str(e)}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 751
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(PROJECT_ROOT))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 756
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 761
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update the timestamp
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 766
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update default URLs if provided
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 771
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update the timestamp
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 776
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Check updated allocations
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 781
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info(f"Updated allocations: {allocations}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 786
    SQL query detected - ensure parameterized queries are used
    Code: Code: File: test_update_manager.py
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 791
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Test script for ALEJO Update Manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 796
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: This script tests the functionality of the update manager to ensure it works correctly.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 801
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Import the update manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 806
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: from update_manager import UpdateManager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 811
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: class TestUpdateManager(unittest.TestCase):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 816
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test cases for the ALEJO Update Manager"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 821
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.test_dir = tempfile.mkdtemp(prefix="alejo_update_test_")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 826
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: "force_update": True
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 831
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 836
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertTrue(update_manager.is_git_repo())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 841
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertFalse(update_manager.is_git_repo())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 846
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_check_for_updates_no_updates(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 851
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test checking for updates when none are available"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 856
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 861
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_available, current, latest = update_manager.check_for_updates()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 866
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertFalse(update_available)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 871
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_check_for_updates_available(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 876
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test checking for updates when updates are available"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 881
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 886
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_available, current, latest = update_manager.check_for_updates()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 891
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertTrue(update_available)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 896
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 901
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: backup_dir = update_manager.backup_current_version()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 906
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager.restore_backup(backup_dir)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 911
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_apply_update_success(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 916
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test successful update application"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 921
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock.Mock(stdout="Updated files", stderr="", returncode=0),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 926
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 931
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: UpdateManager, 'backup_current_version',
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 936
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Create requirements.txt for testing dependency updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 941
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: result = update_manager.apply_update()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 946
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_apply_update_failure(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 951
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test failed update application"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 956
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 961
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: UpdateManager, 'backup_current_version',
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 966
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with mock.patch.object(UpdateManager, 'restore_backup') as mock_restore:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 971
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: result = update_manager.apply_update()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 976
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_should_check_for_updates(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 981
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test the logic for determining if updates should be checked"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 986
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Force update should always return True
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 991
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: config = {"force_update": True, "check_interval_hours": 24}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 996
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1001
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertTrue(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1006
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: config = {"force_update": False, "check_interval_hours": 24}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1011
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1016
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertTrue(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1021
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager.update_check_cache()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1026
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertFalse(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1031
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: config = {"force_update": False, "check_interval_hours": 0}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1036
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1041
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager.update_check_cache()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1046
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertTrue(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1051
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Test state updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1056
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: operation="update_state",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1061
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def update_state():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1066
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await emotional_core.update_emotional_state(test_input)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1071
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_result = await update_state()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1076
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert update_result.mean_time < 0.02, "State update too slow"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1081
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: emotional_core.update_emotional_state({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1086
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1091
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: brain.emotional_processor.update_emotional_state.assert_called()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1096
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Should update emotional state and respond empathetically
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1101
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: brain.emotional_processor.update_emotional_state.assert_called()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1106
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1111
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_brain_context_update(multimodal_integration, mock_brain, temp_image):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1116
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Check that brain context was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1121
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1126
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1131
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1136
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await event_bus.subscribe(EventType.ADAPTATION_UPDATED, collect_events)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1141
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert any(e.type == EventType.ADAPTATION_UPDATED for e in events)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1146
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: adaptation_event = next(e for e in events if e.type == EventType.ADAPTATION_UPDATED)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1151
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify emotional trajectory was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1156
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify topic was updated and depth reset
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1161
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_update_configuration(self, proactive_engine, mock_config_manager):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1166
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update configuration
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1171
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: proactive_engine.update_configuration(new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1176
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify configuration was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1181
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify config manager was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1186
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_config_manager.update_config.assert_called_once_with("cognitive", new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1191
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: manager.update_improvement_status = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1196
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: data_manager.update_improvement_status.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1201
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: data_manager.update_improvement_status.assert_not_called()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1206
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1211
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1216
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1221
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1226
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_repo.return_value.delete_head.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1231
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1236
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1241
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1246
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Event(EventType.SYSTEM, {"status": "System update"}, priority=2),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1251
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test advanced health check metrics and updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1256
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify health metrics were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1261
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: service_mesh._service_dependencies.update({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1266
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: if event.data.get("action") == "health_update":
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1271
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert event.data["action"] == "health_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1276
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: if event.data.get("action") == "dependency_update":
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1281
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Mock health checks to update dependencies
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1286
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_service_updates_subscription(registry):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1291
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test service update notifications"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1296
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Subscribe to updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1301
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Wait for the feedback to update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1306
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1311
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Wait for sentiment score to update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1316
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: type=EventType.EMOTIONAL_STATE_UPDATE,
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1321
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: events = event_bus.get_recent_events(EventType.EMOTIONAL_STATE_UPDATE)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1326
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify personality traits were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1331
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Simulate an emotional state update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1336
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: "action": "state_update",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1341
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify emotional processor was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1346
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert emotional_integration.emotional_processor.update_emotional_state.called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1351
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: interaction storage, relationship updates, value system storage, and event handling.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1356
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify that the state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1361
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify that the state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1366
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_update_relationship(self, emotional_memory, event_bus, memory_service):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1371
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update relationship
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1376
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await emotional_memory.update_relationship(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1381
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: memory_service.update_relationship_metrics.assert_called_once_with(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1386
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert event_bus.emit.call_count == 2  # First for init, second for update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1391
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert args[0] == "emotional.memory.relationship_updated"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1396
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert args[0] == "emotional.memory.value_updated"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1401
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify that the value was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1406
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify that the state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1411
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Test emotional update handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1416
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await emotional_memory._handle_emotional_update(event_data)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1421
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: memory_service.update_relationship_metrics.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1426
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Test value update handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1431
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await emotional_memory._handle_value_update(event_data)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1436
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1441
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Test update_emotional_memory event handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1446
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: result = await emotional_integration._handle_update_emotional_memory({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1451
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify memory update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1456
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify interaction timing updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1461
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify memory and learning updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1466
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1471
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def update_principle_weight(self, principle, weight):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1476
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Update principle weight"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1481
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_update_ethical_principle(ethical_integration, mock_ethical_framework):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1486
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Test valid update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1491
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: result = await ethical_integration.update_ethical_principle(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1496
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: result = await ethical_integration.update_ethical_principle(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1501
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with patch.object(mock_ethical_framework, 'update_principle_weight', side_effect=ValueError("Unknown principle")):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1506
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: result = await ethical_integration.update_ethical_principle(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1511
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Test update_ethical_principle event handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1516
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: result = await ethical_integration._handle_update_ethical_principle({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1521
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1526
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1531
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1536
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_delete_preset(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1541
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Delete the preset
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1546
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.preset_manager.delete_preset(test_preset["name"])
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1551
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify the preset was deleted
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1556
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: temp_db = tempfile.NamedTemporaryFile(delete=False, suffix='.db')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1561
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_emotional_state_update_from_llm_response(self, brain, event_bus):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1566
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test that emotional state is updated from LLM responses."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1571
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify that the emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1576
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_relationship_update_after_interaction(self, brain):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1581
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test that relationship metrics are updated after interactions."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1586
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Mock the emotional processor and update_relationship
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1591
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: }), patch.object(brain.emotional_memory, 'update_relationship', AsyncMock()) as mock_update:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1596
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify that update_relationship was called with positive deltas
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1601
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1606
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: args, kwargs = mock_update.call_args
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1611
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Emit a value update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1616
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await brain.event_bus.emit("value.update", {
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1621
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Mock update_relationship
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1626
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with patch.object(brain.emotional_memory, 'update_relationship', AsyncMock()) as mock_update:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1631
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify that update_relationship was called to save final state
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1636
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1641
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1646
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertIn("emotional.update", self.event_bus._subscribers)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1651
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1656
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1661
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1666
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1671
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1676
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1681
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1686
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory._handle_emotional_update = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1691
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Emit an emotional update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1696
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await self.event_bus.emit("emotional.update", {"emotion": "joy", "value": 0.8})
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1701
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory._handle_emotional_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1706
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1711
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1716
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1721
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1726
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1731
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1736
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertIn("emotional.update", self.event_bus._subscribers)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1741
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Emit an emotional update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1746
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await self.event_bus.emit("emotional.update", {"emotion": "anger", "value": 0.8})
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1751
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def update_value_system():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1756
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.ethical_framework.update_value_system = AsyncMock(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1761
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: side_effect=update_value_system
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1766
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update value system
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1771
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await self.brain.ethical_framework.update_value_system()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1776
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify that value system was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1781
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1786
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test that a service is auto-deregistered if not updated within the threshold
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1791
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: and validate that the DatabaseManager can insert and fetch interactions."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1796
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Simulate that the service's last update occurred sufficiently in the past
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1801
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Insert an interaction record
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1806
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: db.insert_interaction(test_data)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1811
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert record_found, "The inserted interaction data should be found in the database"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1816
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test that a service is auto-deregistered if no health update occurs within the threshold."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1821
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: EventType.SYSTEM_IMPROVEMENT_UPDATE,
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1826
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert all(e.type == EventType.SYSTEM_IMPROVEMENT_UPDATE for e in events_received)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1831
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_analyze_and_update_error_patterns(improvement_system):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1836
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test error pattern analysis and strategy updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1841
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await improvement_system._analyze_and_update_error_patterns()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1846
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: improvement_system.error_tracker.update_recovery_strategy.assert_called_once_with(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1851
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_analyze_and_update_emotional_patterns(improvement_system):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1856
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test emotional pattern analysis and parameter updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1861
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await improvement_system._analyze_and_update_emotional_patterns()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1866
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: improvement_system.emotional_core.update_response_parameters.assert_called_once_with(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1871
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1876
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1881
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_delete_adapter(lora_manager):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1886
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: name="adapter_to_delete",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1891
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: description="Adapter to delete",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1896
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: adapter_path = os.path.join(lora_manager.lora_dir, "adapter_to_delete")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1901
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Delete the adapter
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1906
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: result = await lora_manager.delete_adapter("adapter_to_delete")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1911
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Check that the delete was successful
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1916
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Try to delete a non-existent adapter
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1921
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await lora_manager.delete_adapter("non_existent_adapter")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1926
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: emotions.update(self.emotion_detector.detect_text_emotion(text))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1931
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: emotions.update(self.emotion_detector.detect_audio_emotion(audio_data))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1936
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: emotions.update(self.emotion_detector.detect_facial_emotion(image_data))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1941
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.personality_model.update(interaction)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1946
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def update(self, interaction):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1951
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Update personality state"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1956
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def delete(self, key):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1961
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Delete a key"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1966
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.sets[key].update(values)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1971
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.sorted_sets[key].update(mapping)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1976
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with tempfile.NamedTemporaryFile(suffix='.jpg', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1981
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1986
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, project_root)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1991
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1996
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test service heartbeat updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2001
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update skill levels
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2006
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: curriculum_manager.update_skill_levels(task, True, 0.9)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2011
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update performance and select again
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2016
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: meta_learner.update_strategy_performance(0.8)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2021
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify system state updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2026
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2031
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: valid_command_json = '{"command": "delete_file", "args": "protected.txt"}'
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2036
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: failure_message = "Failed to delete file: Permission denied"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2041
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: final_response = brain.process_command("delete the protected file")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2046
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_cmd_processor.execute_command.assert_called_once_with("delete_file", "protected.txt")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2051
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2056
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify working memory was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2061
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2066
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_handle_delete_file(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2071
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test the internal _handle_delete_file method."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2076
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: test_file = self.test_dir / "file_to_delete.txt"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2081
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: test_file.touch() # Create the file to be deleted
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2086
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: result = self.cmd_processor._handle_delete_file(str(test_file))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2091
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertIn("Deleted file", result)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2096
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertFalse(test_file.exists(), "_handle_delete_file did not delete the file.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2101
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2106
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_05_delete_file_command_success(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2111
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test the 'delete file' command handler for successful deletion."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2116
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: filename = "file_to_delete.txt"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2121
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: command = f"delete file {filename}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2126
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertEqual(result, f"Deleted file: {expected_path}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2131
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_06_delete_file_not_found(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2136
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test the 'delete file' command when the file does not exist."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2141
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: command = f"delete file {filename}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2146
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_07_delete_file_protected_path_failure(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2151
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: command = f"delete file {protected_path}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2156
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_08_delete_file_decorator_error_handling(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2161
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: command = f"delete file {filename}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2166
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2171
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update summary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2176
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update summary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2181
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_update_and_get_relationship_data(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2186
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.db_manager.update_relationship_data(user_id, relationship_type, trust_level, rapport_level)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2191
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_update_relationship_metrics(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2196
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Initial update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2201
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.memory.update_relationship_metrics(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2206
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: action = "delete_user_data"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2211
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_01_emotional_state_update(self, event_bus):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2216
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update with positive emotion
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2221
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: item_id = await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2226
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update with negative emotion
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2231
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2236
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2241
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await memory.update_relationship_context(entity_id, context)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2246
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update context
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2251
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update = {
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2256
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await memory.update_relationship_context(entity_id, update)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2261
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Check updated context
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2266
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: updated_context = await memory.get_relationship_context(entity_id)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2271
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert updated_context["trust_level"] == 0.9
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2276
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert len(updated_context["shared_experiences"]) == 3
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2281
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Check emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2286
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Check emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2291
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2296
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2301
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2306
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2311
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_personality_state_updates(self, emotional_service):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2316
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test personality state updates and persistence"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2321
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert final_state != initial_state  # State should update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2326
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info("Personality state updates validated")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2331
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_04_empathy_model_updates(self, processor):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2336
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await processor.update_empathy_model({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2341
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await processor.update_empathy_model({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2346
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2351
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2356
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2361
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2366
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Check priorities were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2371
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.temp_config = tempfile.NamedTemporaryFile(delete=False, suffix='.json')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2376
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.temp_db = tempfile.NamedTemporaryFile(delete=False, suffix='.db')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2381
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with tempfile.NamedTemporaryFile(delete=False, suffix='.json') as temp_file:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2386
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.temp_db = tempfile.NamedTemporaryFile(delete=False, suffix='.db')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2391
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: "delete user data without confirmation",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2396
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with tempfile.NamedTemporaryFile(delete=False, suffix='.json') as temp_file:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2401
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with tempfile.NamedTemporaryFile(delete=False, suffix='.json') as temp_file:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2406
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify emotional state update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2411
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert result['memory_updates']
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2416
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Get updated metrics
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2421
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify metrics were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2426
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """HealthMonitor should emit a *healthy* status update when the endpoint responds 200."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2431
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2436
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: updated_items = await working_memory.get_active_items()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2441
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert len(updated_items) <= len(items)  # Should have decayed
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2446
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: for old, new in zip(items, updated_items):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2451
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: last_updated: float
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2456
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: last_updated=time.time(),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2461
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: last_updated=time.time(),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2466
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2471
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await brain.emotional_processor.update_emotional_state({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2476
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_event_bus.subscribe.assert_any_call("config.updated", arpeggiator._handle_config_updated)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2481
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_handle_config_updated(self, arpeggiator):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2486
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test handling configuration update events"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2491
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Replace update_configuration with a mock
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2496
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: arpeggiator.update_configuration = MagicMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2501
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: event_type="config.updated",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2506
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await arpeggiator._handle_config_updated(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2511
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify update_configuration was called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2516
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: arpeggiator.update_configuration.assert_called_once_with({"sensitivity": 0.7})
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2521
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: event_type="config.updated",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2526
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: arpeggiator.update_configuration.reset_mock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2531
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await arpeggiator._handle_config_updated(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2536
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify update_configuration was not called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2541
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert not arpeggiator.update_configuration.called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2546
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_update_configuration(self, arpeggiator, mock_config_manager):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2551
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update configuration
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2556
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: arpeggiator.update_configuration(new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2561
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify configuration was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2566
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify config manager was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2571
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_config_manager.update_config.assert_called_once_with("gesture_arpeggiator", new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2576
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: event_bus.subscribe.assert_any_call("ui.context_changed", gesture_integration.update_ui_context)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2581
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: event_bus.subscribe.assert_any_call("config.updated.gesture_integration", gesture_integration.update_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2586
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_update_ui_context(self, gesture_integration):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2591
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test UI context updates."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2596
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: gesture_integration.update_ui_context(context_event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2601
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_update_config(self, gesture_integration):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2606
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test configuration updates."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2611
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: gesture_integration.update_config(new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2616
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: @patch('alejo.ui.pyside_ui.HolographicWidget.update')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2621
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_event_handler(self, mock_update):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2626
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2631
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2636
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Check that config was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2641
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Check that brain.update_config was called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2646
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_brain.update_config.assert_called_once_with(alejo_ui.config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2651
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: service.update_arpeggiator_settings = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2656
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: service.update_visualizer_settings = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2661
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify arpeggiator settings were updated with Joy parameters
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2666
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_arpeggiator_service.update_arpeggiator_settings.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2671
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: args = mock_arpeggiator_service.update_arpeggiator_settings.call_args[0][0]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2676
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify visualizer settings were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2681
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_arpeggiator_service.update_visualizer_settings.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2686
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: vis_args = mock_arpeggiator_service.update_visualizer_settings.call_args[0][0]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2691
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_arpeggiator_service.update_arpeggiator_settings.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2696
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: args = mock_arpeggiator_service.update_arpeggiator_settings.call_args[0][0]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2701
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_arpeggiator_service.update_arpeggiator_settings.reset_mock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2706
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent.parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2711
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: "page_title": "Test Page Updated",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2716
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent.parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2721
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2726
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Check that last_used was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2731
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert sent_data["type"] == "config_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2736
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_handle_ui_update(websocket_handler, mock_websocket):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2741
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test handling of UI update events"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2746
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: "update": {
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2751
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await websocket_handler._handle_ui_update(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2756
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert sent_data["type"] == "ui_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2761
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert sent_data["update"] == event["update"]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2766
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_handle_config_update(websocket_handler, mock_websocket):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2771
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test handling of configuration update events"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2776
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await websocket_handler._handle_config_update(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2781
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert sent_data["type"] == "config_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2786
    SQL query detected - ensure parameterized queries are used
    Code: Code: File: update_manager.py
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2791
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: ALEJO Update Manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2796
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Automatically checks for and applies updates before ALEJO starts.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2801
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logging.FileHandler("alejo_update.log"),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2806
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger = logging.getLogger("alejo.update_manager")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2811
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: class UpdateManager:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2816
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Manages automatic updates for ALEJO system
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2821
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: This class checks for updates from the main repository and applies them
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2826
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Initialize the Update Manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2831
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.update_cache_file = self.alejo_dir / ".update_cache"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2836
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.update_lock_file = self.alejo_dir / ".update_lock"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2841
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.force_update = self.config.get("force_update", False)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2846
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def should_check_for_updates(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2851
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Determine if we should check for updates based on last check time
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2856
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: if self.force_update:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2861
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: if not self.update_cache_file.exists():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2866
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with open(self.update_cache_file, "r") as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2871
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def update_check_cache(self, update_available=False, version=None):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2876
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Update the cache file with current check information"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2881
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: "update_available": update_available,
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2886
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with open(self.update_cache_file, "w") as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2891
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def check_for_updates(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2896
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Check if updates are available
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2901
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: tuple: (update_available, current_version, latest_version)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2906
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.warning("Not a git repository, cannot check for updates")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2911
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Create a lock file to prevent concurrent update checks
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2916
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: if self.update_lock_file.exists():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2921
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: if time.time() - os.path.getmtime(self.update_lock_file) > 600:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2926
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: os.remove(self.update_lock_file)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2931
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info("Update check already in progress, skipping")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2936
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with open(self.update_lock_file, "w") as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2941
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_available = current_version != latest_version
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2946
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.update_check_cache(update_available, current_version)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2951
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: return update_available, current_version, latest_version
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2956
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.error(f"Error checking for updates: {str(e)}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2961
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: if self.update_lock_file.exists():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2966
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: os.remove(self.update_lock_file)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2971
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def apply_update(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2976
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Apply available updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2981
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: bool: True if update was successful, False otherwise
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2986
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.warning("Not a git repository, cannot apply updates")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2991
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.error(f"Error pulling updates: {result.stderr}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2996
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update database schema if needed
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3001
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.update_database_schema()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3006
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info("Update completed successfully")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3011
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.error(f"Error applying update: {str(e)}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3016
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Restore ALEJO from backup in case of update failure"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3021
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def update_database_schema(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3026
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Update database schema if necessary"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3031
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def run_update_check(self, auto_apply=True):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3036
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Run a full update check and optionally apply updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3041
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: auto_apply: Whether to automatically apply updates if available
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3046
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: bool: True if system is up to date, False if update failed
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3051
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: if not self.should_check_for_updates():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3056
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info("Update check was performed recently, skipping")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3061
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info("Checking for ALEJO updates")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3066
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_available, current_version, latest_version = self.check_for_updates()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3071
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: if update_available:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3076
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info(f"Update available: {current_version[:7]} -> {latest_version[:7]}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3081
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info("Applying update automatically")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3086
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: return self.apply_update()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3091
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info("Update available but not applying automatically")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3096
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: parser = argparse.ArgumentParser(description="ALEJO Update Manager")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3101
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: parser.add_argument("--check-only", action="store_true", help="Only check for updates, don't apply them")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3106
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: parser.add_argument("--force", action="store_true", help="Force update check even if done recently")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3111
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Create update manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3116
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: config = {"force_update": args.force}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3121
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3126
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Run update check
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3131
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager.run_update_check(auto_apply=not args.check_only)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3136
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await r.delete(test_key)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3141
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(Path(script_path).parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3146
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Y]O?gjOEb?0)r   id  r  )r#   r#   gh㈵>g7P>{r   )r#   r#   gh㈵>g7P>0)r   i  	fix_flags)r   r   guR#>g&p>{r   )r   r   guR#>g&p>0)r   i  r   )r   r   g>g+|c?{r   )r   r   g>g+|c?0)rS   rT   rU   )r)   r)   g0D4>g =T?{0)DC:\Users\magic\AppData\Local\Programs\Python\Python39\lib\weakref.pyi   r   )r)   r)   glӎ>g4vxU>{rY   )r)   r)   glӎ>g4vxU>0)r  i"  update)r)   r)   gavt>g:ܳS>{)r  r  r   )r)   r)   gavt>g:ܳS>0)FC:\Users\magic\AppData\Local\Programs\Python\Python39\lib\threading.pyr   RLock)r#   r#   gkNu>gkNu>{rZ   iv  
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3151
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3156
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Process the command and update the log"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3161
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def _update():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3166
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.log_text.insert(tk.END, message + "\n\n", color)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3171
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update in the main thread
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3176
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.root.after(0, _update)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3181
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.log_text.delete(1.0, tk.END)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3210
    SQL query detected - ensure parameterized queries are used
    Code: File: .update_cache
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3214
    SQL query detected - ensure parameterized queries are used
    Code: Code: {"last_check": "2025-06-30T23:52:42.890553", "update_available": false, "current_version": "abcd1234"}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3222
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Updates services with zero downtime
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3227
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Dependency updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3235
    SQL query detected - ensure parameterized queries are used
    Code: Code: * Regular model updates containing collective insights
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3240
    SQL query detected - ensure parameterized queries are used
    Code: Code: * User control over update frequency and domains
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3245
    SQL query detected - ensure parameterized queries are used
    Code: Code: * Users can delete their local learning data at any time
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3253
    SQL query detected - ensure parameterized queries are used
    Code: Code: RUN apt-get update && apt-get install -y \
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3261
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Manages dynamic UI updates and DOM manipulation for gesture-enabled elements.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3266
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Provides methods to update, enable, or disable elements based on their gesture properties.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3271
    SQL query detected - ensure parameterized queries are used
    Code: Code: - CI/CD pipelines have been updated to include backend validation, integration testing, and security compliance.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3279
    SQL query detected - ensure parameterized queries are used
    Code: Code: - **Web Interface**: Modern, responsive web interface with real-time updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3284
    SQL query detected - ensure parameterized queries are used
    Code: Code: - **ServiceRegistry**: Manages service registration and health updates, providing a single source of truth for service status.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3292
    SQL query detected - ensure parameterized queries are used
    Code: Code: 3. Update the frontend UI in `alejo/templates/gesture_enabled_interface.html`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3300
    SQL query detected - ensure parameterized queries are used
    Code: Code: {"action": "delete_file"},
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3305
    SQL query detected - ensure parameterized queries are used
    Code: Code: 5. **Updates**: Keep all dependencies up to date.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3309
    SQL query detected - ensure parameterized queries are used
    Code: File: alejo_update.log
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3313
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-30 23:52:21,057 - alejo.update_manager - INFO - Pulling latest changes from repository
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3318
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-30 23:52:21,058 - alejo.update_manager - ERROR - Error pulling updates: Failed to pull
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3323
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-30 23:52:21,062 - alejo.update_manager - INFO - Pulling latest changes from repository
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3328
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-30 23:52:21,063 - alejo.update_manager - INFO - Updating dependencies
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3333
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-30 23:52:21,063 - alejo.update_manager - INFO - Update completed successfully
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3338
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-30 23:52:21,068 - alejo.update_manager - INFO - Backing up current ALEJO installation to C:\Users\magic\AppData\Local\Temp\alejo_backup_h5jwy8dw
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3343
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-30 23:52:21,083 - alejo.update_manager - INFO - Restoring ALEJO from backup C:\Users\magic\AppData\Local\Temp\alejo_backup_h5jwy8dw
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3348
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-30 23:52:42,882 - alejo.update_manager - ERROR - Error restoring backup: [WinError 32] The process cannot access the file because it is being used by another process: 'C:\\Users\\magic\\CascadeProjects\\ALEJO\\alejo_update.log'
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3356
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Update references to use the new module
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3361
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Update references to use the new module
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3366
    SQL query detected - ensure parameterized queries are used
    Code: Code: 4. **Update Tests**:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3371
    SQL query detected - ensure parameterized queries are used
    Code: Code: 5. **Update Documentation**:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3376
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Update user guide
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3384
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2. Update imports to use package structure
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3389
    SQL query detected - ensure parameterized queries are used
    Code: Code: 3. Update imports to use package structure
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3397
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(self.script_path.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3405
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3413
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3421
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3429
    SQL query detected - ensure parameterized queries are used
    Code: Code: 5. **Brain Integration**: Update ALEJOBrain and other components to automatically self-register with the ServiceRegistry and intercommunicate via the EventBus.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3437
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Create secure update mechanisms
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3441
    SQL query detected - ensure parameterized queries are used
    Code: File: docs\AUTO_UPDATE_README.md
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3445
    SQL query detected - ensure parameterized queries are used
    Code: Code: # ALEJO Automatic Update System
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3450
    SQL query detected - ensure parameterized queries are used
    Code: Code: This document explains the automatic update system implemented in ALEJO to ensure users always have the latest security patches and features.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3455
    SQL query detected - ensure parameterized queries are used
    Code: Code: The ALEJO update system performs the following operations:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3460
    SQL query detected - ensure parameterized queries are used
    Code: Code: 1. **Pre-launch Update Check**: Before ALEJO starts, it automatically checks for updates from the main repository.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3465
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2. **Secure Update Process**:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3470
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Creates a backup of the current installation before applying any updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3475
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Updates the codebase from the repository
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3480
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Updates dependencies if necessary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3485
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Rolls back to the backup if any errors occur during the update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3490
    SQL query detected - ensure parameterized queries are used
    Code: Code: 3. **Scheduled Checks**: Updates are checked at configurable intervals (default: every 4 hours) to avoid excessive network traffic.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3495
    SQL query detected - ensure parameterized queries are used
    Code: Code: The update system works automatically and requires no user intervention. However, several command-line options are available:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3500
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Normal startup with automatic update check
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3505
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Skip update check during startup
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3510
    SQL query detected - ensure parameterized queries are used
    Code: Code: python start_alejo_with_gestures.py --skip-updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3515
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Manually check for updates without starting ALEJO
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3520
    SQL query detected - ensure parameterized queries are used
    Code: Code: python update_manager.py --check-only
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3525
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Force update check regardless of when the last check occurred
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3530
    SQL query detected - ensure parameterized queries are used
    Code: Code: python update_manager.py --force
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3535
    SQL query detected - ensure parameterized queries are used
    Code: Code: The update system can be configured through environment variables:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3540
    SQL query detected - ensure parameterized queries are used
    Code: Code: - `ALEJO_UPDATE_INTERVAL`: Set the minimum hours between update checks (default: 4)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3545
    SQL query detected - ensure parameterized queries are used
    Code: Code: If you encounter issues with the automatic update system:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3550
    SQL query detected - ensure parameterized queries are used
    Code: Code: 1. Check the log file (`alejo_update.log`) for detailed error messages
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3555
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2. Try running a manual update with `python update_manager.py --force`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3560
    SQL query detected - ensure parameterized queries are used
    Code: Code: 3. If updates consistently fail, you can bypass them with `--skip-updates` and update manually
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3565
    SQL query detected - ensure parameterized queries are used
    Code: Code: The automatic update system enhances ALEJO's security by ensuring users always have the latest security patches. The system:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3570
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Creates backups before applying updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3575
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Maintains a log of all update operations
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3580
    SQL query detected - ensure parameterized queries are used
    Code: Code: To extend or modify the update system:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3585
    SQL query detected - ensure parameterized queries are used
    Code: Code: 1. The core functionality is in `update_manager.py`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3590
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2. Test cases are available in `test_update_manager.py`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3595
    SQL query detected - ensure parameterized queries are used
    Code: Code: 3. The update system is integrated into ALEJO's startup process in `start_alejo_with_gestures.py`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3600
    SQL query detected - ensure parameterized queries are used
    Code: Code: python -m unittest test_update_manager.py
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3608
    SQL query detected - ensure parameterized queries are used
    Code: Code: - **Event-Driven Updates**: Computing only when necessary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3613
    SQL query detected - ensure parameterized queries are used
    Code: Code: - **Processing Efficiency**: Neural updates per second
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3621
    SQL query detected - ensure parameterized queries are used
    Code: Code: - **Modularity**: Components are well-separated, making it easier to update individual parts.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3629
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Update plugins to compatible versions
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3637
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3645
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Insert before the first import
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3653
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Find a good place to insert the polyfill
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3658
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Try to insert after imports or at the beginning of the file
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3663
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Insert at the beginning of the file
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3668
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Insert catch block before the last closing brace
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3676
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Find a good place to insert the wrapper
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3681
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Insert after script tag
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3686
    SQL query detected - ensure parameterized queries are used
    Code: Code: insert_pos = script_tag_match.end()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3691
    SQL query detected - ensure parameterized queries are used
    Code: Code: content = content[:insert_pos] + secure_storage_wrapper + content[insert_pos:]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3696
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Insert after imports
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3701
    SQL query detected - ensure parameterized queries are used
    Code: Code: insert_pos = import_match.end()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3706
    SQL query detected - ensure parameterized queries are used
    Code: Code: content = content[:insert_pos] + secure_storage_wrapper + content[insert_pos:]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3711
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Insert at the beginning with a comment explaining
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3719
    SQL query detected - ensure parameterized queries are used
    Code: Code: modified_lines.insert(import_section_end, "import secrets  # More secure for cryptographic purposes")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3742
    SQL query detected - ensure parameterized queries are used
    Code: Code: progress_bar.update(len(data))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3747
    SQL query detected - ensure parameterized queries are used
    Code: Code: sha256_hash.update(byte_block)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3755
    SQL query detected - ensure parameterized queries are used
    Code: Code: 1. Update images:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3763
    SQL query detected - ensure parameterized queries are used
    Code: Code: 1. Update Istio:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3768
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2. Update monitoring stack:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3776
    SQL query detected - ensure parameterized queries are used
    Code: Code: "last_updated": "2025-06-17T06:34:00.742317"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3784
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-11 07:31:08,226 - __main__ - INFO - Updated index.html
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3792
    SQL query detected - ensure parameterized queries are used
    Code: Code: 1. Review and update priorities weekly
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3800
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(self.project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3805
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(self.project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3810
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update results
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3815
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update results
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3820
    SQL query detected - ensure parameterized queries are used
    Code: Code: def update_html_references(self, js_dir, css_dir):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3825
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Update HTML templates to use optimized files"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3830
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update JS references
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3835
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update CSS references
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3840
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Write updated content
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3845
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info(f"Updated {html_file.name}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3850
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update HTML references
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3855
    SQL query detected - ensure parameterized queries are used
    Code: Code: optimizer.update_html_references(js_dir, css_dir)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3863
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Send status updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3871
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.warning(f"{env_file} already exists. Please delete it first if you want to create a new one.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3879
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(PROJECT_ROOT))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3887
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3895
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.dirname(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3903
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3911
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(__file__).resolve().parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3916
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update improvements status in data manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3921
    SQL query detected - ensure parameterized queries are used
    Code: Code: await data_manager.update_improvements(applied_improvements)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3926
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info(f"Updated status for {len(applied_improvements)} improvements")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3934
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, project_root)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3942
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(__file__).resolve().parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3950
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(script_dir.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3958
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(__file__).resolve().parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3966
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3974
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Update test configuration"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3979
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update database paths in config
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3984
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Updated test configuration")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3992
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(PROJECT_ROOT))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4000
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update config with file values
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4005
    SQL query detected - ensure parameterized queries are used
    Code: Code: self._update_dict(config, file_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4010
    SQL query detected - ensure parameterized queries are used
    Code: Code: def _update_dict(self, target: Dict, source: Dict) -> None:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4015
    SQL query detected - ensure parameterized queries are used
    Code: Code: Recursively update dictionary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4020
    SQL query detected - ensure parameterized queries are used
    Code: Code: self._update_dict(target[key], value)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4028
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Import update manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4033
    SQL query detected - ensure parameterized queries are used
    Code: Code: from update_manager import UpdateManager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4038
    SQL query detected - ensure parameterized queries are used
    Code: Code: UPDATE_MANAGER_AVAILABLE = True
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4043
    SQL query detected - ensure parameterized queries are used
    Code: Code: UPDATE_MANAGER_AVAILABLE = False
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4048
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Add update-related command line arguments
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4053
    SQL query detected - ensure parameterized queries are used
    Code: Code: "--skip-updates",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4058
    SQL query detected - ensure parameterized queries are used
    Code: Code: help="Skip checking for updates before starting"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4063
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check for updates before starting services
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4068
    SQL query detected - ensure parameterized queries are used
    Code: Code: if UPDATE_MANAGER_AVAILABLE and not args.skip_updates:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4073
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Checking for ALEJO updates...")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4078
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4083
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_success = update_manager.run_update_check(auto_apply=True)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4088
    SQL query detected - ensure parameterized queries are used
    Code: Code: if not update_success:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4093
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.error("Update process encountered errors. Starting with current version.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4098
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Update check completed successfully.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4103
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.error(f"Error during update process: {str(e)}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4111
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(PROJECT_ROOT))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4119
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4127
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update the timestamp
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4132
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update default URLs if provided
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4140
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update the timestamp
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4148
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check updated allocations
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4153
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info(f"Updated allocations: {allocations}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4157
    SQL query detected - ensure parameterized queries are used
    Code: File: test_update_manager.py
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4161
    SQL query detected - ensure parameterized queries are used
    Code: Code: Test script for ALEJO Update Manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4166
    SQL query detected - ensure parameterized queries are used
    Code: Code: This script tests the functionality of the update manager to ensure it works correctly.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4171
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Import the update manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4176
    SQL query detected - ensure parameterized queries are used
    Code: Code: from update_manager import UpdateManager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4181
    SQL query detected - ensure parameterized queries are used
    Code: Code: class TestUpdateManager(unittest.TestCase):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4186
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test cases for the ALEJO Update Manager"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4191
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.test_dir = tempfile.mkdtemp(prefix="alejo_update_test_")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4196
    SQL query detected - ensure parameterized queries are used
    Code: Code: "force_update": True
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4201
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4206
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertTrue(update_manager.is_git_repo())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4211
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertFalse(update_manager.is_git_repo())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4216
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_check_for_updates_no_updates(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4221
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test checking for updates when none are available"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4226
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4231
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_available, current, latest = update_manager.check_for_updates()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4236
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertFalse(update_available)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4241
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_check_for_updates_available(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4246
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test checking for updates when updates are available"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4251
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4256
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_available, current, latest = update_manager.check_for_updates()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4261
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertTrue(update_available)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4266
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4271
    SQL query detected - ensure parameterized queries are used
    Code: Code: backup_dir = update_manager.backup_current_version()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4276
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager.restore_backup(backup_dir)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4281
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_apply_update_success(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4286
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test successful update application"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4291
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock.Mock(stdout="Updated files", stderr="", returncode=0),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4296
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4301
    SQL query detected - ensure parameterized queries are used
    Code: Code: UpdateManager, 'backup_current_version',
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4306
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Create requirements.txt for testing dependency updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4311
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = update_manager.apply_update()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4316
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_apply_update_failure(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4321
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test failed update application"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4326
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4331
    SQL query detected - ensure parameterized queries are used
    Code: Code: UpdateManager, 'backup_current_version',
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4336
    SQL query detected - ensure parameterized queries are used
    Code: Code: with mock.patch.object(UpdateManager, 'restore_backup') as mock_restore:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4341
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = update_manager.apply_update()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4346
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_should_check_for_updates(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4351
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test the logic for determining if updates should be checked"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4356
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Force update should always return True
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4361
    SQL query detected - ensure parameterized queries are used
    Code: Code: config = {"force_update": True, "check_interval_hours": 24}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4366
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4371
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertTrue(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4376
    SQL query detected - ensure parameterized queries are used
    Code: Code: config = {"force_update": False, "check_interval_hours": 24}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4381
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4386
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertTrue(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4391
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager.update_check_cache()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4396
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertFalse(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4401
    SQL query detected - ensure parameterized queries are used
    Code: Code: config = {"force_update": False, "check_interval_hours": 0}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4406
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4411
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager.update_check_cache()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4416
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertTrue(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4424
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Test state updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4429
    SQL query detected - ensure parameterized queries are used
    Code: Code: operation="update_state",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4434
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def update_state():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4439
    SQL query detected - ensure parameterized queries are used
    Code: Code: await emotional_core.update_emotional_state(test_input)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4444
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_result = await update_state()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4449
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert update_result.mean_time < 0.02, "State update too slow"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4454
    SQL query detected - ensure parameterized queries are used
    Code: Code: emotional_core.update_emotional_state({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4462
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4467
    SQL query detected - ensure parameterized queries are used
    Code: Code: brain.emotional_processor.update_emotional_state.assert_called()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4472
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Should update emotional state and respond empathetically
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4477
    SQL query detected - ensure parameterized queries are used
    Code: Code: brain.emotional_processor.update_emotional_state.assert_called()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4485
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4490
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_brain_context_update(multimodal_integration, mock_brain, temp_image):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4495
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check that brain context was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4503
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4511
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4519
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4527
    SQL query detected - ensure parameterized queries are used
    Code: Code: await event_bus.subscribe(EventType.ADAPTATION_UPDATED, collect_events)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4532
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert any(e.type == EventType.ADAPTATION_UPDATED for e in events)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4537
    SQL query detected - ensure parameterized queries are used
    Code: Code: adaptation_event = next(e for e in events if e.type == EventType.ADAPTATION_UPDATED)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4545
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify emotional trajectory was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4550
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify topic was updated and depth reset
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4555
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_update_configuration(self, proactive_engine, mock_config_manager):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4560
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update configuration
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4565
    SQL query detected - ensure parameterized queries are used
    Code: Code: proactive_engine.update_configuration(new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4570
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify configuration was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4575
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify config manager was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4580
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_config_manager.update_config.assert_called_once_with("cognitive", new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4588
    SQL query detected - ensure parameterized queries are used
    Code: Code: manager.update_improvement_status = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4593
    SQL query detected - ensure parameterized queries are used
    Code: Code: data_manager.update_improvement_status.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4598
    SQL query detected - ensure parameterized queries are used
    Code: Code: data_manager.update_improvement_status.assert_not_called()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4606
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4614
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4622
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4630
    SQL query detected - ensure parameterized queries are used
    Code: Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4635
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_repo.return_value.delete_head.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4640
    SQL query detected - ensure parameterized queries are used
    Code: Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4645
    SQL query detected - ensure parameterized queries are used
    Code: Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4650
    SQL query detected - ensure parameterized queries are used
    Code: Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4658
    SQL query detected - ensure parameterized queries are used
    Code: Code: Event(EventType.SYSTEM, {"status": "System update"}, priority=2),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4666
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test advanced health check metrics and updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4671
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify health metrics were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4676
    SQL query detected - ensure parameterized queries are used
    Code: Code: service_mesh._service_dependencies.update({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4684
    SQL query detected - ensure parameterized queries are used
    Code: Code: if event.data.get("action") == "health_update":
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4689
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert event.data["action"] == "health_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4694
    SQL query detected - ensure parameterized queries are used
    Code: Code: if event.data.get("action") == "dependency_update":
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4699
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Mock health checks to update dependencies
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4707
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_service_updates_subscription(registry):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4712
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test service update notifications"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4717
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Subscribe to updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4725
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Wait for the feedback to update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4733
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4738
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Wait for sentiment score to update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4746
    SQL query detected - ensure parameterized queries are used
    Code: Code: type=EventType.EMOTIONAL_STATE_UPDATE,
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4751
    SQL query detected - ensure parameterized queries are used
    Code: Code: events = event_bus.get_recent_events(EventType.EMOTIONAL_STATE_UPDATE)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4759
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify personality traits were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4767
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Simulate an emotional state update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4772
    SQL query detected - ensure parameterized queries are used
    Code: Code: "action": "state_update",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4777
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify emotional processor was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4782
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert emotional_integration.emotional_processor.update_emotional_state.called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4790
    SQL query detected - ensure parameterized queries are used
    Code: Code: interaction storage, relationship updates, value system storage, and event handling.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4795
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify that the state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4800
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify that the state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4805
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_update_relationship(self, emotional_memory, event_bus, memory_service):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4810
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update relationship
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4815
    SQL query detected - ensure parameterized queries are used
    Code: Code: await emotional_memory.update_relationship(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4820
    SQL query detected - ensure parameterized queries are used
    Code: Code: memory_service.update_relationship_metrics.assert_called_once_with(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4825
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert event_bus.emit.call_count == 2  # First for init, second for update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4830
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert args[0] == "emotional.memory.relationship_updated"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4835
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert args[0] == "emotional.memory.value_updated"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4840
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify that the value was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4845
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify that the state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4850
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Test emotional update handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4855
    SQL query detected - ensure parameterized queries are used
    Code: Code: await emotional_memory._handle_emotional_update(event_data)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4860
    SQL query detected - ensure parameterized queries are used
    Code: Code: memory_service.update_relationship_metrics.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4865
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Test value update handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4870
    SQL query detected - ensure parameterized queries are used
    Code: Code: await emotional_memory._handle_value_update(event_data)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4878
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4883
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Test update_emotional_memory event handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4888
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = await emotional_integration._handle_update_emotional_memory({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4896
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify memory update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4901
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify interaction timing updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4906
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify memory and learning updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4914
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4919
    SQL query detected - ensure parameterized queries are used
    Code: Code: def update_principle_weight(self, principle, weight):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4924
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Update principle weight"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4929
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_update_ethical_principle(ethical_integration, mock_ethical_framework):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4934
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Test valid update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4939
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = await ethical_integration.update_ethical_principle(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4944
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = await ethical_integration.update_ethical_principle(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4949
    SQL query detected - ensure parameterized queries are used
    Code: Code: with patch.object(mock_ethical_framework, 'update_principle_weight', side_effect=ValueError("Unknown principle")):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4954
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = await ethical_integration.update_ethical_principle(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4959
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Test update_ethical_principle event handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4964
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = await ethical_integration._handle_update_ethical_principle({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4972
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4980
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4988
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4993
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_delete_preset(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4998
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Delete the preset
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5003
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.preset_manager.delete_preset(test_preset["name"])
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5008
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify the preset was deleted
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5016
    SQL query detected - ensure parameterized queries are used
    Code: Code: temp_db = tempfile.NamedTemporaryFile(delete=False, suffix='.db')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5021
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_emotional_state_update_from_llm_response(self, brain, event_bus):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5026
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test that emotional state is updated from LLM responses."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5031
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify that the emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5036
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_relationship_update_after_interaction(self, brain):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5041
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test that relationship metrics are updated after interactions."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5046
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Mock the emotional processor and update_relationship
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5051
    SQL query detected - ensure parameterized queries are used
    Code: Code: }), patch.object(brain.emotional_memory, 'update_relationship', AsyncMock()) as mock_update:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5056
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify that update_relationship was called with positive deltas
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5061
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5066
    SQL query detected - ensure parameterized queries are used
    Code: Code: args, kwargs = mock_update.call_args
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5071
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Emit a value update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5076
    SQL query detected - ensure parameterized queries are used
    Code: Code: await brain.event_bus.emit("value.update", {
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5081
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Mock update_relationship
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5086
    SQL query detected - ensure parameterized queries are used
    Code: Code: with patch.object(brain.emotional_memory, 'update_relationship', AsyncMock()) as mock_update:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5091
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify that update_relationship was called to save final state
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5096
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5104
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5109
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertIn("emotional.update", self.event_bus._subscribers)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5114
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5119
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5124
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5129
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5134
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5139
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5144
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5149
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory._handle_emotional_update = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5154
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Emit an emotional update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5159
    SQL query detected - ensure parameterized queries are used
    Code: Code: await self.event_bus.emit("emotional.update", {"emotion": "joy", "value": 0.8})
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5164
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory._handle_emotional_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5169
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5174
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5182
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5187
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5195
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5200
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5205
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertIn("emotional.update", self.event_bus._subscribers)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5210
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Emit an emotional update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5215
    SQL query detected - ensure parameterized queries are used
    Code: Code: await self.event_bus.emit("emotional.update", {"emotion": "anger", "value": 0.8})
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5220
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def update_value_system():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5225
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.ethical_framework.update_value_system = AsyncMock(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5230
    SQL query detected - ensure parameterized queries are used
    Code: Code: side_effect=update_value_system
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5235
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update value system
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5240
    SQL query detected - ensure parameterized queries are used
    Code: Code: await self.brain.ethical_framework.update_value_system()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5245
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify that value system was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5253
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5261
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test that a service is auto-deregistered if not updated within the threshold
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5266
    SQL query detected - ensure parameterized queries are used
    Code: Code: and validate that the DatabaseManager can insert and fetch interactions."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5271
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Simulate that the service's last update occurred sufficiently in the past
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5276
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Insert an interaction record
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5281
    SQL query detected - ensure parameterized queries are used
    Code: Code: db.insert_interaction(test_data)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5286
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert record_found, "The inserted interaction data should be found in the database"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5294
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test that a service is auto-deregistered if no health update occurs within the threshold."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5302
    SQL query detected - ensure parameterized queries are used
    Code: Code: EventType.SYSTEM_IMPROVEMENT_UPDATE,
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5307
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert all(e.type == EventType.SYSTEM_IMPROVEMENT_UPDATE for e in events_received)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5312
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_analyze_and_update_error_patterns(improvement_system):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5317
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test error pattern analysis and strategy updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5322
    SQL query detected - ensure parameterized queries are used
    Code: Code: await improvement_system._analyze_and_update_error_patterns()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5327
    SQL query detected - ensure parameterized queries are used
    Code: Code: improvement_system.error_tracker.update_recovery_strategy.assert_called_once_with(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5332
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_analyze_and_update_emotional_patterns(improvement_system):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5337
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test emotional pattern analysis and parameter updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5342
    SQL query detected - ensure parameterized queries are used
    Code: Code: await improvement_system._analyze_and_update_emotional_patterns()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5347
    SQL query detected - ensure parameterized queries are used
    Code: Code: improvement_system.emotional_core.update_response_parameters.assert_called_once_with(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5355
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5363
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5371
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_delete_adapter(lora_manager):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5376
    SQL query detected - ensure parameterized queries are used
    Code: Code: name="adapter_to_delete",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5381
    SQL query detected - ensure parameterized queries are used
    Code: Code: description="Adapter to delete",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5386
    SQL query detected - ensure parameterized queries are used
    Code: Code: adapter_path = os.path.join(lora_manager.lora_dir, "adapter_to_delete")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5391
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Delete the adapter
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5396
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = await lora_manager.delete_adapter("adapter_to_delete")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5401
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check that the delete was successful
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5406
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Try to delete a non-existent adapter
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5411
    SQL query detected - ensure parameterized queries are used
    Code: Code: await lora_manager.delete_adapter("non_existent_adapter")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5419
    SQL query detected - ensure parameterized queries are used
    Code: Code: emotions.update(self.emotion_detector.detect_text_emotion(text))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5424
    SQL query detected - ensure parameterized queries are used
    Code: Code: emotions.update(self.emotion_detector.detect_audio_emotion(audio_data))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5429
    SQL query detected - ensure parameterized queries are used
    Code: Code: emotions.update(self.emotion_detector.detect_facial_emotion(image_data))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5434
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.personality_model.update(interaction)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5439
    SQL query detected - ensure parameterized queries are used
    Code: Code: def update(self, interaction):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5444
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Update personality state"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5452
    SQL query detected - ensure parameterized queries are used
    Code: Code: def delete(self, key):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5457
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Delete a key"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5462
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.sets[key].update(values)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5467
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.sorted_sets[key].update(mapping)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5475
    SQL query detected - ensure parameterized queries are used
    Code: Code: with tempfile.NamedTemporaryFile(suffix='.jpg', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5483
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5491
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, project_root)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5499
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5507
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test service heartbeat updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5515
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update skill levels
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5520
    SQL query detected - ensure parameterized queries are used
    Code: Code: curriculum_manager.update_skill_levels(task, True, 0.9)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5525
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update performance and select again
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5530
    SQL query detected - ensure parameterized queries are used
    Code: Code: meta_learner.update_strategy_performance(0.8)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5538
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify system state updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5546
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5551
    SQL query detected - ensure parameterized queries are used
    Code: Code: valid_command_json = '{"command": "delete_file", "args": "protected.txt"}'
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5556
    SQL query detected - ensure parameterized queries are used
    Code: Code: failure_message = "Failed to delete file: Permission denied"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5561
    SQL query detected - ensure parameterized queries are used
    Code: Code: final_response = brain.process_command("delete the protected file")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5566
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_cmd_processor.execute_command.assert_called_once_with("delete_file", "protected.txt")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5574
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5582
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify working memory was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5590
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5595
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_handle_delete_file(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5600
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test the internal _handle_delete_file method."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5605
    SQL query detected - ensure parameterized queries are used
    Code: Code: test_file = self.test_dir / "file_to_delete.txt"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5610
    SQL query detected - ensure parameterized queries are used
    Code: Code: test_file.touch() # Create the file to be deleted
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5615
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = self.cmd_processor._handle_delete_file(str(test_file))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5620
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertIn("Deleted file", result)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5625
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertFalse(test_file.exists(), "_handle_delete_file did not delete the file.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5633
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5638
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_05_delete_file_command_success(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5643
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test the 'delete file' command handler for successful deletion."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5648
    SQL query detected - ensure parameterized queries are used
    Code: Code: filename = "file_to_delete.txt"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5653
    SQL query detected - ensure parameterized queries are used
    Code: Code: command = f"delete file {filename}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5658
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertEqual(result, f"Deleted file: {expected_path}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5663
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_06_delete_file_not_found(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5668
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test the 'delete file' command when the file does not exist."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5673
    SQL query detected - ensure parameterized queries are used
    Code: Code: command = f"delete file {filename}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5678
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_07_delete_file_protected_path_failure(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5683
    SQL query detected - ensure parameterized queries are used
    Code: Code: command = f"delete file {protected_path}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5688
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_08_delete_file_decorator_error_handling(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5693
    SQL query detected - ensure parameterized queries are used
    Code: Code: command = f"delete file {filename}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5701
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5706
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update summary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5711
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update summary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5719
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_update_and_get_relationship_data(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5724
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.db_manager.update_relationship_data(user_id, relationship_type, trust_level, rapport_level)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5732
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_update_relationship_metrics(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5737
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Initial update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5742
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.memory.update_relationship_metrics(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5747
    SQL query detected - ensure parameterized queries are used
    Code: Code: action = "delete_user_data"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5755
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_01_emotional_state_update(self, event_bus):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5760
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update with positive emotion
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5765
    SQL query detected - ensure parameterized queries are used
    Code: Code: item_id = await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5770
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update with negative emotion
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5775
    SQL query detected - ensure parameterized queries are used
    Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5780
    SQL query detected - ensure parameterized queries are used
    Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5785
    SQL query detected - ensure parameterized queries are used
    Code: Code: await memory.update_relationship_context(entity_id, context)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5790
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update context
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5795
    SQL query detected - ensure parameterized queries are used
    Code: Code: update = {
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5800
    SQL query detected - ensure parameterized queries are used
    Code: Code: await memory.update_relationship_context(entity_id, update)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5805
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check updated context
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5810
    SQL query detected - ensure parameterized queries are used
    Code: Code: updated_context = await memory.get_relationship_context(entity_id)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5815
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert updated_context["trust_level"] == 0.9
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5820
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert len(updated_context["shared_experiences"]) == 3
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5825
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5830
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5835
    SQL query detected - ensure parameterized queries are used
    Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5840
    SQL query detected - ensure parameterized queries are used
    Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5845
    SQL query detected - ensure parameterized queries are used
    Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5850
    SQL query detected - ensure parameterized queries are used
    Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5858
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_personality_state_updates(self, emotional_service):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5863
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test personality state updates and persistence"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5868
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert final_state != initial_state  # State should update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5873
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Personality state updates validated")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5881
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_04_empathy_model_updates(self, processor):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5886
    SQL query detected - ensure parameterized queries are used
    Code: Code: await processor.update_empathy_model({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5891
    SQL query detected - ensure parameterized queries are used
    Code: Code: await processor.update_empathy_model({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5896
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5904
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5912
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5920
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5928
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check priorities were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5936
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.temp_config = tempfile.NamedTemporaryFile(delete=False, suffix='.json')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5941
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.temp_db = tempfile.NamedTemporaryFile(delete=False, suffix='.db')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5946
    SQL query detected - ensure parameterized queries are used
    Code: Code: with tempfile.NamedTemporaryFile(delete=False, suffix='.json') as temp_file:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5954
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.temp_db = tempfile.NamedTemporaryFile(delete=False, suffix='.db')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5959
    SQL query detected - ensure parameterized queries are used
    Code: Code: "delete user data without confirmation",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5964
    SQL query detected - ensure parameterized queries are used
    Code: Code: with tempfile.NamedTemporaryFile(delete=False, suffix='.json') as temp_file:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5969
    SQL query detected - ensure parameterized queries are used
    Code: Code: with tempfile.NamedTemporaryFile(delete=False, suffix='.json') as temp_file:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5977
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify emotional state update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5985
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert result['memory_updates']
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5990
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Get updated metrics
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5995
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify metrics were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6003
    SQL query detected - ensure parameterized queries are used
    Code: Code: """HealthMonitor should emit a *healthy* status update when the endpoint responds 200."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6011
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6019
    SQL query detected - ensure parameterized queries are used
    Code: Code: updated_items = await working_memory.get_active_items()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6024
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert len(updated_items) <= len(items)  # Should have decayed
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6029
    SQL query detected - ensure parameterized queries are used
    Code: Code: for old, new in zip(items, updated_items):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6037
    SQL query detected - ensure parameterized queries are used
    Code: Code: last_updated: float
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6042
    SQL query detected - ensure parameterized queries are used
    Code: Code: last_updated=time.time(),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6047
    SQL query detected - ensure parameterized queries are used
    Code: Code: last_updated=time.time(),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6055
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6063
    SQL query detected - ensure parameterized queries are used
    Code: Code: await brain.emotional_processor.update_emotional_state({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6071
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_event_bus.subscribe.assert_any_call("config.updated", arpeggiator._handle_config_updated)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6076
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_handle_config_updated(self, arpeggiator):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6081
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test handling configuration update events"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6086
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Replace update_configuration with a mock
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6091
    SQL query detected - ensure parameterized queries are used
    Code: Code: arpeggiator.update_configuration = MagicMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6096
    SQL query detected - ensure parameterized queries are used
    Code: Code: event_type="config.updated",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6101
    SQL query detected - ensure parameterized queries are used
    Code: Code: await arpeggiator._handle_config_updated(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6106
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify update_configuration was called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6111
    SQL query detected - ensure parameterized queries are used
    Code: Code: arpeggiator.update_configuration.assert_called_once_with({"sensitivity": 0.7})
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6116
    SQL query detected - ensure parameterized queries are used
    Code: Code: event_type="config.updated",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6121
    SQL query detected - ensure parameterized queries are used
    Code: Code: arpeggiator.update_configuration.reset_mock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6126
    SQL query detected - ensure parameterized queries are used
    Code: Code: await arpeggiator._handle_config_updated(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6131
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify update_configuration was not called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6136
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert not arpeggiator.update_configuration.called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6141
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_update_configuration(self, arpeggiator, mock_config_manager):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6146
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update configuration
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6151
    SQL query detected - ensure parameterized queries are used
    Code: Code: arpeggiator.update_configuration(new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6156
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify configuration was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6161
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify config manager was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6166
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_config_manager.update_config.assert_called_once_with("gesture_arpeggiator", new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6174
    SQL query detected - ensure parameterized queries are used
    Code: Code: event_bus.subscribe.assert_any_call("ui.context_changed", gesture_integration.update_ui_context)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6179
    SQL query detected - ensure parameterized queries are used
    Code: Code: event_bus.subscribe.assert_any_call("config.updated.gesture_integration", gesture_integration.update_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6184
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_update_ui_context(self, gesture_integration):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6189
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test UI context updates."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6194
    SQL query detected - ensure parameterized queries are used
    Code: Code: gesture_integration.update_ui_context(context_event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6199
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_update_config(self, gesture_integration):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6204
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test configuration updates."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6209
    SQL query detected - ensure parameterized queries are used
    Code: Code: gesture_integration.update_config(new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6217
    SQL query detected - ensure parameterized queries are used
    Code: Code: @patch('alejo.ui.pyside_ui.HolographicWidget.update')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6222
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_event_handler(self, mock_update):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6227
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6235
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6240
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check that config was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6245
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check that brain.update_config was called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6250
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_brain.update_config.assert_called_once_with(alejo_ui.config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6258
    SQL query detected - ensure parameterized queries are used
    Code: Code: service.update_arpeggiator_settings = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6263
    SQL query detected - ensure parameterized queries are used
    Code: Code: service.update_visualizer_settings = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6268
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify arpeggiator settings were updated with Joy parameters
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6273
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_arpeggiator_service.update_arpeggiator_settings.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6278
    SQL query detected - ensure parameterized queries are used
    Code: Code: args = mock_arpeggiator_service.update_arpeggiator_settings.call_args[0][0]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6283
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify visualizer settings were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6288
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_arpeggiator_service.update_visualizer_settings.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6293
    SQL query detected - ensure parameterized queries are used
    Code: Code: vis_args = mock_arpeggiator_service.update_visualizer_settings.call_args[0][0]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6298
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_arpeggiator_service.update_arpeggiator_settings.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6303
    SQL query detected - ensure parameterized queries are used
    Code: Code: args = mock_arpeggiator_service.update_arpeggiator_settings.call_args[0][0]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6308
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_arpeggiator_service.update_arpeggiator_settings.reset_mock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6316
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent.parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6321
    SQL query detected - ensure parameterized queries are used
    Code: Code: "page_title": "Test Page Updated",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6329
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent.parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6337
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6342
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check that last_used was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6350
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert sent_data["type"] == "config_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6355
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_handle_ui_update(websocket_handler, mock_websocket):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6360
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test handling of UI update events"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6365
    SQL query detected - ensure parameterized queries are used
    Code: Code: "update": {
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6370
    SQL query detected - ensure parameterized queries are used
    Code: Code: await websocket_handler._handle_ui_update(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6375
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert sent_data["type"] == "ui_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6380
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert sent_data["update"] == event["update"]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6385
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_handle_config_update(websocket_handler, mock_websocket):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6390
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test handling of configuration update events"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6395
    SQL query detected - ensure parameterized queries are used
    Code: Code: await websocket_handler._handle_config_update(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6400
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert sent_data["type"] == "config_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6404
    SQL query detected - ensure parameterized queries are used
    Code: File: update_manager.py
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6408
    SQL query detected - ensure parameterized queries are used
    Code: Code: ALEJO Update Manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6413
    SQL query detected - ensure parameterized queries are used
    Code: Code: Automatically checks for and applies updates before ALEJO starts.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6418
    SQL query detected - ensure parameterized queries are used
    Code: Code: logging.FileHandler("alejo_update.log"),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6423
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger = logging.getLogger("alejo.update_manager")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6428
    SQL query detected - ensure parameterized queries are used
    Code: Code: class UpdateManager:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6433
    SQL query detected - ensure parameterized queries are used
    Code: Code: Manages automatic updates for ALEJO system
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6438
    SQL query detected - ensure parameterized queries are used
    Code: Code: This class checks for updates from the main repository and applies them
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6443
    SQL query detected - ensure parameterized queries are used
    Code: Code: Initialize the Update Manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6448
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.update_cache_file = self.alejo_dir / ".update_cache"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6453
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.update_lock_file = self.alejo_dir / ".update_lock"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6458
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.force_update = self.config.get("force_update", False)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6463
    SQL query detected - ensure parameterized queries are used
    Code: Code: def should_check_for_updates(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6468
    SQL query detected - ensure parameterized queries are used
    Code: Code: Determine if we should check for updates based on last check time
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6473
    SQL query detected - ensure parameterized queries are used
    Code: Code: if self.force_update:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6478
    SQL query detected - ensure parameterized queries are used
    Code: Code: if not self.update_cache_file.exists():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6483
    SQL query detected - ensure parameterized queries are used
    Code: Code: with open(self.update_cache_file, "r") as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6488
    SQL query detected - ensure parameterized queries are used
    Code: Code: def update_check_cache(self, update_available=False, version=None):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6493
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Update the cache file with current check information"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6498
    SQL query detected - ensure parameterized queries are used
    Code: Code: "update_available": update_available,
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6503
    SQL query detected - ensure parameterized queries are used
    Code: Code: with open(self.update_cache_file, "w") as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6508
    SQL query detected - ensure parameterized queries are used
    Code: Code: def check_for_updates(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6513
    SQL query detected - ensure parameterized queries are used
    Code: Code: Check if updates are available
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6518
    SQL query detected - ensure parameterized queries are used
    Code: Code: tuple: (update_available, current_version, latest_version)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6523
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.warning("Not a git repository, cannot check for updates")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6528
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Create a lock file to prevent concurrent update checks
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6533
    SQL query detected - ensure parameterized queries are used
    Code: Code: if self.update_lock_file.exists():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6538
    SQL query detected - ensure parameterized queries are used
    Code: Code: if time.time() - os.path.getmtime(self.update_lock_file) > 600:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6543
    SQL query detected - ensure parameterized queries are used
    Code: Code: os.remove(self.update_lock_file)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6548
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Update check already in progress, skipping")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6553
    SQL query detected - ensure parameterized queries are used
    Code: Code: with open(self.update_lock_file, "w") as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6558
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_available = current_version != latest_version
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6563
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.update_check_cache(update_available, current_version)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6568
    SQL query detected - ensure parameterized queries are used
    Code: Code: return update_available, current_version, latest_version
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6573
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.error(f"Error checking for updates: {str(e)}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6578
    SQL query detected - ensure parameterized queries are used
    Code: Code: if self.update_lock_file.exists():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6583
    SQL query detected - ensure parameterized queries are used
    Code: Code: os.remove(self.update_lock_file)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6588
    SQL query detected - ensure parameterized queries are used
    Code: Code: def apply_update(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6593
    SQL query detected - ensure parameterized queries are used
    Code: Code: Apply available updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6598
    SQL query detected - ensure parameterized queries are used
    Code: Code: bool: True if update was successful, False otherwise
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6603
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.warning("Not a git repository, cannot apply updates")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6608
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.error(f"Error pulling updates: {result.stderr}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6613
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update database schema if needed
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6618
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.update_database_schema()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6623
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Update completed successfully")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6628
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.error(f"Error applying update: {str(e)}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6633
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Restore ALEJO from backup in case of update failure"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6638
    SQL query detected - ensure parameterized queries are used
    Code: Code: def update_database_schema(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6643
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Update database schema if necessary"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6648
    SQL query detected - ensure parameterized queries are used
    Code: Code: def run_update_check(self, auto_apply=True):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6653
    SQL query detected - ensure parameterized queries are used
    Code: Code: Run a full update check and optionally apply updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6658
    SQL query detected - ensure parameterized queries are used
    Code: Code: auto_apply: Whether to automatically apply updates if available
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6663
    SQL query detected - ensure parameterized queries are used
    Code: Code: bool: True if system is up to date, False if update failed
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6668
    SQL query detected - ensure parameterized queries are used
    Code: Code: if not self.should_check_for_updates():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6673
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Update check was performed recently, skipping")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6678
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Checking for ALEJO updates")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6683
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_available, current_version, latest_version = self.check_for_updates()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6688
    SQL query detected - ensure parameterized queries are used
    Code: Code: if update_available:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6693
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info(f"Update available: {current_version[:7]} -> {latest_version[:7]}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6698
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Applying update automatically")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6703
    SQL query detected - ensure parameterized queries are used
    Code: Code: return self.apply_update()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6708
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Update available but not applying automatically")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6713
    SQL query detected - ensure parameterized queries are used
    Code: Code: parser = argparse.ArgumentParser(description="ALEJO Update Manager")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6718
    SQL query detected - ensure parameterized queries are used
    Code: Code: parser.add_argument("--check-only", action="store_true", help="Only check for updates, don't apply them")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6723
    SQL query detected - ensure parameterized queries are used
    Code: Code: parser.add_argument("--force", action="store_true", help="Force update check even if done recently")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6728
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Create update manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6733
    SQL query detected - ensure parameterized queries are used
    Code: Code: config = {"force_update": args.force}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6738
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6743
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Run update check
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6748
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager.run_update_check(auto_apply=not args.check_only)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6756
    SQL query detected - ensure parameterized queries are used
    Code: Code: await r.delete(test_key)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6764
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(script_path).parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6772
    SQL query detected - ensure parameterized queries are used
    Code: Code: Y]O?gjOEb?0)r   id  r  )r#   r#   gh㈵>g7P>{r   )r#   r#   gh㈵>g7P>0)r   i  	fix_flags)r   r   guR#>g&p>{r   )r   r   guR#>g&p>0)r   i  r   )r   r   g>g+|c?{r   )r   r   g>g+|c?0)rS   rT   rU   )r)   r)   g0D4>g =T?{0)DC:\Users\magic\AppData\Local\Programs\Python\Python39\lib\weakref.pyi   r   )r)   r)   glӎ>g4vxU>{rY   )r)   r)   glӎ>g4vxU>0)r  i"  update)r)   r)   gavt>g:ܳS>{)r  r  r   )r)   r)   gavt>g:ܳS>0)FC:\Users\magic\AppData\Local\Programs\Python\Python39\lib\threading.pyr   RLock)r#   r#   gkNu>gkNu>{rZ   iv  
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6780
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6785
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Process the command and update the log"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6790
    SQL query detected - ensure parameterized queries are used
    Code: Code: def _update():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6795
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.log_text.insert(tk.END, message + "\n\n", color)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6800
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update in the main thread
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6805
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.root.after(0, _update)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6810
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.log_text.delete(1.0, tk.END)
    Remediation: Use parameterized queries with placeholders for all user input

[LOW] PseudoRandom line 3186
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: Code: op = random.choice(['command', 'event', 'memory'])
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 3191
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: Code: 'emotional_state': {'valence': random.random()}
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 3196
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: Code: if random.random() < 0.3:  # 30% chance of rate limit
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 3201
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: Code: if random.random() < 0.5:  # 50% chance of network error
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 3206
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: Code: {"cascade_id": random.randint(1, 1000)}
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 3724
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: # Replace random.random() with secrets.randbelow() / 2**32 or similar
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 3729
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: # Replace random.randint with secrets.randbelow
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 3734
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: # Replace random.choice with secrets.choice
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 6818
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: if random.random() < 0.3:  # 30% chance of rate limit
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 6823
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: if random.random() < 0.5:  # 50% chance of network error
    Remediation: Use secrets module for security-sensitive randomness needs


File: test_reports\security_scan_20250701_063114.txt
--------------------------------------------------------------------------------
[HIGH] DynamicCodeExecution line 17
    Use of eval() can lead to code injection
    Code: Use of eval() can lead to code injection
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 18
    Use of eval() can lead to code injection
    Code: Code: 'Use of eval() can lead to code injection',
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 35
    Use of eval() can lead to code injection
    Code: Use of eval() can lead to code injection
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 36
    Use of eval() can lead to code injection
    Code: Code: Use of eval() can lead to code injection
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 40
    Use of eval() can lead to code injection
    Code: Use of eval() can lead to code injection
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 41
    Use of eval() can lead to code injection
    Code: Code: Code: 'Use of eval() can lead to code injection',
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 45
    Use of eval() can lead to code injection
    Code: Use of eval() can lead to code injection
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 46
    Use of eval() can lead to code injection
    Code: Code: Use of eval() can lead to code injection
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 50
    Use of eval() can lead to code injection
    Code: Use of eval() can lead to code injection
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 51
    Use of eval() can lead to code injection
    Code: Code: Code: Use of eval() can lead to code injection
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 55
    Use of eval() can lead to code injection
    Code: Use of eval() can lead to code injection
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 56
    Use of eval() can lead to code injection
    Code: Code: Use of eval() can lead to code injection
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 60
    Use of eval() can lead to code injection
    Code: Use of eval() can lead to code injection
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 61
    Use of eval() can lead to code injection
    Code: Code: Code: Code: 'Use of eval() can lead to code injection',
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 6453
    Use of eval() can lead to code injection
    Code: Use of eval() can lead to code injection
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 6454
    Use of eval() can lead to code injection
    Code: Code: Use of eval() can lead to code injection
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 6458
    Use of eval() can lead to code injection
    Code: Use of eval() can lead to code injection
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 6459
    Use of eval() can lead to code injection
    Code: Code: Code: 'Use of eval() can lead to code injection',
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 9636
    Use of eval() can lead to code injection
    Code: Use of eval() can lead to code injection
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 9637
    Use of eval() can lead to code injection
    Code: Code: """Validate that eval() is not used insecurely"""
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 9641
    Use of eval() can lead to code injection
    Code: Use of eval() can lead to code injection
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 9642
    Use of eval() can lead to code injection
    Code: Code: logger.info("Validating eval() usage...")
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 9646
    Use of eval() can lead to code injection
    Code: Use of eval() can lead to code injection
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 9647
    Use of eval() can lead to code injection
    Code: Code: # Look for eval() usage
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 9651
    Use of eval() can lead to code injection
    Code: Use of eval() can lead to code injection
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 9652
    Use of eval() can lead to code injection
    Code: Code: 'issue': 'Unsafe eval() usage'
    Remediation: Replace with safer alternatives like JSON parsing or static code

[MEDIUM] SafeEvalAlternative line 22
    Using ast.literal_eval (safe alternative to eval)
    Code: Using ast.literal_eval (safe alternative to eval)
    Remediation: This is a safe alternative to eval, but verify input is properly validated

[MEDIUM] SafeEvalAlternative line 23
    Using ast.literal_eval (safe alternative to eval)
    Code: Code: 'Using ast.literal_eval (safe alternative to eval)',
    Remediation: This is a safe alternative to eval, but verify input is properly validated

[MEDIUM] SQLQuery line 28
    SQL query detected - ensure parameterized queries are used
    Code: Code: 'py_sql_query': (r'(?:execute|executemany)\s*\(\s*["\']SELECT|UPDATE|DELETE|INSERT',
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 66
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 'py_sql_query': (r'(?:execute|executemany)\s*\(\s*["\']SELECT|UPDATE|DELETE|INSERT',
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 71
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: 'py_sql_query': (r'(?:execute|executemany)\s*\(\s*["\']SELECT|UPDATE|DELETE|INSERT',
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 76
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: File: .update_cache
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 81
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: {"last_check": "2025-06-30T23:52:42.890553", "update_available": false, "current_version": "abcd1234"}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 86
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: - Updates services with zero downtime
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 91
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: - Dependency updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 96
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: * Regular model updates containing collective insights
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 101
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: * User control over update frequency and domains
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 106
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: * Users can delete their local learning data at any time
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 111
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: RUN apt-get update && apt-get install -y \
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 116
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: - Manages dynamic UI updates and DOM manipulation for gesture-enabled elements.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 121
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: - Provides methods to update, enable, or disable elements based on their gesture properties.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 126
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: - CI/CD pipelines have been updated to include backend validation, integration testing, and security compliance.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 131
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: - **Web Interface**: Modern, responsive web interface with real-time updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 136
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: - **ServiceRegistry**: Manages service registration and health updates, providing a single source of truth for service status.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 141
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: 3. Update the frontend UI in `alejo/templates/gesture_enabled_interface.html`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 146
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: {"action": "delete_file"},
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 151
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: 5. **Updates**: Keep all dependencies up to date.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 156
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: File: alejo_update.log
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 161
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: 2025-06-30 23:52:21,057 - alejo.update_manager - INFO - Pulling latest changes from repository
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 166
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: 2025-06-30 23:52:21,058 - alejo.update_manager - ERROR - Error pulling updates: Failed to pull
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 171
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: 2025-06-30 23:52:21,062 - alejo.update_manager - INFO - Pulling latest changes from repository
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 176
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: 2025-06-30 23:52:21,063 - alejo.update_manager - INFO - Updating dependencies
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 181
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: 2025-06-30 23:52:21,063 - alejo.update_manager - INFO - Update completed successfully
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 186
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: 2025-06-30 23:52:21,068 - alejo.update_manager - INFO - Backing up current ALEJO installation to C:\Users\magic\AppData\Local\Temp\alejo_backup_h5jwy8dw
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 191
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: 2025-06-30 23:52:21,083 - alejo.update_manager - INFO - Restoring ALEJO from backup C:\Users\magic\AppData\Local\Temp\alejo_backup_h5jwy8dw
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 196
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: 2025-06-30 23:52:42,882 - alejo.update_manager - ERROR - Error restoring backup: [WinError 32] The process cannot access the file because it is being used by another process: 'C:\\Users\\magic\\CascadeProjects\\ALEJO\\alejo_update.log'
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 201
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: - Update references to use the new module
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 206
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: - Update references to use the new module
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 211
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: 4. **Update Tests**:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 216
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: 5. **Update Documentation**:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 221
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: - Update user guide
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 226
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: 2. Update imports to use package structure
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 231
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: 3. Update imports to use package structure
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 236
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, str(self.script_path.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 241
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 246
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 251
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 256
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: 5. **Brain Integration**: Update ALEJOBrain and other components to automatically self-register with the ServiceRegistry and intercommunicate via the EventBus.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 261
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: - Create secure update mechanisms
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 266
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: File: docs\AUTO_UPDATE_README.md
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 271
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # ALEJO Automatic Update System
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 276
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: This document explains the automatic update system implemented in ALEJO to ensure users always have the latest security patches and features.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 281
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: The ALEJO update system performs the following operations:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 286
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: 1. **Pre-launch Update Check**: Before ALEJO starts, it automatically checks for updates from the main repository.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 291
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: 2. **Secure Update Process**:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 296
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: - Creates a backup of the current installation before applying any updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 301
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: - Updates the codebase from the repository
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 306
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: - Updates dependencies if necessary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 311
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: - Rolls back to the backup if any errors occur during the update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 316
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: 3. **Scheduled Checks**: Updates are checked at configurable intervals (default: every 4 hours) to avoid excessive network traffic.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 321
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: The update system works automatically and requires no user intervention. However, several command-line options are available:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 326
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Normal startup with automatic update check
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 331
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Skip update check during startup
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 336
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: python start_alejo_with_gestures.py --skip-updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 341
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Manually check for updates without starting ALEJO
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 346
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: python update_manager.py --check-only
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 351
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Force update check regardless of when the last check occurred
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 356
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: python update_manager.py --force
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 361
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: The update system can be configured through environment variables:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 366
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: - `ALEJO_UPDATE_INTERVAL`: Set the minimum hours between update checks (default: 4)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 371
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: If you encounter issues with the automatic update system:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 376
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: 1. Check the log file (`alejo_update.log`) for detailed error messages
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 381
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: 2. Try running a manual update with `python update_manager.py --force`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 386
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: 3. If updates consistently fail, you can bypass them with `--skip-updates` and update manually
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 391
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: The automatic update system enhances ALEJO's security by ensuring users always have the latest security patches. The system:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 396
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: - Creates backups before applying updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 401
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: - Maintains a log of all update operations
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 406
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: To extend or modify the update system:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 411
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: 1. The core functionality is in `update_manager.py`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 416
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: 2. Test cases are available in `test_update_manager.py`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 421
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: 3. The update system is integrated into ALEJO's startup process in `start_alejo_with_gestures.py`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 426
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: python -m unittest test_update_manager.py
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 431
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: - **Event-Driven Updates**: Computing only when necessary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 436
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: - **Processing Efficiency**: Neural updates per second
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 441
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: - **Modularity**: Components are well-separated, making it easier to update individual parts.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 446
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: - Update plugins to compatible versions
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 451
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 456
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Insert before the first import
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 461
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Find a good place to insert the polyfill
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 466
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Try to insert after imports or at the beginning of the file
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 471
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Insert at the beginning of the file
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 476
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Insert catch block before the last closing brace
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 481
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: progress_bar.update(len(data))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 486
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sha256_hash.update(byte_block)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 491
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: 1. Update images:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 496
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: 1. Update Istio:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 501
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: 2. Update monitoring stack:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 506
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: "last_updated": "2025-06-17T06:34:00.742317"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 511
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: 2025-06-11 07:31:08,226 - __main__ - INFO - Updated index.html
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 516
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: 1. Review and update priorities weekly
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 521
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, str(self.project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 526
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, str(self.project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 531
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Update results
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 536
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Update results
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 541
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: def update_html_references(self, js_dir, css_dir):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 546
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """Update HTML templates to use optimized files"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 551
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Update JS references
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 556
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Update CSS references
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 561
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Write updated content
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 566
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: logger.info(f"Updated {html_file.name}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 571
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Update HTML references
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 576
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: optimizer.update_html_references(js_dir, css_dir)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 581
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Send status updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 586
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: logger.warning(f"{env_file} already exists. Please delete it first if you want to create a new one.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 591
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, str(PROJECT_ROOT))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 596
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 601
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.dirname(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 606
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 611
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, str(Path(__file__).resolve().parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 616
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Update improvements status in data manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 621
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: await data_manager.update_improvements(applied_improvements)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 626
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: logger.info(f"Updated status for {len(applied_improvements)} improvements")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 631
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, project_root)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 636
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, str(Path(__file__).resolve().parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 641
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, str(script_dir.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 646
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, str(Path(__file__).resolve().parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 651
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 656
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """Update test configuration"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 661
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Update database paths in config
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 666
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: logger.info("Updated test configuration")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 671
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, str(PROJECT_ROOT))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 676
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Update config with file values
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 681
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self._update_dict(config, file_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 686
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: def _update_dict(self, target: Dict, source: Dict) -> None:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 691
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: Recursively update dictionary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 696
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self._update_dict(target[key], value)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 701
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Import update manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 706
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: from update_manager import UpdateManager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 711
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: UPDATE_MANAGER_AVAILABLE = True
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 716
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: UPDATE_MANAGER_AVAILABLE = False
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 721
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Add update-related command line arguments
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 726
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: "--skip-updates",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 731
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: help="Skip checking for updates before starting"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 736
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Check for updates before starting services
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 741
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: if UPDATE_MANAGER_AVAILABLE and not args.skip_updates:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 746
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: logger.info("Checking for ALEJO updates...")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 751
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: update_manager = UpdateManager()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 756
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: update_success = update_manager.run_update_check(auto_apply=True)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 761
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: if not update_success:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 766
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: logger.error("Update process encountered errors. Starting with current version.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 771
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: logger.info("Update check completed successfully.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 776
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: logger.error(f"Error during update process: {str(e)}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 781
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, str(PROJECT_ROOT))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 786
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 791
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Update the timestamp
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 796
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Update default URLs if provided
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 801
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Update the timestamp
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 806
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Check updated allocations
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 811
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: logger.info(f"Updated allocations: {allocations}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 816
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: File: test_update_manager.py
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 821
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: Test script for ALEJO Update Manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 826
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: This script tests the functionality of the update manager to ensure it works correctly.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 831
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Import the update manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 836
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: from update_manager import UpdateManager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 841
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: class TestUpdateManager(unittest.TestCase):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 846
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """Test cases for the ALEJO Update Manager"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 851
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.test_dir = tempfile.mkdtemp(prefix="alejo_update_test_")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 856
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: "force_update": True
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 861
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 866
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.assertTrue(update_manager.is_git_repo())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 871
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.assertFalse(update_manager.is_git_repo())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 876
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: def test_check_for_updates_no_updates(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 881
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """Test checking for updates when none are available"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 886
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 891
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: update_available, current, latest = update_manager.check_for_updates()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 896
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.assertFalse(update_available)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 901
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: def test_check_for_updates_available(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 906
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """Test checking for updates when updates are available"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 911
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 916
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: update_available, current, latest = update_manager.check_for_updates()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 921
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.assertTrue(update_available)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 926
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 931
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: backup_dir = update_manager.backup_current_version()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 936
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: update_manager.restore_backup(backup_dir)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 941
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: def test_apply_update_success(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 946
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """Test successful update application"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 951
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: mock.Mock(stdout="Updated files", stderr="", returncode=0),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 956
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 961
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: UpdateManager, 'backup_current_version',
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 966
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Create requirements.txt for testing dependency updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 971
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: result = update_manager.apply_update()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 976
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: def test_apply_update_failure(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 981
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """Test failed update application"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 986
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 991
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: UpdateManager, 'backup_current_version',
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 996
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: with mock.patch.object(UpdateManager, 'restore_backup') as mock_restore:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1001
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: result = update_manager.apply_update()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1006
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: def test_should_check_for_updates(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1011
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """Test the logic for determining if updates should be checked"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1016
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Force update should always return True
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1021
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: config = {"force_update": True, "check_interval_hours": 24}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1026
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1031
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.assertTrue(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1036
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: config = {"force_update": False, "check_interval_hours": 24}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1041
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1046
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.assertTrue(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1051
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: update_manager.update_check_cache()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1056
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.assertFalse(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1061
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: config = {"force_update": False, "check_interval_hours": 0}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1066
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1071
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: update_manager.update_check_cache()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1076
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.assertTrue(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1081
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Test state updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1086
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: operation="update_state",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1091
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: async def update_state():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1096
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: await emotional_core.update_emotional_state(test_input)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1101
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: update_result = await update_state()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1106
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: assert update_result.mean_time < 0.02, "State update too slow"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1111
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: emotional_core.update_emotional_state({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1116
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Verify emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1121
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: brain.emotional_processor.update_emotional_state.assert_called()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1126
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Should update emotional state and respond empathetically
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1131
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: brain.emotional_processor.update_emotional_state.assert_called()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1136
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1141
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: async def test_brain_context_update(multimodal_integration, mock_brain, temp_image):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1146
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Check that brain context was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1151
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1156
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1161
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1166
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: await event_bus.subscribe(EventType.ADAPTATION_UPDATED, collect_events)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1171
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: assert any(e.type == EventType.ADAPTATION_UPDATED for e in events)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1176
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: adaptation_event = next(e for e in events if e.type == EventType.ADAPTATION_UPDATED)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1181
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Verify emotional trajectory was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1186
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Verify topic was updated and depth reset
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1191
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: def test_update_configuration(self, proactive_engine, mock_config_manager):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1196
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Update configuration
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1201
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: proactive_engine.update_configuration(new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1206
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Verify configuration was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1211
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Verify config manager was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1216
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: mock_config_manager.update_config.assert_called_once_with("cognitive", new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1221
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: manager.update_improvement_status = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1226
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: data_manager.update_improvement_status.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1231
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: data_manager.update_improvement_status.assert_not_called()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1236
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1241
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1246
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1251
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1256
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: mock_repo.return_value.delete_head.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1261
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1266
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1271
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1276
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: Event(EventType.SYSTEM, {"status": "System update"}, priority=2),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1281
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """Test advanced health check metrics and updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1286
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Verify health metrics were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1291
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: service_mesh._service_dependencies.update({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1296
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: if event.data.get("action") == "health_update":
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1301
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: assert event.data["action"] == "health_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1306
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: if event.data.get("action") == "dependency_update":
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1311
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Mock health checks to update dependencies
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1316
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: async def test_service_updates_subscription(registry):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1321
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """Test service update notifications"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1326
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Subscribe to updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1331
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Wait for the feedback to update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1336
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1341
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Wait for sentiment score to update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1346
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: type=EventType.EMOTIONAL_STATE_UPDATE,
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1351
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: events = event_bus.get_recent_events(EventType.EMOTIONAL_STATE_UPDATE)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1356
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Verify personality traits were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1361
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Simulate an emotional state update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1366
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: "action": "state_update",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1371
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Verify emotional processor was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1376
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: assert emotional_integration.emotional_processor.update_emotional_state.called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1381
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: interaction storage, relationship updates, value system storage, and event handling.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1386
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Verify that the state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1391
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Verify that the state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1396
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: async def test_update_relationship(self, emotional_memory, event_bus, memory_service):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1401
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Update relationship
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1406
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: await emotional_memory.update_relationship(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1411
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: memory_service.update_relationship_metrics.assert_called_once_with(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1416
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: assert event_bus.emit.call_count == 2  # First for init, second for update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1421
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: assert args[0] == "emotional.memory.relationship_updated"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1426
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: assert args[0] == "emotional.memory.value_updated"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1431
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Verify that the value was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1436
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Verify that the state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1441
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Test emotional update handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1446
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: await emotional_memory._handle_emotional_update(event_data)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1451
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: memory_service.update_relationship_metrics.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1456
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Test value update handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1461
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: await emotional_memory._handle_value_update(event_data)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1466
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1471
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Test update_emotional_memory event handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1476
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: result = await emotional_integration._handle_update_emotional_memory({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1481
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Verify memory update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1486
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Verify interaction timing updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1491
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Verify memory and learning updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1496
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1501
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: def update_principle_weight(self, principle, weight):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1506
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """Update principle weight"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1511
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: async def test_update_ethical_principle(ethical_integration, mock_ethical_framework):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1516
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Test valid update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1521
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: result = await ethical_integration.update_ethical_principle(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1526
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: result = await ethical_integration.update_ethical_principle(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1531
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: with patch.object(mock_ethical_framework, 'update_principle_weight', side_effect=ValueError("Unknown principle")):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1536
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: result = await ethical_integration.update_ethical_principle(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1541
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Test update_ethical_principle event handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1546
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: result = await ethical_integration._handle_update_ethical_principle({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1551
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1556
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1561
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1566
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: def test_delete_preset(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1571
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Delete the preset
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1576
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.preset_manager.delete_preset(test_preset["name"])
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1581
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Verify the preset was deleted
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1586
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: temp_db = tempfile.NamedTemporaryFile(delete=False, suffix='.db')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1591
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: async def test_emotional_state_update_from_llm_response(self, brain, event_bus):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1596
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """Test that emotional state is updated from LLM responses."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1601
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Verify that the emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1606
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: async def test_relationship_update_after_interaction(self, brain):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1611
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """Test that relationship metrics are updated after interactions."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1616
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Mock the emotional processor and update_relationship
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1621
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: }), patch.object(brain.emotional_memory, 'update_relationship', AsyncMock()) as mock_update:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1626
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Verify that update_relationship was called with positive deltas
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1631
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: mock_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1636
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: args, kwargs = mock_update.call_args
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1641
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Emit a value update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1646
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: await brain.event_bus.emit("value.update", {
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1651
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Mock update_relationship
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1656
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: with patch.object(brain.emotional_memory, 'update_relationship', AsyncMock()) as mock_update:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1661
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Verify that update_relationship was called to save final state
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1666
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: mock_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1671
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1676
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.assertIn("emotional.update", self.event_bus._subscribers)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1681
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1686
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1691
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1696
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1701
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1706
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1711
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1716
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.brain.emotional_memory._handle_emotional_update = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1721
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Emit an emotional update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1726
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: await self.event_bus.emit("emotional.update", {"emotion": "joy", "value": 0.8})
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1731
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.brain.emotional_memory._handle_emotional_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1736
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1741
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1746
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1751
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1756
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1761
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1766
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.assertIn("emotional.update", self.event_bus._subscribers)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1771
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Emit an emotional update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1776
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: await self.event_bus.emit("emotional.update", {"emotion": "anger", "value": 0.8})
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1781
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: async def update_value_system():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1786
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.brain.ethical_framework.update_value_system = AsyncMock(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1791
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: side_effect=update_value_system
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1796
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Update value system
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1801
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: await self.brain.ethical_framework.update_value_system()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1806
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Verify that value system was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1811
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1816
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """Test that a service is auto-deregistered if not updated within the threshold
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1821
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: and validate that the DatabaseManager can insert and fetch interactions."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1826
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Simulate that the service's last update occurred sufficiently in the past
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1831
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Insert an interaction record
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1836
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: db.insert_interaction(test_data)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1841
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: assert record_found, "The inserted interaction data should be found in the database"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1846
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """Test that a service is auto-deregistered if no health update occurs within the threshold."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1851
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: EventType.SYSTEM_IMPROVEMENT_UPDATE,
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1856
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: assert all(e.type == EventType.SYSTEM_IMPROVEMENT_UPDATE for e in events_received)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1861
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: async def test_analyze_and_update_error_patterns(improvement_system):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1866
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """Test error pattern analysis and strategy updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1871
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: await improvement_system._analyze_and_update_error_patterns()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1876
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: improvement_system.error_tracker.update_recovery_strategy.assert_called_once_with(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1881
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: async def test_analyze_and_update_emotional_patterns(improvement_system):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1886
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """Test emotional pattern analysis and parameter updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1891
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: await improvement_system._analyze_and_update_emotional_patterns()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1896
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: improvement_system.emotional_core.update_response_parameters.assert_called_once_with(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1901
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1906
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1911
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: async def test_delete_adapter(lora_manager):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1916
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: name="adapter_to_delete",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1921
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: description="Adapter to delete",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1926
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: adapter_path = os.path.join(lora_manager.lora_dir, "adapter_to_delete")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1931
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Delete the adapter
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1936
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: result = await lora_manager.delete_adapter("adapter_to_delete")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1941
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Check that the delete was successful
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1946
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Try to delete a non-existent adapter
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1951
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: await lora_manager.delete_adapter("non_existent_adapter")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1956
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: emotions.update(self.emotion_detector.detect_text_emotion(text))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1961
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: emotions.update(self.emotion_detector.detect_audio_emotion(audio_data))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1966
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: emotions.update(self.emotion_detector.detect_facial_emotion(image_data))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1971
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.personality_model.update(interaction)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1976
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: def update(self, interaction):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1981
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """Update personality state"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1986
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: def delete(self, key):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1991
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """Delete a key"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1996
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.sets[key].update(values)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2001
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.sorted_sets[key].update(mapping)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2006
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: with tempfile.NamedTemporaryFile(suffix='.jpg', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2011
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2016
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, project_root)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2021
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2026
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """Test service heartbeat updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2031
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Update skill levels
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2036
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: curriculum_manager.update_skill_levels(task, True, 0.9)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2041
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Update performance and select again
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2046
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: meta_learner.update_strategy_performance(0.8)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2051
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Verify system state updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2056
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2061
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: valid_command_json = '{"command": "delete_file", "args": "protected.txt"}'
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2066
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: failure_message = "Failed to delete file: Permission denied"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2071
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: final_response = brain.process_command("delete the protected file")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2076
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: mock_cmd_processor.execute_command.assert_called_once_with("delete_file", "protected.txt")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2081
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2086
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Verify working memory was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2091
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2096
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: def test_handle_delete_file(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2101
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """Test the internal _handle_delete_file method."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2106
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: test_file = self.test_dir / "file_to_delete.txt"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2111
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: test_file.touch() # Create the file to be deleted
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2116
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: result = self.cmd_processor._handle_delete_file(str(test_file))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2121
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.assertIn("Deleted file", result)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2126
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.assertFalse(test_file.exists(), "_handle_delete_file did not delete the file.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2131
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2136
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: def test_05_delete_file_command_success(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2141
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """Test the 'delete file' command handler for successful deletion."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2146
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: filename = "file_to_delete.txt"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2151
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: command = f"delete file {filename}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2156
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.assertEqual(result, f"Deleted file: {expected_path}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2161
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: def test_06_delete_file_not_found(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2166
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """Test the 'delete file' command when the file does not exist."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2171
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: command = f"delete file {filename}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2176
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: def test_07_delete_file_protected_path_failure(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2181
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: command = f"delete file {protected_path}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2186
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: def test_08_delete_file_decorator_error_handling(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2191
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: command = f"delete file {filename}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2196
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2201
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Update summary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2206
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Update summary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2211
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: def test_update_and_get_relationship_data(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2216
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.db_manager.update_relationship_data(user_id, relationship_type, trust_level, rapport_level)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2221
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: def test_update_relationship_metrics(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2226
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Initial update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2231
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.memory.update_relationship_metrics(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2236
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: action = "delete_user_data"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2241
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: async def test_01_emotional_state_update(self, event_bus):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2246
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Update with positive emotion
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2251
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: item_id = await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2256
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Update with negative emotion
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2261
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2266
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2271
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: await memory.update_relationship_context(entity_id, context)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2276
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Update context
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2281
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: update = {
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2286
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: await memory.update_relationship_context(entity_id, update)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2291
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Check updated context
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2296
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: updated_context = await memory.get_relationship_context(entity_id)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2301
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: assert updated_context["trust_level"] == 0.9
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2306
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: assert len(updated_context["shared_experiences"]) == 3
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2311
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Check emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2316
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Check emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2321
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2326
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2331
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2336
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2341
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: def test_personality_state_updates(self, emotional_service):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2346
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """Test personality state updates and persistence"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2351
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: assert final_state != initial_state  # State should update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2356
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: logger.info("Personality state updates validated")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2361
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: async def test_04_empathy_model_updates(self, processor):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2366
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: await processor.update_empathy_model({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2371
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: await processor.update_empathy_model({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2376
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Verify emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2381
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2386
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2391
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2396
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Check priorities were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2401
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.temp_config = tempfile.NamedTemporaryFile(delete=False, suffix='.json')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2406
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.temp_db = tempfile.NamedTemporaryFile(delete=False, suffix='.db')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2411
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: with tempfile.NamedTemporaryFile(delete=False, suffix='.json') as temp_file:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2416
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.temp_db = tempfile.NamedTemporaryFile(delete=False, suffix='.db')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2421
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: "delete user data without confirmation",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2426
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: with tempfile.NamedTemporaryFile(delete=False, suffix='.json') as temp_file:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2431
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: with tempfile.NamedTemporaryFile(delete=False, suffix='.json') as temp_file:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2436
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Verify emotional state update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2441
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: assert result['memory_updates']
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2446
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Get updated metrics
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2451
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Verify metrics were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2456
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """HealthMonitor should emit a *healthy* status update when the endpoint responds 200."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2461
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2466
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: updated_items = await working_memory.get_active_items()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2471
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: assert len(updated_items) <= len(items)  # Should have decayed
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2476
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: for old, new in zip(items, updated_items):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2481
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: last_updated: float
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2486
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: last_updated=time.time(),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2491
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: last_updated=time.time(),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2496
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2501
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: await brain.emotional_processor.update_emotional_state({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2506
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: mock_event_bus.subscribe.assert_any_call("config.updated", arpeggiator._handle_config_updated)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2511
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: async def test_handle_config_updated(self, arpeggiator):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2516
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """Test handling configuration update events"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2521
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Replace update_configuration with a mock
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2526
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: arpeggiator.update_configuration = MagicMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2531
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: event_type="config.updated",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2536
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: await arpeggiator._handle_config_updated(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2541
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Verify update_configuration was called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2546
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: arpeggiator.update_configuration.assert_called_once_with({"sensitivity": 0.7})
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2551
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: event_type="config.updated",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2556
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: arpeggiator.update_configuration.reset_mock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2561
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: await arpeggiator._handle_config_updated(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2566
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Verify update_configuration was not called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2571
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: assert not arpeggiator.update_configuration.called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2576
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: def test_update_configuration(self, arpeggiator, mock_config_manager):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2581
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Update configuration
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2586
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: arpeggiator.update_configuration(new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2591
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Verify configuration was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2596
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Verify config manager was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2601
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: mock_config_manager.update_config.assert_called_once_with("gesture_arpeggiator", new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2606
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: event_bus.subscribe.assert_any_call("ui.context_changed", gesture_integration.update_ui_context)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2611
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: event_bus.subscribe.assert_any_call("config.updated.gesture_integration", gesture_integration.update_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2616
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: def test_update_ui_context(self, gesture_integration):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2621
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """Test UI context updates."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2626
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: gesture_integration.update_ui_context(context_event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2631
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: def test_update_config(self, gesture_integration):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2636
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """Test configuration updates."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2641
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: gesture_integration.update_config(new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2646
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: @patch('alejo.ui.pyside_ui.HolographicWidget.update')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2651
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: def test_event_handler(self, mock_update):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2656
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: mock_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2661
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2666
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Check that config was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2671
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Check that brain.update_config was called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2676
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: mock_brain.update_config.assert_called_once_with(alejo_ui.config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2681
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: service.update_arpeggiator_settings = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2686
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: service.update_visualizer_settings = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2691
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Verify arpeggiator settings were updated with Joy parameters
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2696
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: mock_arpeggiator_service.update_arpeggiator_settings.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2701
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: args = mock_arpeggiator_service.update_arpeggiator_settings.call_args[0][0]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2706
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Verify visualizer settings were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2711
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: mock_arpeggiator_service.update_visualizer_settings.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2716
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: vis_args = mock_arpeggiator_service.update_visualizer_settings.call_args[0][0]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2721
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: mock_arpeggiator_service.update_arpeggiator_settings.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2726
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: args = mock_arpeggiator_service.update_arpeggiator_settings.call_args[0][0]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2731
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: mock_arpeggiator_service.update_arpeggiator_settings.reset_mock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2736
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent.parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2741
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: "page_title": "Test Page Updated",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2746
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent.parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2751
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2756
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Check that last_used was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2761
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: assert sent_data["type"] == "config_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2766
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: async def test_handle_ui_update(websocket_handler, mock_websocket):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2771
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """Test handling of UI update events"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2776
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: "update": {
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2781
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: await websocket_handler._handle_ui_update(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2786
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: assert sent_data["type"] == "ui_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2791
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: assert sent_data["update"] == event["update"]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2796
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: async def test_handle_config_update(websocket_handler, mock_websocket):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2801
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """Test handling of configuration update events"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2806
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: await websocket_handler._handle_config_update(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2811
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: assert sent_data["type"] == "config_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2816
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: File: update_manager.py
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2821
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: ALEJO Update Manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2826
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: Automatically checks for and applies updates before ALEJO starts.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2831
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: logging.FileHandler("alejo_update.log"),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2836
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: logger = logging.getLogger("alejo.update_manager")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2841
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: class UpdateManager:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2846
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: Manages automatic updates for ALEJO system
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2851
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: This class checks for updates from the main repository and applies them
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2856
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: Initialize the Update Manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2861
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.update_cache_file = self.alejo_dir / ".update_cache"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2866
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.update_lock_file = self.alejo_dir / ".update_lock"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2871
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.force_update = self.config.get("force_update", False)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2876
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: def should_check_for_updates(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2881
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: Determine if we should check for updates based on last check time
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2886
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: if self.force_update:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2891
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: if not self.update_cache_file.exists():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2896
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: with open(self.update_cache_file, "r") as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2901
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: def update_check_cache(self, update_available=False, version=None):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2906
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """Update the cache file with current check information"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2911
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: "update_available": update_available,
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2916
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: with open(self.update_cache_file, "w") as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2921
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: def check_for_updates(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2926
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: Check if updates are available
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2931
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: tuple: (update_available, current_version, latest_version)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2936
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: logger.warning("Not a git repository, cannot check for updates")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2941
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Create a lock file to prevent concurrent update checks
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2946
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: if self.update_lock_file.exists():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2951
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: if time.time() - os.path.getmtime(self.update_lock_file) > 600:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2956
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: os.remove(self.update_lock_file)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2961
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: logger.info("Update check already in progress, skipping")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2966
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: with open(self.update_lock_file, "w") as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2971
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: update_available = current_version != latest_version
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2976
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.update_check_cache(update_available, current_version)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2981
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: return update_available, current_version, latest_version
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2986
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: logger.error(f"Error checking for updates: {str(e)}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2991
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: if self.update_lock_file.exists():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2996
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: os.remove(self.update_lock_file)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3001
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: def apply_update(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3006
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: Apply available updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3011
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: bool: True if update was successful, False otherwise
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3016
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: logger.warning("Not a git repository, cannot apply updates")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3021
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: logger.error(f"Error pulling updates: {result.stderr}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3026
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Update database schema if needed
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3031
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.update_database_schema()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3036
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: logger.info("Update completed successfully")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3041
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: logger.error(f"Error applying update: {str(e)}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3046
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """Restore ALEJO from backup in case of update failure"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3051
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: def update_database_schema(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3056
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """Update database schema if necessary"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3061
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: def run_update_check(self, auto_apply=True):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3066
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: Run a full update check and optionally apply updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3071
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: auto_apply: Whether to automatically apply updates if available
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3076
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: bool: True if system is up to date, False if update failed
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3081
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: if not self.should_check_for_updates():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3086
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: logger.info("Update check was performed recently, skipping")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3091
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: logger.info("Checking for ALEJO updates")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3096
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: update_available, current_version, latest_version = self.check_for_updates()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3101
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: if update_available:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3106
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: logger.info(f"Update available: {current_version[:7]} -> {latest_version[:7]}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3111
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: logger.info("Applying update automatically")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3116
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: return self.apply_update()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3121
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: logger.info("Update available but not applying automatically")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3126
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: parser = argparse.ArgumentParser(description="ALEJO Update Manager")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3131
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: parser.add_argument("--check-only", action="store_true", help="Only check for updates, don't apply them")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3136
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: parser.add_argument("--force", action="store_true", help="Force update check even if done recently")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3141
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Create update manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3146
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: config = {"force_update": args.force}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3151
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3156
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Run update check
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3161
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: update_manager.run_update_check(auto_apply=not args.check_only)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3166
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: await r.delete(test_key)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3171
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, str(Path(script_path).parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3176
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: Y]O?gjOEb?0)r   id  r  )r#   r#   gh㈵>g7P>{r   )r#   r#   gh㈵>g7P>0)r   i  	fix_flags)r   r   guR#>g&p>{r   )r   r   guR#>g&p>0)r   i  r   )r   r   g>g+|c?{r   )r   r   g>g+|c?0)rS   rT   rU   )r)   r)   g0D4>g =T?{0)DC:\Users\magic\AppData\Local\Programs\Python\Python39\lib\weakref.pyi   r   )r)   r)   glӎ>g4vxU>{rY   )r)   r)   glӎ>g4vxU>0)r  i"  update)r)   r)   gavt>g:ܳS>{)r  r  r   )r)   r)   gavt>g:ܳS>0)FC:\Users\magic\AppData\Local\Programs\Python\Python39\lib\threading.pyr   RLock)r#   r#   gkNu>gkNu>{rZ   iv  
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3181
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3186
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: """Process the command and update the log"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3191
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: def _update():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3196
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.log_text.insert(tk.END, message + "\n\n", color)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3201
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: # Update in the main thread
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3206
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.root.after(0, _update)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3211
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Code: self.log_text.delete(1.0, tk.END)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3216
    SQL query detected - ensure parameterized queries are used
    Code: Code: File: .update_cache
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3221
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: {"last_check": "2025-06-30T23:52:42.890553", "update_available": false, "current_version": "abcd1234"}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3226
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Updates services with zero downtime
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3231
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Dependency updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3236
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: * Regular model updates containing collective insights
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3241
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: * User control over update frequency and domains
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3246
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: * Users can delete their local learning data at any time
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3251
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: RUN apt-get update && apt-get install -y \
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3256
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Manages dynamic UI updates and DOM manipulation for gesture-enabled elements.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3261
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Provides methods to update, enable, or disable elements based on their gesture properties.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3266
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - CI/CD pipelines have been updated to include backend validation, integration testing, and security compliance.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3271
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - **Web Interface**: Modern, responsive web interface with real-time updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3276
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - **ServiceRegistry**: Manages service registration and health updates, providing a single source of truth for service status.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3281
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 3. Update the frontend UI in `alejo/templates/gesture_enabled_interface.html`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3286
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: {"action": "delete_file"},
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3291
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 5. **Updates**: Keep all dependencies up to date.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3296
    SQL query detected - ensure parameterized queries are used
    Code: Code: File: alejo_update.log
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3301
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2025-06-30 23:52:21,057 - alejo.update_manager - INFO - Pulling latest changes from repository
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3306
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2025-06-30 23:52:21,058 - alejo.update_manager - ERROR - Error pulling updates: Failed to pull
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3311
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2025-06-30 23:52:21,062 - alejo.update_manager - INFO - Pulling latest changes from repository
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3316
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2025-06-30 23:52:21,063 - alejo.update_manager - INFO - Updating dependencies
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3321
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2025-06-30 23:52:21,063 - alejo.update_manager - INFO - Update completed successfully
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3326
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2025-06-30 23:52:21,068 - alejo.update_manager - INFO - Backing up current ALEJO installation to C:\Users\magic\AppData\Local\Temp\alejo_backup_h5jwy8dw
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3331
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2025-06-30 23:52:21,083 - alejo.update_manager - INFO - Restoring ALEJO from backup C:\Users\magic\AppData\Local\Temp\alejo_backup_h5jwy8dw
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3336
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2025-06-30 23:52:42,882 - alejo.update_manager - ERROR - Error restoring backup: [WinError 32] The process cannot access the file because it is being used by another process: 'C:\\Users\\magic\\CascadeProjects\\ALEJO\\alejo_update.log'
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3341
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Update references to use the new module
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3346
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Update references to use the new module
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3351
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 4. **Update Tests**:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3356
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 5. **Update Documentation**:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3361
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Update user guide
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3366
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2. Update imports to use package structure
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3371
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 3. Update imports to use package structure
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3376
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(self.script_path.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3381
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3386
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3391
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3396
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 5. **Brain Integration**: Update ALEJOBrain and other components to automatically self-register with the ServiceRegistry and intercommunicate via the EventBus.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3401
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Create secure update mechanisms
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3406
    SQL query detected - ensure parameterized queries are used
    Code: Code: File: docs\AUTO_UPDATE_README.md
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3411
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # ALEJO Automatic Update System
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3416
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: This document explains the automatic update system implemented in ALEJO to ensure users always have the latest security patches and features.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3421
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: The ALEJO update system performs the following operations:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3426
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 1. **Pre-launch Update Check**: Before ALEJO starts, it automatically checks for updates from the main repository.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3431
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2. **Secure Update Process**:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3436
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Creates a backup of the current installation before applying any updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3441
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Updates the codebase from the repository
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3446
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Updates dependencies if necessary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3451
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Rolls back to the backup if any errors occur during the update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3456
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 3. **Scheduled Checks**: Updates are checked at configurable intervals (default: every 4 hours) to avoid excessive network traffic.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3461
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: The update system works automatically and requires no user intervention. However, several command-line options are available:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3466
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Normal startup with automatic update check
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3471
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Skip update check during startup
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3476
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: python start_alejo_with_gestures.py --skip-updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3481
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Manually check for updates without starting ALEJO
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3486
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: python update_manager.py --check-only
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3491
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Force update check regardless of when the last check occurred
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3496
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: python update_manager.py --force
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3501
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: The update system can be configured through environment variables:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3506
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - `ALEJO_UPDATE_INTERVAL`: Set the minimum hours between update checks (default: 4)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3511
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: If you encounter issues with the automatic update system:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3516
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 1. Check the log file (`alejo_update.log`) for detailed error messages
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3521
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2. Try running a manual update with `python update_manager.py --force`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3526
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 3. If updates consistently fail, you can bypass them with `--skip-updates` and update manually
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3531
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: The automatic update system enhances ALEJO's security by ensuring users always have the latest security patches. The system:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3536
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Creates backups before applying updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3541
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Maintains a log of all update operations
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3546
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: To extend or modify the update system:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3551
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 1. The core functionality is in `update_manager.py`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3556
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2. Test cases are available in `test_update_manager.py`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3561
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 3. The update system is integrated into ALEJO's startup process in `start_alejo_with_gestures.py`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3566
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: python -m unittest test_update_manager.py
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3571
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - **Event-Driven Updates**: Computing only when necessary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3576
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - **Processing Efficiency**: Neural updates per second
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3581
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - **Modularity**: Components are well-separated, making it easier to update individual parts.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3586
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Update plugins to compatible versions
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3591
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3596
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Insert before the first import
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3601
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Find a good place to insert the polyfill
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3606
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Try to insert after imports or at the beginning of the file
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3611
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Insert at the beginning of the file
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3616
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Insert catch block before the last closing brace
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3621
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Find a good place to insert the wrapper
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3626
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Insert after script tag
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3631
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: insert_pos = script_tag_match.end()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3636
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: content = content[:insert_pos] + secure_storage_wrapper + content[insert_pos:]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3641
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Insert after imports
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3646
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: insert_pos = import_match.end()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3651
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: content = content[:insert_pos] + secure_storage_wrapper + content[insert_pos:]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3656
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Insert at the beginning with a comment explaining
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3661
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: modified_lines.insert(import_section_end, "import secrets  # More secure for cryptographic purposes")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3666
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: progress_bar.update(len(data))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3671
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sha256_hash.update(byte_block)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3676
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 1. Update images:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3681
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 1. Update Istio:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3686
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2. Update monitoring stack:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3691
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: "last_updated": "2025-06-17T06:34:00.742317"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3696
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2025-06-11 07:31:08,226 - __main__ - INFO - Updated index.html
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3701
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 1. Review and update priorities weekly
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3706
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(self.project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3711
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(self.project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3716
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update results
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3721
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update results
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3726
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def update_html_references(self, js_dir, css_dir):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3731
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Update HTML templates to use optimized files"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3736
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update JS references
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3741
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update CSS references
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3746
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Write updated content
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3751
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info(f"Updated {html_file.name}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3756
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update HTML references
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3761
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: optimizer.update_html_references(js_dir, css_dir)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3766
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Send status updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3771
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.warning(f"{env_file} already exists. Please delete it first if you want to create a new one.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3776
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(PROJECT_ROOT))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3781
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3786
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.dirname(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3791
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3796
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(Path(__file__).resolve().parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3801
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update improvements status in data manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3806
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await data_manager.update_improvements(applied_improvements)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3811
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info(f"Updated status for {len(applied_improvements)} improvements")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3816
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, project_root)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3821
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(Path(__file__).resolve().parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3826
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(script_dir.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3831
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(Path(__file__).resolve().parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3836
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3841
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Update test configuration"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3846
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update database paths in config
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3851
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info("Updated test configuration")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3856
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(PROJECT_ROOT))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3861
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update config with file values
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3866
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self._update_dict(config, file_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3871
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def _update_dict(self, target: Dict, source: Dict) -> None:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3876
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Recursively update dictionary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3881
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self._update_dict(target[key], value)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3886
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Import update manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3891
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: from update_manager import UpdateManager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3896
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: UPDATE_MANAGER_AVAILABLE = True
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3901
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: UPDATE_MANAGER_AVAILABLE = False
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3906
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Add update-related command line arguments
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3911
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: "--skip-updates",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3916
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: help="Skip checking for updates before starting"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3921
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Check for updates before starting services
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3926
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: if UPDATE_MANAGER_AVAILABLE and not args.skip_updates:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3931
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info("Checking for ALEJO updates...")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3936
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager = UpdateManager()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3941
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_success = update_manager.run_update_check(auto_apply=True)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3946
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: if not update_success:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3951
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.error("Update process encountered errors. Starting with current version.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3956
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info("Update check completed successfully.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3961
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.error(f"Error during update process: {str(e)}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3966
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(PROJECT_ROOT))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3971
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3976
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update the timestamp
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3981
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update default URLs if provided
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3986
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update the timestamp
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3991
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Check updated allocations
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3996
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info(f"Updated allocations: {allocations}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4001
    SQL query detected - ensure parameterized queries are used
    Code: Code: File: test_update_manager.py
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4006
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Test script for ALEJO Update Manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4011
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: This script tests the functionality of the update manager to ensure it works correctly.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4016
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Import the update manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4021
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: from update_manager import UpdateManager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4026
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: class TestUpdateManager(unittest.TestCase):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4031
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test cases for the ALEJO Update Manager"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4036
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.test_dir = tempfile.mkdtemp(prefix="alejo_update_test_")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4041
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: "force_update": True
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4046
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4051
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertTrue(update_manager.is_git_repo())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4056
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertFalse(update_manager.is_git_repo())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4061
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_check_for_updates_no_updates(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4066
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test checking for updates when none are available"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4071
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4076
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_available, current, latest = update_manager.check_for_updates()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4081
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertFalse(update_available)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4086
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_check_for_updates_available(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4091
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test checking for updates when updates are available"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4096
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4101
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_available, current, latest = update_manager.check_for_updates()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4106
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertTrue(update_available)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4111
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4116
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: backup_dir = update_manager.backup_current_version()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4121
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager.restore_backup(backup_dir)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4126
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_apply_update_success(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4131
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test successful update application"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4136
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock.Mock(stdout="Updated files", stderr="", returncode=0),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4141
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4146
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: UpdateManager, 'backup_current_version',
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4151
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Create requirements.txt for testing dependency updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4156
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: result = update_manager.apply_update()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4161
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_apply_update_failure(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4166
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test failed update application"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4171
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4176
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: UpdateManager, 'backup_current_version',
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4181
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with mock.patch.object(UpdateManager, 'restore_backup') as mock_restore:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4186
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: result = update_manager.apply_update()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4191
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_should_check_for_updates(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4196
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test the logic for determining if updates should be checked"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4201
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Force update should always return True
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4206
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: config = {"force_update": True, "check_interval_hours": 24}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4211
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4216
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertTrue(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4221
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: config = {"force_update": False, "check_interval_hours": 24}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4226
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4231
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertTrue(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4236
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager.update_check_cache()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4241
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertFalse(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4246
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: config = {"force_update": False, "check_interval_hours": 0}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4251
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4256
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager.update_check_cache()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4261
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertTrue(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4266
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Test state updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4271
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: operation="update_state",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4276
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def update_state():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4281
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await emotional_core.update_emotional_state(test_input)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4286
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_result = await update_state()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4291
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert update_result.mean_time < 0.02, "State update too slow"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4296
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: emotional_core.update_emotional_state({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4301
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4306
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: brain.emotional_processor.update_emotional_state.assert_called()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4311
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Should update emotional state and respond empathetically
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4316
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: brain.emotional_processor.update_emotional_state.assert_called()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4321
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4326
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_brain_context_update(multimodal_integration, mock_brain, temp_image):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4331
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Check that brain context was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4336
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4341
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4346
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4351
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await event_bus.subscribe(EventType.ADAPTATION_UPDATED, collect_events)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4356
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert any(e.type == EventType.ADAPTATION_UPDATED for e in events)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4361
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: adaptation_event = next(e for e in events if e.type == EventType.ADAPTATION_UPDATED)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4366
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify emotional trajectory was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4371
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify topic was updated and depth reset
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4376
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_update_configuration(self, proactive_engine, mock_config_manager):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4381
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update configuration
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4386
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: proactive_engine.update_configuration(new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4391
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify configuration was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4396
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify config manager was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4401
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_config_manager.update_config.assert_called_once_with("cognitive", new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4406
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: manager.update_improvement_status = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4411
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: data_manager.update_improvement_status.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4416
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: data_manager.update_improvement_status.assert_not_called()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4421
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4426
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4431
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4436
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4441
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_repo.return_value.delete_head.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4446
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4451
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4456
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4461
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Event(EventType.SYSTEM, {"status": "System update"}, priority=2),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4466
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test advanced health check metrics and updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4471
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify health metrics were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4476
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: service_mesh._service_dependencies.update({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4481
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: if event.data.get("action") == "health_update":
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4486
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert event.data["action"] == "health_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4491
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: if event.data.get("action") == "dependency_update":
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4496
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Mock health checks to update dependencies
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4501
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_service_updates_subscription(registry):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4506
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test service update notifications"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4511
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Subscribe to updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4516
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Wait for the feedback to update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4521
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4526
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Wait for sentiment score to update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4531
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: type=EventType.EMOTIONAL_STATE_UPDATE,
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4536
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: events = event_bus.get_recent_events(EventType.EMOTIONAL_STATE_UPDATE)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4541
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify personality traits were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4546
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Simulate an emotional state update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4551
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: "action": "state_update",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4556
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify emotional processor was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4561
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert emotional_integration.emotional_processor.update_emotional_state.called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4566
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: interaction storage, relationship updates, value system storage, and event handling.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4571
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify that the state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4576
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify that the state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4581
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_update_relationship(self, emotional_memory, event_bus, memory_service):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4586
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update relationship
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4591
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await emotional_memory.update_relationship(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4596
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: memory_service.update_relationship_metrics.assert_called_once_with(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4601
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert event_bus.emit.call_count == 2  # First for init, second for update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4606
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert args[0] == "emotional.memory.relationship_updated"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4611
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert args[0] == "emotional.memory.value_updated"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4616
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify that the value was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4621
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify that the state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4626
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Test emotional update handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4631
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await emotional_memory._handle_emotional_update(event_data)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4636
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: memory_service.update_relationship_metrics.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4641
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Test value update handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4646
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await emotional_memory._handle_value_update(event_data)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4651
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4656
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Test update_emotional_memory event handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4661
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: result = await emotional_integration._handle_update_emotional_memory({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4666
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify memory update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4671
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify interaction timing updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4676
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify memory and learning updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4681
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4686
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def update_principle_weight(self, principle, weight):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4691
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Update principle weight"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4696
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_update_ethical_principle(ethical_integration, mock_ethical_framework):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4701
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Test valid update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4706
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: result = await ethical_integration.update_ethical_principle(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4711
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: result = await ethical_integration.update_ethical_principle(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4716
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with patch.object(mock_ethical_framework, 'update_principle_weight', side_effect=ValueError("Unknown principle")):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4721
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: result = await ethical_integration.update_ethical_principle(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4726
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Test update_ethical_principle event handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4731
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: result = await ethical_integration._handle_update_ethical_principle({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4736
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4741
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4746
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4751
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_delete_preset(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4756
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Delete the preset
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4761
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.preset_manager.delete_preset(test_preset["name"])
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4766
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify the preset was deleted
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4771
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: temp_db = tempfile.NamedTemporaryFile(delete=False, suffix='.db')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4776
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_emotional_state_update_from_llm_response(self, brain, event_bus):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4781
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test that emotional state is updated from LLM responses."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4786
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify that the emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4791
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_relationship_update_after_interaction(self, brain):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4796
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test that relationship metrics are updated after interactions."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4801
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Mock the emotional processor and update_relationship
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4806
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: }), patch.object(brain.emotional_memory, 'update_relationship', AsyncMock()) as mock_update:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4811
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify that update_relationship was called with positive deltas
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4816
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4821
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: args, kwargs = mock_update.call_args
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4826
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Emit a value update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4831
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await brain.event_bus.emit("value.update", {
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4836
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Mock update_relationship
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4841
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with patch.object(brain.emotional_memory, 'update_relationship', AsyncMock()) as mock_update:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4846
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify that update_relationship was called to save final state
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4851
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4856
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4861
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertIn("emotional.update", self.event_bus._subscribers)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4866
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4871
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4876
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4881
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4886
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4891
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4896
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4901
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory._handle_emotional_update = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4906
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Emit an emotional update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4911
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await self.event_bus.emit("emotional.update", {"emotion": "joy", "value": 0.8})
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4916
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory._handle_emotional_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4921
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4926
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4931
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4936
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4941
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4946
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4951
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertIn("emotional.update", self.event_bus._subscribers)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4956
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Emit an emotional update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4961
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await self.event_bus.emit("emotional.update", {"emotion": "anger", "value": 0.8})
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4966
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def update_value_system():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4971
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.ethical_framework.update_value_system = AsyncMock(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4976
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: side_effect=update_value_system
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4981
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update value system
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4986
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await self.brain.ethical_framework.update_value_system()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4991
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify that value system was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4996
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5001
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test that a service is auto-deregistered if not updated within the threshold
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5006
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: and validate that the DatabaseManager can insert and fetch interactions."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5011
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Simulate that the service's last update occurred sufficiently in the past
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5016
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Insert an interaction record
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5021
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: db.insert_interaction(test_data)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5026
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert record_found, "The inserted interaction data should be found in the database"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5031
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test that a service is auto-deregistered if no health update occurs within the threshold."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5036
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: EventType.SYSTEM_IMPROVEMENT_UPDATE,
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5041
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert all(e.type == EventType.SYSTEM_IMPROVEMENT_UPDATE for e in events_received)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5046
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_analyze_and_update_error_patterns(improvement_system):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5051
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test error pattern analysis and strategy updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5056
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await improvement_system._analyze_and_update_error_patterns()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5061
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: improvement_system.error_tracker.update_recovery_strategy.assert_called_once_with(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5066
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_analyze_and_update_emotional_patterns(improvement_system):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5071
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test emotional pattern analysis and parameter updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5076
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await improvement_system._analyze_and_update_emotional_patterns()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5081
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: improvement_system.emotional_core.update_response_parameters.assert_called_once_with(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5086
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5091
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5096
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_delete_adapter(lora_manager):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5101
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: name="adapter_to_delete",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5106
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: description="Adapter to delete",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5111
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: adapter_path = os.path.join(lora_manager.lora_dir, "adapter_to_delete")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5116
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Delete the adapter
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5121
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: result = await lora_manager.delete_adapter("adapter_to_delete")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5126
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Check that the delete was successful
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5131
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Try to delete a non-existent adapter
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5136
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await lora_manager.delete_adapter("non_existent_adapter")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5141
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: emotions.update(self.emotion_detector.detect_text_emotion(text))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5146
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: emotions.update(self.emotion_detector.detect_audio_emotion(audio_data))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5151
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: emotions.update(self.emotion_detector.detect_facial_emotion(image_data))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5156
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.personality_model.update(interaction)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5161
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def update(self, interaction):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5166
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Update personality state"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5171
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def delete(self, key):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5176
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Delete a key"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5181
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.sets[key].update(values)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5186
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.sorted_sets[key].update(mapping)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5191
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with tempfile.NamedTemporaryFile(suffix='.jpg', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5196
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5201
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, project_root)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5206
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5211
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test service heartbeat updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5216
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update skill levels
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5221
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: curriculum_manager.update_skill_levels(task, True, 0.9)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5226
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update performance and select again
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5231
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: meta_learner.update_strategy_performance(0.8)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5236
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify system state updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5241
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5246
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: valid_command_json = '{"command": "delete_file", "args": "protected.txt"}'
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5251
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: failure_message = "Failed to delete file: Permission denied"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5256
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: final_response = brain.process_command("delete the protected file")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5261
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_cmd_processor.execute_command.assert_called_once_with("delete_file", "protected.txt")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5266
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5271
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify working memory was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5276
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5281
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_handle_delete_file(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5286
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test the internal _handle_delete_file method."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5291
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: test_file = self.test_dir / "file_to_delete.txt"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5296
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: test_file.touch() # Create the file to be deleted
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5301
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: result = self.cmd_processor._handle_delete_file(str(test_file))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5306
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertIn("Deleted file", result)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5311
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertFalse(test_file.exists(), "_handle_delete_file did not delete the file.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5316
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5321
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_05_delete_file_command_success(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5326
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test the 'delete file' command handler for successful deletion."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5331
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: filename = "file_to_delete.txt"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5336
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: command = f"delete file {filename}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5341
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertEqual(result, f"Deleted file: {expected_path}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5346
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_06_delete_file_not_found(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5351
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test the 'delete file' command when the file does not exist."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5356
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: command = f"delete file {filename}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5361
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_07_delete_file_protected_path_failure(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5366
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: command = f"delete file {protected_path}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5371
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_08_delete_file_decorator_error_handling(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5376
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: command = f"delete file {filename}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5381
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5386
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update summary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5391
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update summary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5396
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_update_and_get_relationship_data(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5401
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.db_manager.update_relationship_data(user_id, relationship_type, trust_level, rapport_level)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5406
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_update_relationship_metrics(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5411
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Initial update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5416
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.memory.update_relationship_metrics(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5421
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: action = "delete_user_data"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5426
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_01_emotional_state_update(self, event_bus):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5431
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update with positive emotion
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5436
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: item_id = await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5441
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update with negative emotion
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5446
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5451
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5456
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await memory.update_relationship_context(entity_id, context)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5461
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update context
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5466
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update = {
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5471
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await memory.update_relationship_context(entity_id, update)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5476
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Check updated context
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5481
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: updated_context = await memory.get_relationship_context(entity_id)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5486
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert updated_context["trust_level"] == 0.9
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5491
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert len(updated_context["shared_experiences"]) == 3
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5496
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Check emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5501
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Check emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5506
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5511
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5516
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5521
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5526
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_personality_state_updates(self, emotional_service):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5531
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test personality state updates and persistence"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5536
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert final_state != initial_state  # State should update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5541
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info("Personality state updates validated")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5546
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_04_empathy_model_updates(self, processor):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5551
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await processor.update_empathy_model({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5556
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await processor.update_empathy_model({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5561
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5566
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5571
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5576
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5581
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Check priorities were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5586
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.temp_config = tempfile.NamedTemporaryFile(delete=False, suffix='.json')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5591
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.temp_db = tempfile.NamedTemporaryFile(delete=False, suffix='.db')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5596
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with tempfile.NamedTemporaryFile(delete=False, suffix='.json') as temp_file:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5601
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.temp_db = tempfile.NamedTemporaryFile(delete=False, suffix='.db')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5606
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: "delete user data without confirmation",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5611
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with tempfile.NamedTemporaryFile(delete=False, suffix='.json') as temp_file:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5616
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with tempfile.NamedTemporaryFile(delete=False, suffix='.json') as temp_file:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5621
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify emotional state update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5626
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert result['memory_updates']
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5631
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Get updated metrics
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5636
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify metrics were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5641
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """HealthMonitor should emit a *healthy* status update when the endpoint responds 200."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5646
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5651
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: updated_items = await working_memory.get_active_items()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5656
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert len(updated_items) <= len(items)  # Should have decayed
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5661
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: for old, new in zip(items, updated_items):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5666
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: last_updated: float
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5671
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: last_updated=time.time(),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5676
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: last_updated=time.time(),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5681
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5686
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await brain.emotional_processor.update_emotional_state({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5691
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_event_bus.subscribe.assert_any_call("config.updated", arpeggiator._handle_config_updated)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5696
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_handle_config_updated(self, arpeggiator):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5701
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test handling configuration update events"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5706
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Replace update_configuration with a mock
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5711
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: arpeggiator.update_configuration = MagicMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5716
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: event_type="config.updated",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5721
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await arpeggiator._handle_config_updated(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5726
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify update_configuration was called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5731
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: arpeggiator.update_configuration.assert_called_once_with({"sensitivity": 0.7})
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5736
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: event_type="config.updated",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5741
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: arpeggiator.update_configuration.reset_mock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5746
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await arpeggiator._handle_config_updated(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5751
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify update_configuration was not called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5756
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert not arpeggiator.update_configuration.called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5761
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_update_configuration(self, arpeggiator, mock_config_manager):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5766
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update configuration
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5771
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: arpeggiator.update_configuration(new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5776
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify configuration was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5781
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify config manager was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5786
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_config_manager.update_config.assert_called_once_with("gesture_arpeggiator", new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5791
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: event_bus.subscribe.assert_any_call("ui.context_changed", gesture_integration.update_ui_context)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5796
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: event_bus.subscribe.assert_any_call("config.updated.gesture_integration", gesture_integration.update_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5801
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_update_ui_context(self, gesture_integration):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5806
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test UI context updates."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5811
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: gesture_integration.update_ui_context(context_event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5816
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_update_config(self, gesture_integration):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5821
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test configuration updates."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5826
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: gesture_integration.update_config(new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5831
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: @patch('alejo.ui.pyside_ui.HolographicWidget.update')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5836
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_event_handler(self, mock_update):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5841
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5846
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5851
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Check that config was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5856
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Check that brain.update_config was called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5861
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_brain.update_config.assert_called_once_with(alejo_ui.config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5866
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: service.update_arpeggiator_settings = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5871
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: service.update_visualizer_settings = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5876
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify arpeggiator settings were updated with Joy parameters
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5881
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_arpeggiator_service.update_arpeggiator_settings.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5886
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: args = mock_arpeggiator_service.update_arpeggiator_settings.call_args[0][0]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5891
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify visualizer settings were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5896
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_arpeggiator_service.update_visualizer_settings.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5901
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: vis_args = mock_arpeggiator_service.update_visualizer_settings.call_args[0][0]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5906
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_arpeggiator_service.update_arpeggiator_settings.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5911
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: args = mock_arpeggiator_service.update_arpeggiator_settings.call_args[0][0]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5916
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_arpeggiator_service.update_arpeggiator_settings.reset_mock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5921
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent.parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5926
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: "page_title": "Test Page Updated",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5931
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent.parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5936
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5941
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Check that last_used was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5946
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert sent_data["type"] == "config_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5951
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_handle_ui_update(websocket_handler, mock_websocket):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5956
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test handling of UI update events"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5961
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: "update": {
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5966
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await websocket_handler._handle_ui_update(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5971
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert sent_data["type"] == "ui_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5976
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert sent_data["update"] == event["update"]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5981
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_handle_config_update(websocket_handler, mock_websocket):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5986
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test handling of configuration update events"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5991
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await websocket_handler._handle_config_update(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5996
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert sent_data["type"] == "config_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6001
    SQL query detected - ensure parameterized queries are used
    Code: Code: File: update_manager.py
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6006
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: ALEJO Update Manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6011
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Automatically checks for and applies updates before ALEJO starts.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6016
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logging.FileHandler("alejo_update.log"),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6021
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger = logging.getLogger("alejo.update_manager")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6026
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: class UpdateManager:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6031
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Manages automatic updates for ALEJO system
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6036
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: This class checks for updates from the main repository and applies them
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6041
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Initialize the Update Manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6046
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.update_cache_file = self.alejo_dir / ".update_cache"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6051
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.update_lock_file = self.alejo_dir / ".update_lock"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6056
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.force_update = self.config.get("force_update", False)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6061
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def should_check_for_updates(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6066
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Determine if we should check for updates based on last check time
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6071
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: if self.force_update:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6076
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: if not self.update_cache_file.exists():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6081
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with open(self.update_cache_file, "r") as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6086
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def update_check_cache(self, update_available=False, version=None):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6091
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Update the cache file with current check information"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6096
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: "update_available": update_available,
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6101
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with open(self.update_cache_file, "w") as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6106
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def check_for_updates(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6111
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Check if updates are available
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6116
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: tuple: (update_available, current_version, latest_version)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6121
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.warning("Not a git repository, cannot check for updates")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6126
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Create a lock file to prevent concurrent update checks
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6131
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: if self.update_lock_file.exists():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6136
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: if time.time() - os.path.getmtime(self.update_lock_file) > 600:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6141
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: os.remove(self.update_lock_file)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6146
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info("Update check already in progress, skipping")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6151
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with open(self.update_lock_file, "w") as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6156
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_available = current_version != latest_version
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6161
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.update_check_cache(update_available, current_version)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6166
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: return update_available, current_version, latest_version
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6171
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.error(f"Error checking for updates: {str(e)}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6176
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: if self.update_lock_file.exists():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6181
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: os.remove(self.update_lock_file)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6186
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def apply_update(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6191
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Apply available updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6196
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: bool: True if update was successful, False otherwise
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6201
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.warning("Not a git repository, cannot apply updates")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6206
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.error(f"Error pulling updates: {result.stderr}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6211
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update database schema if needed
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6216
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.update_database_schema()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6221
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info("Update completed successfully")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6226
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.error(f"Error applying update: {str(e)}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6231
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Restore ALEJO from backup in case of update failure"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6236
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def update_database_schema(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6241
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Update database schema if necessary"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6246
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def run_update_check(self, auto_apply=True):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6251
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Run a full update check and optionally apply updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6256
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: auto_apply: Whether to automatically apply updates if available
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6261
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: bool: True if system is up to date, False if update failed
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6266
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: if not self.should_check_for_updates():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6271
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info("Update check was performed recently, skipping")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6276
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info("Checking for ALEJO updates")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6281
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_available, current_version, latest_version = self.check_for_updates()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6286
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: if update_available:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6291
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info(f"Update available: {current_version[:7]} -> {latest_version[:7]}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6296
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info("Applying update automatically")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6301
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: return self.apply_update()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6306
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info("Update available but not applying automatically")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6311
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: parser = argparse.ArgumentParser(description="ALEJO Update Manager")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6316
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: parser.add_argument("--check-only", action="store_true", help="Only check for updates, don't apply them")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6321
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: parser.add_argument("--force", action="store_true", help="Force update check even if done recently")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6326
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Create update manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6331
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: config = {"force_update": args.force}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6336
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6341
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Run update check
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6346
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager.run_update_check(auto_apply=not args.check_only)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6351
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await r.delete(test_key)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6356
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(Path(script_path).parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6361
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Y]O?gjOEb?0)r   id  r  )r#   r#   gh㈵>g7P>{r   )r#   r#   gh㈵>g7P>0)r   i  	fix_flags)r   r   guR#>g&p>{r   )r   r   guR#>g&p>0)r   i  r   )r   r   g>g+|c?{r   )r   r   g>g+|c?0)rS   rT   rU   )r)   r)   g0D4>g =T?{0)DC:\Users\magic\AppData\Local\Programs\Python\Python39\lib\weakref.pyi   r   )r)   r)   glӎ>g4vxU>{rY   )r)   r)   glӎ>g4vxU>0)r  i"  update)r)   r)   gavt>g:ܳS>{)r  r  r   )r)   r)   gavt>g:ܳS>0)FC:\Users\magic\AppData\Local\Programs\Python\Python39\lib\threading.pyr   RLock)r#   r#   gkNu>gkNu>{rZ   iv  
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6366
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6371
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Process the command and update the log"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6376
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def _update():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6381
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.log_text.insert(tk.END, message + "\n\n", color)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6386
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update in the main thread
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6391
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.root.after(0, _update)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6396
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.log_text.delete(1.0, tk.END)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6464
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 'py_sql_query': (r'(?:execute|executemany)\s*\(\s*["\']SELECT|UPDATE|DELETE|INSERT',
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6469
    SQL query detected - ensure parameterized queries are used
    Code: Code: File: .update_cache
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6474
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: {"last_check": "2025-06-30T23:52:42.890553", "update_available": false, "current_version": "abcd1234"}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6479
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Updates services with zero downtime
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6484
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Dependency updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6489
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: * Regular model updates containing collective insights
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6494
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: * User control over update frequency and domains
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6499
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: * Users can delete their local learning data at any time
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6504
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: RUN apt-get update && apt-get install -y \
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6509
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Manages dynamic UI updates and DOM manipulation for gesture-enabled elements.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6514
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Provides methods to update, enable, or disable elements based on their gesture properties.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6519
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - CI/CD pipelines have been updated to include backend validation, integration testing, and security compliance.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6524
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - **Web Interface**: Modern, responsive web interface with real-time updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6529
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - **ServiceRegistry**: Manages service registration and health updates, providing a single source of truth for service status.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6534
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 3. Update the frontend UI in `alejo/templates/gesture_enabled_interface.html`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6539
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: {"action": "delete_file"},
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6544
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 5. **Updates**: Keep all dependencies up to date.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6549
    SQL query detected - ensure parameterized queries are used
    Code: Code: File: alejo_update.log
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6554
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2025-06-30 23:52:21,057 - alejo.update_manager - INFO - Pulling latest changes from repository
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6559
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2025-06-30 23:52:21,058 - alejo.update_manager - ERROR - Error pulling updates: Failed to pull
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6564
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2025-06-30 23:52:21,062 - alejo.update_manager - INFO - Pulling latest changes from repository
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6569
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2025-06-30 23:52:21,063 - alejo.update_manager - INFO - Updating dependencies
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6574
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2025-06-30 23:52:21,063 - alejo.update_manager - INFO - Update completed successfully
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6579
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2025-06-30 23:52:21,068 - alejo.update_manager - INFO - Backing up current ALEJO installation to C:\Users\magic\AppData\Local\Temp\alejo_backup_h5jwy8dw
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6584
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2025-06-30 23:52:21,083 - alejo.update_manager - INFO - Restoring ALEJO from backup C:\Users\magic\AppData\Local\Temp\alejo_backup_h5jwy8dw
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6589
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2025-06-30 23:52:42,882 - alejo.update_manager - ERROR - Error restoring backup: [WinError 32] The process cannot access the file because it is being used by another process: 'C:\\Users\\magic\\CascadeProjects\\ALEJO\\alejo_update.log'
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6594
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Update references to use the new module
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6599
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Update references to use the new module
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6604
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 4. **Update Tests**:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6609
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 5. **Update Documentation**:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6614
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Update user guide
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6619
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2. Update imports to use package structure
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6624
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 3. Update imports to use package structure
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6629
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(self.script_path.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6634
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6639
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6644
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6649
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 5. **Brain Integration**: Update ALEJOBrain and other components to automatically self-register with the ServiceRegistry and intercommunicate via the EventBus.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6654
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Create secure update mechanisms
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6659
    SQL query detected - ensure parameterized queries are used
    Code: Code: File: docs\AUTO_UPDATE_README.md
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6664
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # ALEJO Automatic Update System
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6669
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: This document explains the automatic update system implemented in ALEJO to ensure users always have the latest security patches and features.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6674
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: The ALEJO update system performs the following operations:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6679
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 1. **Pre-launch Update Check**: Before ALEJO starts, it automatically checks for updates from the main repository.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6684
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2. **Secure Update Process**:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6689
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Creates a backup of the current installation before applying any updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6694
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Updates the codebase from the repository
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6699
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Updates dependencies if necessary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6704
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Rolls back to the backup if any errors occur during the update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6709
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 3. **Scheduled Checks**: Updates are checked at configurable intervals (default: every 4 hours) to avoid excessive network traffic.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6714
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: The update system works automatically and requires no user intervention. However, several command-line options are available:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6719
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Normal startup with automatic update check
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6724
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Skip update check during startup
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6729
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: python start_alejo_with_gestures.py --skip-updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6734
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Manually check for updates without starting ALEJO
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6739
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: python update_manager.py --check-only
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6744
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Force update check regardless of when the last check occurred
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6749
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: python update_manager.py --force
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6754
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: The update system can be configured through environment variables:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6759
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - `ALEJO_UPDATE_INTERVAL`: Set the minimum hours between update checks (default: 4)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6764
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: If you encounter issues with the automatic update system:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6769
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 1. Check the log file (`alejo_update.log`) for detailed error messages
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6774
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2. Try running a manual update with `python update_manager.py --force`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6779
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 3. If updates consistently fail, you can bypass them with `--skip-updates` and update manually
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6784
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: The automatic update system enhances ALEJO's security by ensuring users always have the latest security patches. The system:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6789
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Creates backups before applying updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6794
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Maintains a log of all update operations
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6799
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: To extend or modify the update system:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6804
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 1. The core functionality is in `update_manager.py`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6809
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2. Test cases are available in `test_update_manager.py`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6814
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 3. The update system is integrated into ALEJO's startup process in `start_alejo_with_gestures.py`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6819
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: python -m unittest test_update_manager.py
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6824
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - **Event-Driven Updates**: Computing only when necessary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6829
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - **Processing Efficiency**: Neural updates per second
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6834
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - **Modularity**: Components are well-separated, making it easier to update individual parts.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6839
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: - Update plugins to compatible versions
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6844
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6849
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Insert before the first import
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6854
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Find a good place to insert the polyfill
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6859
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Try to insert after imports or at the beginning of the file
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6864
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Insert at the beginning of the file
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6869
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Insert catch block before the last closing brace
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6874
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: progress_bar.update(len(data))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6879
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sha256_hash.update(byte_block)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6884
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 1. Update images:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6889
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 1. Update Istio:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6894
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2. Update monitoring stack:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6899
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: "last_updated": "2025-06-17T06:34:00.742317"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6904
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 2025-06-11 07:31:08,226 - __main__ - INFO - Updated index.html
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6909
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: 1. Review and update priorities weekly
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6914
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(self.project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6919
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(self.project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6924
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update results
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6929
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update results
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6934
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def update_html_references(self, js_dir, css_dir):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6939
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Update HTML templates to use optimized files"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6944
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update JS references
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6949
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update CSS references
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6954
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Write updated content
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6959
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info(f"Updated {html_file.name}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6964
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update HTML references
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6969
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: optimizer.update_html_references(js_dir, css_dir)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6974
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Send status updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6979
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.warning(f"{env_file} already exists. Please delete it first if you want to create a new one.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6984
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(PROJECT_ROOT))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6989
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6994
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.dirname(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6999
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7004
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(Path(__file__).resolve().parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7009
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update improvements status in data manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7014
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await data_manager.update_improvements(applied_improvements)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7019
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info(f"Updated status for {len(applied_improvements)} improvements")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7024
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, project_root)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7029
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(Path(__file__).resolve().parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7034
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(script_dir.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7039
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(Path(__file__).resolve().parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7044
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7049
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Update test configuration"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7054
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update database paths in config
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7059
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info("Updated test configuration")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7064
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(PROJECT_ROOT))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7069
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update config with file values
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7074
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self._update_dict(config, file_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7079
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def _update_dict(self, target: Dict, source: Dict) -> None:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7084
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Recursively update dictionary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7089
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self._update_dict(target[key], value)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7094
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Import update manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7099
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: from update_manager import UpdateManager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7104
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: UPDATE_MANAGER_AVAILABLE = True
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7109
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: UPDATE_MANAGER_AVAILABLE = False
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7114
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Add update-related command line arguments
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7119
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: "--skip-updates",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7124
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: help="Skip checking for updates before starting"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7129
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Check for updates before starting services
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7134
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: if UPDATE_MANAGER_AVAILABLE and not args.skip_updates:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7139
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info("Checking for ALEJO updates...")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7144
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager = UpdateManager()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7149
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_success = update_manager.run_update_check(auto_apply=True)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7154
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: if not update_success:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7159
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.error("Update process encountered errors. Starting with current version.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7164
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info("Update check completed successfully.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7169
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.error(f"Error during update process: {str(e)}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7174
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(PROJECT_ROOT))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7179
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7184
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update the timestamp
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7189
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update default URLs if provided
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7194
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update the timestamp
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7199
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Check updated allocations
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7204
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info(f"Updated allocations: {allocations}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7209
    SQL query detected - ensure parameterized queries are used
    Code: Code: File: test_update_manager.py
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7214
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Test script for ALEJO Update Manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7219
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: This script tests the functionality of the update manager to ensure it works correctly.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7224
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Import the update manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7229
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: from update_manager import UpdateManager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7234
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: class TestUpdateManager(unittest.TestCase):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7239
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test cases for the ALEJO Update Manager"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7244
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.test_dir = tempfile.mkdtemp(prefix="alejo_update_test_")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7249
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: "force_update": True
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7254
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7259
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertTrue(update_manager.is_git_repo())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7264
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertFalse(update_manager.is_git_repo())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7269
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_check_for_updates_no_updates(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7274
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test checking for updates when none are available"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7279
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7284
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_available, current, latest = update_manager.check_for_updates()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7289
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertFalse(update_available)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7294
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_check_for_updates_available(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7299
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test checking for updates when updates are available"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7304
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7309
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_available, current, latest = update_manager.check_for_updates()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7314
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertTrue(update_available)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7319
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7324
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: backup_dir = update_manager.backup_current_version()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7329
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager.restore_backup(backup_dir)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7334
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_apply_update_success(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7339
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test successful update application"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7344
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock.Mock(stdout="Updated files", stderr="", returncode=0),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7349
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7354
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: UpdateManager, 'backup_current_version',
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7359
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Create requirements.txt for testing dependency updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7364
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: result = update_manager.apply_update()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7369
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_apply_update_failure(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7374
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test failed update application"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7379
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7384
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: UpdateManager, 'backup_current_version',
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7389
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with mock.patch.object(UpdateManager, 'restore_backup') as mock_restore:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7394
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: result = update_manager.apply_update()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7399
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_should_check_for_updates(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7404
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test the logic for determining if updates should be checked"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7409
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Force update should always return True
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7414
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: config = {"force_update": True, "check_interval_hours": 24}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7419
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7424
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertTrue(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7429
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: config = {"force_update": False, "check_interval_hours": 24}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7434
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7439
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertTrue(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7444
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager.update_check_cache()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7449
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertFalse(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7454
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: config = {"force_update": False, "check_interval_hours": 0}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7459
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7464
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager.update_check_cache()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7469
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertTrue(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7474
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Test state updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7479
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: operation="update_state",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7484
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def update_state():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7489
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await emotional_core.update_emotional_state(test_input)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7494
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_result = await update_state()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7499
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert update_result.mean_time < 0.02, "State update too slow"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7504
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: emotional_core.update_emotional_state({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7509
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7514
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: brain.emotional_processor.update_emotional_state.assert_called()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7519
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Should update emotional state and respond empathetically
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7524
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: brain.emotional_processor.update_emotional_state.assert_called()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7529
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7534
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_brain_context_update(multimodal_integration, mock_brain, temp_image):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7539
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Check that brain context was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7544
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7549
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7554
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7559
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await event_bus.subscribe(EventType.ADAPTATION_UPDATED, collect_events)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7564
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert any(e.type == EventType.ADAPTATION_UPDATED for e in events)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7569
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: adaptation_event = next(e for e in events if e.type == EventType.ADAPTATION_UPDATED)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7574
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify emotional trajectory was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7579
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify topic was updated and depth reset
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7584
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_update_configuration(self, proactive_engine, mock_config_manager):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7589
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update configuration
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7594
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: proactive_engine.update_configuration(new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7599
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify configuration was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7604
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify config manager was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7609
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_config_manager.update_config.assert_called_once_with("cognitive", new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7614
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: manager.update_improvement_status = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7619
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: data_manager.update_improvement_status.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7624
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: data_manager.update_improvement_status.assert_not_called()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7629
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7634
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7639
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7644
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7649
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_repo.return_value.delete_head.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7654
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7659
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7664
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7669
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Event(EventType.SYSTEM, {"status": "System update"}, priority=2),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7674
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test advanced health check metrics and updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7679
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify health metrics were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7684
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: service_mesh._service_dependencies.update({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7689
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: if event.data.get("action") == "health_update":
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7694
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert event.data["action"] == "health_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7699
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: if event.data.get("action") == "dependency_update":
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7704
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Mock health checks to update dependencies
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7709
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_service_updates_subscription(registry):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7714
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test service update notifications"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7719
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Subscribe to updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7724
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Wait for the feedback to update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7729
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7734
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Wait for sentiment score to update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7739
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: type=EventType.EMOTIONAL_STATE_UPDATE,
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7744
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: events = event_bus.get_recent_events(EventType.EMOTIONAL_STATE_UPDATE)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7749
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify personality traits were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7754
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Simulate an emotional state update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7759
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: "action": "state_update",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7764
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify emotional processor was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7769
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert emotional_integration.emotional_processor.update_emotional_state.called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7774
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: interaction storage, relationship updates, value system storage, and event handling.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7779
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify that the state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7784
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify that the state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7789
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_update_relationship(self, emotional_memory, event_bus, memory_service):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7794
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update relationship
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7799
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await emotional_memory.update_relationship(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7804
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: memory_service.update_relationship_metrics.assert_called_once_with(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7809
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert event_bus.emit.call_count == 2  # First for init, second for update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7814
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert args[0] == "emotional.memory.relationship_updated"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7819
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert args[0] == "emotional.memory.value_updated"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7824
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify that the value was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7829
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify that the state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7834
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Test emotional update handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7839
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await emotional_memory._handle_emotional_update(event_data)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7844
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: memory_service.update_relationship_metrics.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7849
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Test value update handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7854
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await emotional_memory._handle_value_update(event_data)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7859
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7864
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Test update_emotional_memory event handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7869
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: result = await emotional_integration._handle_update_emotional_memory({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7874
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify memory update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7879
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify interaction timing updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7884
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify memory and learning updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7889
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7894
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def update_principle_weight(self, principle, weight):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7899
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Update principle weight"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7904
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_update_ethical_principle(ethical_integration, mock_ethical_framework):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7909
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Test valid update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7914
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: result = await ethical_integration.update_ethical_principle(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7919
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: result = await ethical_integration.update_ethical_principle(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7924
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with patch.object(mock_ethical_framework, 'update_principle_weight', side_effect=ValueError("Unknown principle")):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7929
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: result = await ethical_integration.update_ethical_principle(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7934
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Test update_ethical_principle event handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7939
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: result = await ethical_integration._handle_update_ethical_principle({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7944
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7949
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7954
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7959
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_delete_preset(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7964
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Delete the preset
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7969
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.preset_manager.delete_preset(test_preset["name"])
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7974
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify the preset was deleted
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7979
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: temp_db = tempfile.NamedTemporaryFile(delete=False, suffix='.db')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7984
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_emotional_state_update_from_llm_response(self, brain, event_bus):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7989
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test that emotional state is updated from LLM responses."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7994
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify that the emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7999
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_relationship_update_after_interaction(self, brain):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8004
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test that relationship metrics are updated after interactions."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8009
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Mock the emotional processor and update_relationship
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8014
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: }), patch.object(brain.emotional_memory, 'update_relationship', AsyncMock()) as mock_update:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8019
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify that update_relationship was called with positive deltas
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8024
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8029
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: args, kwargs = mock_update.call_args
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8034
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Emit a value update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8039
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await brain.event_bus.emit("value.update", {
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8044
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Mock update_relationship
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8049
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with patch.object(brain.emotional_memory, 'update_relationship', AsyncMock()) as mock_update:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8054
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify that update_relationship was called to save final state
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8059
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8064
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8069
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertIn("emotional.update", self.event_bus._subscribers)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8074
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8079
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8084
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8089
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8094
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8099
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8104
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8109
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory._handle_emotional_update = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8114
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Emit an emotional update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8119
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await self.event_bus.emit("emotional.update", {"emotion": "joy", "value": 0.8})
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8124
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory._handle_emotional_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8129
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8134
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8139
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8144
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8149
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8154
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8159
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertIn("emotional.update", self.event_bus._subscribers)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8164
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Emit an emotional update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8169
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await self.event_bus.emit("emotional.update", {"emotion": "anger", "value": 0.8})
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8174
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def update_value_system():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8179
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.brain.ethical_framework.update_value_system = AsyncMock(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8184
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: side_effect=update_value_system
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8189
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update value system
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8194
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await self.brain.ethical_framework.update_value_system()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8199
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify that value system was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8204
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8209
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test that a service is auto-deregistered if not updated within the threshold
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8214
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: and validate that the DatabaseManager can insert and fetch interactions."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8219
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Simulate that the service's last update occurred sufficiently in the past
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8224
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Insert an interaction record
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8229
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: db.insert_interaction(test_data)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8234
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert record_found, "The inserted interaction data should be found in the database"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8239
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test that a service is auto-deregistered if no health update occurs within the threshold."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8244
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: EventType.SYSTEM_IMPROVEMENT_UPDATE,
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8249
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert all(e.type == EventType.SYSTEM_IMPROVEMENT_UPDATE for e in events_received)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8254
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_analyze_and_update_error_patterns(improvement_system):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8259
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test error pattern analysis and strategy updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8264
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await improvement_system._analyze_and_update_error_patterns()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8269
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: improvement_system.error_tracker.update_recovery_strategy.assert_called_once_with(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8274
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_analyze_and_update_emotional_patterns(improvement_system):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8279
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test emotional pattern analysis and parameter updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8284
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await improvement_system._analyze_and_update_emotional_patterns()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8289
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: improvement_system.emotional_core.update_response_parameters.assert_called_once_with(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8294
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8299
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8304
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_delete_adapter(lora_manager):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8309
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: name="adapter_to_delete",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8314
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: description="Adapter to delete",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8319
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: adapter_path = os.path.join(lora_manager.lora_dir, "adapter_to_delete")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8324
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Delete the adapter
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8329
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: result = await lora_manager.delete_adapter("adapter_to_delete")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8334
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Check that the delete was successful
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8339
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Try to delete a non-existent adapter
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8344
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await lora_manager.delete_adapter("non_existent_adapter")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8349
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: emotions.update(self.emotion_detector.detect_text_emotion(text))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8354
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: emotions.update(self.emotion_detector.detect_audio_emotion(audio_data))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8359
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: emotions.update(self.emotion_detector.detect_facial_emotion(image_data))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8364
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.personality_model.update(interaction)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8369
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def update(self, interaction):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8374
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Update personality state"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8379
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def delete(self, key):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8384
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Delete a key"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8389
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.sets[key].update(values)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8394
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.sorted_sets[key].update(mapping)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8399
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with tempfile.NamedTemporaryFile(suffix='.jpg', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8404
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8409
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, project_root)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8414
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8419
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test service heartbeat updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8424
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update skill levels
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8429
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: curriculum_manager.update_skill_levels(task, True, 0.9)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8434
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update performance and select again
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8439
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: meta_learner.update_strategy_performance(0.8)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8444
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify system state updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8449
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8454
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: valid_command_json = '{"command": "delete_file", "args": "protected.txt"}'
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8459
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: failure_message = "Failed to delete file: Permission denied"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8464
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: final_response = brain.process_command("delete the protected file")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8469
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_cmd_processor.execute_command.assert_called_once_with("delete_file", "protected.txt")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8474
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8479
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify working memory was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8484
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8489
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_handle_delete_file(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8494
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test the internal _handle_delete_file method."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8499
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: test_file = self.test_dir / "file_to_delete.txt"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8504
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: test_file.touch() # Create the file to be deleted
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8509
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: result = self.cmd_processor._handle_delete_file(str(test_file))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8514
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertIn("Deleted file", result)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8519
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertFalse(test_file.exists(), "_handle_delete_file did not delete the file.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8524
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8529
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_05_delete_file_command_success(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8534
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test the 'delete file' command handler for successful deletion."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8539
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: filename = "file_to_delete.txt"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8544
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: command = f"delete file {filename}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8549
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.assertEqual(result, f"Deleted file: {expected_path}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8554
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_06_delete_file_not_found(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8559
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test the 'delete file' command when the file does not exist."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8564
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: command = f"delete file {filename}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8569
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_07_delete_file_protected_path_failure(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8574
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: command = f"delete file {protected_path}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8579
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_08_delete_file_decorator_error_handling(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8584
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: command = f"delete file {filename}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8589
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8594
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update summary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8599
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update summary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8604
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_update_and_get_relationship_data(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8609
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.db_manager.update_relationship_data(user_id, relationship_type, trust_level, rapport_level)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8614
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_update_relationship_metrics(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8619
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Initial update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8624
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.memory.update_relationship_metrics(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8629
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: action = "delete_user_data"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8634
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_01_emotional_state_update(self, event_bus):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8639
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update with positive emotion
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8644
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: item_id = await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8649
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update with negative emotion
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8654
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8659
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8664
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await memory.update_relationship_context(entity_id, context)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8669
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update context
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8674
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update = {
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8679
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await memory.update_relationship_context(entity_id, update)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8684
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Check updated context
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8689
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: updated_context = await memory.get_relationship_context(entity_id)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8694
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert updated_context["trust_level"] == 0.9
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8699
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert len(updated_context["shared_experiences"]) == 3
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8704
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Check emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8709
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Check emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8714
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8719
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8724
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8729
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8734
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_personality_state_updates(self, emotional_service):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8739
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test personality state updates and persistence"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8744
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert final_state != initial_state  # State should update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8749
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info("Personality state updates validated")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8754
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_04_empathy_model_updates(self, processor):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8759
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await processor.update_empathy_model({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8764
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await processor.update_empathy_model({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8769
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8774
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8779
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8784
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8789
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Check priorities were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8794
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.temp_config = tempfile.NamedTemporaryFile(delete=False, suffix='.json')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8799
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.temp_db = tempfile.NamedTemporaryFile(delete=False, suffix='.db')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8804
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with tempfile.NamedTemporaryFile(delete=False, suffix='.json') as temp_file:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8809
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.temp_db = tempfile.NamedTemporaryFile(delete=False, suffix='.db')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8814
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: "delete user data without confirmation",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8819
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with tempfile.NamedTemporaryFile(delete=False, suffix='.json') as temp_file:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8824
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with tempfile.NamedTemporaryFile(delete=False, suffix='.json') as temp_file:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8829
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify emotional state update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8834
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert result['memory_updates']
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8839
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Get updated metrics
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8844
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify metrics were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8849
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """HealthMonitor should emit a *healthy* status update when the endpoint responds 200."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8854
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8859
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: updated_items = await working_memory.get_active_items()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8864
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert len(updated_items) <= len(items)  # Should have decayed
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8869
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: for old, new in zip(items, updated_items):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8874
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: last_updated: float
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8879
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: last_updated=time.time(),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8884
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: last_updated=time.time(),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8889
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8894
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await brain.emotional_processor.update_emotional_state({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8899
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_event_bus.subscribe.assert_any_call("config.updated", arpeggiator._handle_config_updated)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8904
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_handle_config_updated(self, arpeggiator):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8909
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test handling configuration update events"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8914
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Replace update_configuration with a mock
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8919
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: arpeggiator.update_configuration = MagicMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8924
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: event_type="config.updated",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8929
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await arpeggiator._handle_config_updated(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8934
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify update_configuration was called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8939
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: arpeggiator.update_configuration.assert_called_once_with({"sensitivity": 0.7})
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8944
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: event_type="config.updated",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8949
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: arpeggiator.update_configuration.reset_mock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8954
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await arpeggiator._handle_config_updated(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8959
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify update_configuration was not called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8964
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert not arpeggiator.update_configuration.called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8969
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_update_configuration(self, arpeggiator, mock_config_manager):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8974
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update configuration
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8979
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: arpeggiator.update_configuration(new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8984
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify configuration was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8989
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify config manager was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8994
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_config_manager.update_config.assert_called_once_with("gesture_arpeggiator", new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8999
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: event_bus.subscribe.assert_any_call("ui.context_changed", gesture_integration.update_ui_context)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9004
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: event_bus.subscribe.assert_any_call("config.updated.gesture_integration", gesture_integration.update_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9009
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_update_ui_context(self, gesture_integration):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9014
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test UI context updates."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9019
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: gesture_integration.update_ui_context(context_event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9024
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_update_config(self, gesture_integration):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9029
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test configuration updates."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9034
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: gesture_integration.update_config(new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9039
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: @patch('alejo.ui.pyside_ui.HolographicWidget.update')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9044
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def test_event_handler(self, mock_update):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9049
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9054
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9059
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Check that config was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9064
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Check that brain.update_config was called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9069
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_brain.update_config.assert_called_once_with(alejo_ui.config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9074
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: service.update_arpeggiator_settings = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9079
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: service.update_visualizer_settings = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9084
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify arpeggiator settings were updated with Joy parameters
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9089
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_arpeggiator_service.update_arpeggiator_settings.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9094
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: args = mock_arpeggiator_service.update_arpeggiator_settings.call_args[0][0]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9099
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Verify visualizer settings were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9104
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_arpeggiator_service.update_visualizer_settings.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9109
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: vis_args = mock_arpeggiator_service.update_visualizer_settings.call_args[0][0]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9114
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_arpeggiator_service.update_arpeggiator_settings.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9119
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: args = mock_arpeggiator_service.update_arpeggiator_settings.call_args[0][0]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9124
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: mock_arpeggiator_service.update_arpeggiator_settings.reset_mock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9129
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent.parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9134
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: "page_title": "Test Page Updated",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9139
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent.parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9144
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9149
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Check that last_used was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9154
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert sent_data["type"] == "config_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9159
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_handle_ui_update(websocket_handler, mock_websocket):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9164
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test handling of UI update events"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9169
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: "update": {
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9174
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await websocket_handler._handle_ui_update(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9179
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert sent_data["type"] == "ui_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9184
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert sent_data["update"] == event["update"]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9189
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: async def test_handle_config_update(websocket_handler, mock_websocket):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9194
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Test handling of configuration update events"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9199
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await websocket_handler._handle_config_update(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9204
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: assert sent_data["type"] == "config_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9209
    SQL query detected - ensure parameterized queries are used
    Code: Code: File: update_manager.py
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9214
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: ALEJO Update Manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9219
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Automatically checks for and applies updates before ALEJO starts.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9224
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logging.FileHandler("alejo_update.log"),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9229
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger = logging.getLogger("alejo.update_manager")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9234
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: class UpdateManager:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9239
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Manages automatic updates for ALEJO system
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9244
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: This class checks for updates from the main repository and applies them
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9249
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Initialize the Update Manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9254
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.update_cache_file = self.alejo_dir / ".update_cache"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9259
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.update_lock_file = self.alejo_dir / ".update_lock"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9264
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.force_update = self.config.get("force_update", False)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9269
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def should_check_for_updates(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9274
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Determine if we should check for updates based on last check time
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9279
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: if self.force_update:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9284
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: if not self.update_cache_file.exists():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9289
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with open(self.update_cache_file, "r") as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9294
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def update_check_cache(self, update_available=False, version=None):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9299
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Update the cache file with current check information"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9304
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: "update_available": update_available,
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9309
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with open(self.update_cache_file, "w") as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9314
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def check_for_updates(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9319
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Check if updates are available
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9324
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: tuple: (update_available, current_version, latest_version)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9329
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.warning("Not a git repository, cannot check for updates")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9334
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Create a lock file to prevent concurrent update checks
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9339
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: if self.update_lock_file.exists():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9344
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: if time.time() - os.path.getmtime(self.update_lock_file) > 600:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9349
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: os.remove(self.update_lock_file)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9354
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info("Update check already in progress, skipping")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9359
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: with open(self.update_lock_file, "w") as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9364
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_available = current_version != latest_version
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9369
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.update_check_cache(update_available, current_version)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9374
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: return update_available, current_version, latest_version
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9379
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.error(f"Error checking for updates: {str(e)}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9384
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: if self.update_lock_file.exists():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9389
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: os.remove(self.update_lock_file)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9394
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def apply_update(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9399
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Apply available updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9404
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: bool: True if update was successful, False otherwise
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9409
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.warning("Not a git repository, cannot apply updates")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9414
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.error(f"Error pulling updates: {result.stderr}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9419
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update database schema if needed
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9424
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.update_database_schema()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9429
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info("Update completed successfully")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9434
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.error(f"Error applying update: {str(e)}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9439
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Restore ALEJO from backup in case of update failure"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9444
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def update_database_schema(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9449
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Update database schema if necessary"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9454
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def run_update_check(self, auto_apply=True):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9459
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Run a full update check and optionally apply updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9464
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: auto_apply: Whether to automatically apply updates if available
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9469
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: bool: True if system is up to date, False if update failed
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9474
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: if not self.should_check_for_updates():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9479
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info("Update check was performed recently, skipping")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9484
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info("Checking for ALEJO updates")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9489
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_available, current_version, latest_version = self.check_for_updates()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9494
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: if update_available:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9499
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info(f"Update available: {current_version[:7]} -> {latest_version[:7]}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9504
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info("Applying update automatically")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9509
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: return self.apply_update()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9514
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: logger.info("Update available but not applying automatically")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9519
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: parser = argparse.ArgumentParser(description="ALEJO Update Manager")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9524
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: parser.add_argument("--check-only", action="store_true", help="Only check for updates, don't apply them")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9529
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: parser.add_argument("--force", action="store_true", help="Force update check even if done recently")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9534
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Create update manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9539
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: config = {"force_update": args.force}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9544
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9549
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Run update check
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9554
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: update_manager.run_update_check(auto_apply=not args.check_only)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9559
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: await r.delete(test_key)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9564
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, str(Path(script_path).parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9569
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: Y]O?gjOEb?0)r   id  r  )r#   r#   gh㈵>g7P>{r   )r#   r#   gh㈵>g7P>0)r   i  	fix_flags)r   r   guR#>g&p>{r   )r   r   guR#>g&p>0)r   i  r   )r   r   g>g+|c?{r   )r   r   g>g+|c?0)rS   rT   rU   )r)   r)   g0D4>g =T?{0)DC:\Users\magic\AppData\Local\Programs\Python\Python39\lib\weakref.pyi   r   )r)   r)   glӎ>g4vxU>{rY   )r)   r)   glӎ>g4vxU>0)r  i"  update)r)   r)   gavt>g:ܳS>{)r  r  r   )r)   r)   gavt>g:ܳS>0)FC:\Users\magic\AppData\Local\Programs\Python\Python39\lib\threading.pyr   RLock)r#   r#   gkNu>gkNu>{rZ   iv  
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9574
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9579
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: """Process the command and update the log"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9584
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: def _update():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9589
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.log_text.insert(tk.END, message + "\n\n", color)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9594
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: # Update in the main thread
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9599
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.root.after(0, _update)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9604
    SQL query detected - ensure parameterized queries are used
    Code: Code: Code: self.log_text.delete(1.0, tk.END)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9657
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.dirname(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9661
    SQL query detected - ensure parameterized queries are used
    Code: File: .update_cache
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9665
    SQL query detected - ensure parameterized queries are used
    Code: Code: {"last_check": "2025-06-30T23:52:42.890553", "update_available": false, "current_version": "abcd1234"}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9673
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Updates services with zero downtime
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9678
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Dependency updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9686
    SQL query detected - ensure parameterized queries are used
    Code: Code: * Regular model updates containing collective insights
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9691
    SQL query detected - ensure parameterized queries are used
    Code: Code: * User control over update frequency and domains
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9696
    SQL query detected - ensure parameterized queries are used
    Code: Code: * Users can delete their local learning data at any time
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9704
    SQL query detected - ensure parameterized queries are used
    Code: Code: RUN apt-get update && apt-get install -y \
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9712
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Manages dynamic UI updates and DOM manipulation for gesture-enabled elements.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9717
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Provides methods to update, enable, or disable elements based on their gesture properties.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9722
    SQL query detected - ensure parameterized queries are used
    Code: Code: - CI/CD pipelines have been updated to include backend validation, integration testing, and security compliance.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9730
    SQL query detected - ensure parameterized queries are used
    Code: Code: - **Web Interface**: Modern, responsive web interface with real-time updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9735
    SQL query detected - ensure parameterized queries are used
    Code: Code: - **ServiceRegistry**: Manages service registration and health updates, providing a single source of truth for service status.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9743
    SQL query detected - ensure parameterized queries are used
    Code: Code: 3. Update the frontend UI in `alejo/templates/gesture_enabled_interface.html`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9751
    SQL query detected - ensure parameterized queries are used
    Code: Code: {"action": "delete_file"},
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9756
    SQL query detected - ensure parameterized queries are used
    Code: Code: 5. **Updates**: Keep all dependencies up to date.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9760
    SQL query detected - ensure parameterized queries are used
    Code: File: alejo_update.log
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9764
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-30 23:52:21,057 - alejo.update_manager - INFO - Pulling latest changes from repository
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9769
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-30 23:52:21,058 - alejo.update_manager - ERROR - Error pulling updates: Failed to pull
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9774
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-30 23:52:21,062 - alejo.update_manager - INFO - Pulling latest changes from repository
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9779
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-30 23:52:21,063 - alejo.update_manager - INFO - Updating dependencies
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9784
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-30 23:52:21,063 - alejo.update_manager - INFO - Update completed successfully
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9789
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-30 23:52:21,068 - alejo.update_manager - INFO - Backing up current ALEJO installation to C:\Users\magic\AppData\Local\Temp\alejo_backup_h5jwy8dw
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9794
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-30 23:52:21,083 - alejo.update_manager - INFO - Restoring ALEJO from backup C:\Users\magic\AppData\Local\Temp\alejo_backup_h5jwy8dw
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9799
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-30 23:52:42,882 - alejo.update_manager - ERROR - Error restoring backup: [WinError 32] The process cannot access the file because it is being used by another process: 'C:\\Users\\magic\\CascadeProjects\\ALEJO\\alejo_update.log'
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9807
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Update references to use the new module
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9812
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Update references to use the new module
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9817
    SQL query detected - ensure parameterized queries are used
    Code: Code: 4. **Update Tests**:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9822
    SQL query detected - ensure parameterized queries are used
    Code: Code: 5. **Update Documentation**:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9827
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Update user guide
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9835
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2. Update imports to use package structure
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9840
    SQL query detected - ensure parameterized queries are used
    Code: Code: 3. Update imports to use package structure
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9848
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(self.script_path.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9856
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9864
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9872
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9880
    SQL query detected - ensure parameterized queries are used
    Code: Code: 5. **Brain Integration**: Update ALEJOBrain and other components to automatically self-register with the ServiceRegistry and intercommunicate via the EventBus.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9888
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Create secure update mechanisms
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9892
    SQL query detected - ensure parameterized queries are used
    Code: File: docs\AUTO_UPDATE_README.md
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9896
    SQL query detected - ensure parameterized queries are used
    Code: Code: # ALEJO Automatic Update System
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9901
    SQL query detected - ensure parameterized queries are used
    Code: Code: This document explains the automatic update system implemented in ALEJO to ensure users always have the latest security patches and features.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9906
    SQL query detected - ensure parameterized queries are used
    Code: Code: The ALEJO update system performs the following operations:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9911
    SQL query detected - ensure parameterized queries are used
    Code: Code: 1. **Pre-launch Update Check**: Before ALEJO starts, it automatically checks for updates from the main repository.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9916
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2. **Secure Update Process**:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9921
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Creates a backup of the current installation before applying any updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9926
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Updates the codebase from the repository
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9931
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Updates dependencies if necessary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9936
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Rolls back to the backup if any errors occur during the update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9941
    SQL query detected - ensure parameterized queries are used
    Code: Code: 3. **Scheduled Checks**: Updates are checked at configurable intervals (default: every 4 hours) to avoid excessive network traffic.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9946
    SQL query detected - ensure parameterized queries are used
    Code: Code: The update system works automatically and requires no user intervention. However, several command-line options are available:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9951
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Normal startup with automatic update check
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9956
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Skip update check during startup
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9961
    SQL query detected - ensure parameterized queries are used
    Code: Code: python start_alejo_with_gestures.py --skip-updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9966
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Manually check for updates without starting ALEJO
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9971
    SQL query detected - ensure parameterized queries are used
    Code: Code: python update_manager.py --check-only
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9976
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Force update check regardless of when the last check occurred
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9981
    SQL query detected - ensure parameterized queries are used
    Code: Code: python update_manager.py --force
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9986
    SQL query detected - ensure parameterized queries are used
    Code: Code: The update system can be configured through environment variables:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9991
    SQL query detected - ensure parameterized queries are used
    Code: Code: - `ALEJO_UPDATE_INTERVAL`: Set the minimum hours between update checks (default: 4)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9996
    SQL query detected - ensure parameterized queries are used
    Code: Code: If you encounter issues with the automatic update system:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10001
    SQL query detected - ensure parameterized queries are used
    Code: Code: 1. Check the log file (`alejo_update.log`) for detailed error messages
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10006
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2. Try running a manual update with `python update_manager.py --force`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10011
    SQL query detected - ensure parameterized queries are used
    Code: Code: 3. If updates consistently fail, you can bypass them with `--skip-updates` and update manually
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10016
    SQL query detected - ensure parameterized queries are used
    Code: Code: The automatic update system enhances ALEJO's security by ensuring users always have the latest security patches. The system:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10021
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Creates backups before applying updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10026
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Maintains a log of all update operations
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10031
    SQL query detected - ensure parameterized queries are used
    Code: Code: To extend or modify the update system:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10036
    SQL query detected - ensure parameterized queries are used
    Code: Code: 1. The core functionality is in `update_manager.py`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10041
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2. Test cases are available in `test_update_manager.py`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10046
    SQL query detected - ensure parameterized queries are used
    Code: Code: 3. The update system is integrated into ALEJO's startup process in `start_alejo_with_gestures.py`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10051
    SQL query detected - ensure parameterized queries are used
    Code: Code: python -m unittest test_update_manager.py
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10059
    SQL query detected - ensure parameterized queries are used
    Code: Code: - **Event-Driven Updates**: Computing only when necessary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10064
    SQL query detected - ensure parameterized queries are used
    Code: Code: - **Processing Efficiency**: Neural updates per second
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10072
    SQL query detected - ensure parameterized queries are used
    Code: Code: - **Modularity**: Components are well-separated, making it easier to update individual parts.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10080
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Update plugins to compatible versions
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10088
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10096
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Insert before the first import
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10104
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Find a good place to insert the polyfill
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10109
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Try to insert after imports or at the beginning of the file
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10114
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Insert at the beginning of the file
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10119
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Insert catch block before the last closing brace
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10127
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Find a good place to insert the wrapper
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10132
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Insert after script tag
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10137
    SQL query detected - ensure parameterized queries are used
    Code: Code: insert_pos = script_tag_match.end()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10142
    SQL query detected - ensure parameterized queries are used
    Code: Code: content = content[:insert_pos] + secure_storage_wrapper + content[insert_pos:]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10147
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Insert after imports
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10152
    SQL query detected - ensure parameterized queries are used
    Code: Code: insert_pos = import_match.end()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10157
    SQL query detected - ensure parameterized queries are used
    Code: Code: content = content[:insert_pos] + secure_storage_wrapper + content[insert_pos:]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10162
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Insert at the beginning with a comment explaining
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10170
    SQL query detected - ensure parameterized queries are used
    Code: Code: modified_lines.insert(import_section_end, "import secrets  # More secure for cryptographic purposes")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10193
    SQL query detected - ensure parameterized queries are used
    Code: Code: progress_bar.update(len(data))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10198
    SQL query detected - ensure parameterized queries are used
    Code: Code: sha256_hash.update(byte_block)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10206
    SQL query detected - ensure parameterized queries are used
    Code: Code: 1. Update images:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10214
    SQL query detected - ensure parameterized queries are used
    Code: Code: 1. Update Istio:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10219
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2. Update monitoring stack:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10227
    SQL query detected - ensure parameterized queries are used
    Code: Code: "last_updated": "2025-06-17T06:34:00.742317"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10235
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-11 07:31:08,226 - __main__ - INFO - Updated index.html
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10243
    SQL query detected - ensure parameterized queries are used
    Code: Code: 1. Review and update priorities weekly
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10251
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(self.project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10256
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(self.project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10261
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update results
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10266
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update results
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10271
    SQL query detected - ensure parameterized queries are used
    Code: Code: def update_html_references(self, js_dir, css_dir):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10276
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Update HTML templates to use optimized files"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10281
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update JS references
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10286
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update CSS references
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10291
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Write updated content
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10296
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info(f"Updated {html_file.name}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10301
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update HTML references
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10306
    SQL query detected - ensure parameterized queries are used
    Code: Code: optimizer.update_html_references(js_dir, css_dir)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10314
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Send status updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10322
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.warning(f"{env_file} already exists. Please delete it first if you want to create a new one.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10330
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(PROJECT_ROOT))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10338
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10346
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.dirname(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10354
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10362
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(__file__).resolve().parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10367
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update improvements status in data manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10372
    SQL query detected - ensure parameterized queries are used
    Code: Code: await data_manager.update_improvements(applied_improvements)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10377
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info(f"Updated status for {len(applied_improvements)} improvements")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10385
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, project_root)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10393
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(__file__).resolve().parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10401
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(script_dir.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10409
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(__file__).resolve().parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10417
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10425
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Update test configuration"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10430
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update database paths in config
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10435
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Updated test configuration")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10443
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(PROJECT_ROOT))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10451
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update config with file values
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10456
    SQL query detected - ensure parameterized queries are used
    Code: Code: self._update_dict(config, file_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10461
    SQL query detected - ensure parameterized queries are used
    Code: Code: def _update_dict(self, target: Dict, source: Dict) -> None:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10466
    SQL query detected - ensure parameterized queries are used
    Code: Code: Recursively update dictionary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10471
    SQL query detected - ensure parameterized queries are used
    Code: Code: self._update_dict(target[key], value)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10479
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Import update manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10484
    SQL query detected - ensure parameterized queries are used
    Code: Code: from update_manager import UpdateManager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10489
    SQL query detected - ensure parameterized queries are used
    Code: Code: UPDATE_MANAGER_AVAILABLE = True
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10494
    SQL query detected - ensure parameterized queries are used
    Code: Code: UPDATE_MANAGER_AVAILABLE = False
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10499
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Add update-related command line arguments
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10504
    SQL query detected - ensure parameterized queries are used
    Code: Code: "--skip-updates",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10509
    SQL query detected - ensure parameterized queries are used
    Code: Code: help="Skip checking for updates before starting"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10514
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check for updates before starting services
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10519
    SQL query detected - ensure parameterized queries are used
    Code: Code: if UPDATE_MANAGER_AVAILABLE and not args.skip_updates:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10524
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Checking for ALEJO updates...")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10529
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10534
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_success = update_manager.run_update_check(auto_apply=True)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10539
    SQL query detected - ensure parameterized queries are used
    Code: Code: if not update_success:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10544
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.error("Update process encountered errors. Starting with current version.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10549
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Update check completed successfully.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10554
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.error(f"Error during update process: {str(e)}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10562
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(PROJECT_ROOT))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10570
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10578
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update the timestamp
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10583
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update default URLs if provided
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10591
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update the timestamp
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10599
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check updated allocations
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10604
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info(f"Updated allocations: {allocations}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10608
    SQL query detected - ensure parameterized queries are used
    Code: File: test_update_manager.py
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10612
    SQL query detected - ensure parameterized queries are used
    Code: Code: Test script for ALEJO Update Manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10617
    SQL query detected - ensure parameterized queries are used
    Code: Code: This script tests the functionality of the update manager to ensure it works correctly.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10622
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Import the update manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10627
    SQL query detected - ensure parameterized queries are used
    Code: Code: from update_manager import UpdateManager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10632
    SQL query detected - ensure parameterized queries are used
    Code: Code: class TestUpdateManager(unittest.TestCase):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10637
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test cases for the ALEJO Update Manager"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10642
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.test_dir = tempfile.mkdtemp(prefix="alejo_update_test_")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10647
    SQL query detected - ensure parameterized queries are used
    Code: Code: "force_update": True
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10652
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10657
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertTrue(update_manager.is_git_repo())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10662
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertFalse(update_manager.is_git_repo())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10667
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_check_for_updates_no_updates(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10672
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test checking for updates when none are available"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10677
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10682
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_available, current, latest = update_manager.check_for_updates()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10687
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertFalse(update_available)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10692
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_check_for_updates_available(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10697
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test checking for updates when updates are available"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10702
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10707
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_available, current, latest = update_manager.check_for_updates()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10712
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertTrue(update_available)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10717
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10722
    SQL query detected - ensure parameterized queries are used
    Code: Code: backup_dir = update_manager.backup_current_version()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10727
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager.restore_backup(backup_dir)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10732
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_apply_update_success(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10737
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test successful update application"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10742
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock.Mock(stdout="Updated files", stderr="", returncode=0),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10747
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10752
    SQL query detected - ensure parameterized queries are used
    Code: Code: UpdateManager, 'backup_current_version',
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10757
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Create requirements.txt for testing dependency updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10762
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = update_manager.apply_update()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10767
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_apply_update_failure(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10772
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test failed update application"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10777
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10782
    SQL query detected - ensure parameterized queries are used
    Code: Code: UpdateManager, 'backup_current_version',
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10787
    SQL query detected - ensure parameterized queries are used
    Code: Code: with mock.patch.object(UpdateManager, 'restore_backup') as mock_restore:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10792
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = update_manager.apply_update()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10797
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_should_check_for_updates(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10802
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test the logic for determining if updates should be checked"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10807
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Force update should always return True
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10812
    SQL query detected - ensure parameterized queries are used
    Code: Code: config = {"force_update": True, "check_interval_hours": 24}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10817
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10822
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertTrue(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10827
    SQL query detected - ensure parameterized queries are used
    Code: Code: config = {"force_update": False, "check_interval_hours": 24}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10832
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10837
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertTrue(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10842
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager.update_check_cache()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10847
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertFalse(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10852
    SQL query detected - ensure parameterized queries are used
    Code: Code: config = {"force_update": False, "check_interval_hours": 0}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10857
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10862
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager.update_check_cache()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10867
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertTrue(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10875
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Test state updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10880
    SQL query detected - ensure parameterized queries are used
    Code: Code: operation="update_state",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10885
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def update_state():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10890
    SQL query detected - ensure parameterized queries are used
    Code: Code: await emotional_core.update_emotional_state(test_input)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10895
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_result = await update_state()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10900
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert update_result.mean_time < 0.02, "State update too slow"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10905
    SQL query detected - ensure parameterized queries are used
    Code: Code: emotional_core.update_emotional_state({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10913
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10918
    SQL query detected - ensure parameterized queries are used
    Code: Code: brain.emotional_processor.update_emotional_state.assert_called()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10923
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Should update emotional state and respond empathetically
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10928
    SQL query detected - ensure parameterized queries are used
    Code: Code: brain.emotional_processor.update_emotional_state.assert_called()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10936
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10941
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_brain_context_update(multimodal_integration, mock_brain, temp_image):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10946
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check that brain context was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10954
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10962
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10970
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10978
    SQL query detected - ensure parameterized queries are used
    Code: Code: await event_bus.subscribe(EventType.ADAPTATION_UPDATED, collect_events)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10983
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert any(e.type == EventType.ADAPTATION_UPDATED for e in events)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10988
    SQL query detected - ensure parameterized queries are used
    Code: Code: adaptation_event = next(e for e in events if e.type == EventType.ADAPTATION_UPDATED)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10996
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify emotional trajectory was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11001
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify topic was updated and depth reset
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11006
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_update_configuration(self, proactive_engine, mock_config_manager):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11011
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update configuration
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11016
    SQL query detected - ensure parameterized queries are used
    Code: Code: proactive_engine.update_configuration(new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11021
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify configuration was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11026
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify config manager was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11031
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_config_manager.update_config.assert_called_once_with("cognitive", new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11039
    SQL query detected - ensure parameterized queries are used
    Code: Code: manager.update_improvement_status = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11044
    SQL query detected - ensure parameterized queries are used
    Code: Code: data_manager.update_improvement_status.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11049
    SQL query detected - ensure parameterized queries are used
    Code: Code: data_manager.update_improvement_status.assert_not_called()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11057
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11065
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11073
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11081
    SQL query detected - ensure parameterized queries are used
    Code: Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11086
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_repo.return_value.delete_head.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11091
    SQL query detected - ensure parameterized queries are used
    Code: Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11096
    SQL query detected - ensure parameterized queries are used
    Code: Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11101
    SQL query detected - ensure parameterized queries are used
    Code: Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11109
    SQL query detected - ensure parameterized queries are used
    Code: Code: Event(EventType.SYSTEM, {"status": "System update"}, priority=2),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11117
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test advanced health check metrics and updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11122
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify health metrics were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11127
    SQL query detected - ensure parameterized queries are used
    Code: Code: service_mesh._service_dependencies.update({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11135
    SQL query detected - ensure parameterized queries are used
    Code: Code: if event.data.get("action") == "health_update":
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11140
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert event.data["action"] == "health_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11145
    SQL query detected - ensure parameterized queries are used
    Code: Code: if event.data.get("action") == "dependency_update":
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11150
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Mock health checks to update dependencies
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11158
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_service_updates_subscription(registry):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11163
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test service update notifications"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11168
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Subscribe to updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11176
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Wait for the feedback to update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11184
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11189
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Wait for sentiment score to update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11197
    SQL query detected - ensure parameterized queries are used
    Code: Code: type=EventType.EMOTIONAL_STATE_UPDATE,
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11202
    SQL query detected - ensure parameterized queries are used
    Code: Code: events = event_bus.get_recent_events(EventType.EMOTIONAL_STATE_UPDATE)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11210
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify personality traits were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11218
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Simulate an emotional state update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11223
    SQL query detected - ensure parameterized queries are used
    Code: Code: "action": "state_update",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11228
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify emotional processor was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11233
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert emotional_integration.emotional_processor.update_emotional_state.called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11241
    SQL query detected - ensure parameterized queries are used
    Code: Code: interaction storage, relationship updates, value system storage, and event handling.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11246
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify that the state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11251
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify that the state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11256
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_update_relationship(self, emotional_memory, event_bus, memory_service):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11261
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update relationship
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11266
    SQL query detected - ensure parameterized queries are used
    Code: Code: await emotional_memory.update_relationship(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11271
    SQL query detected - ensure parameterized queries are used
    Code: Code: memory_service.update_relationship_metrics.assert_called_once_with(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11276
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert event_bus.emit.call_count == 2  # First for init, second for update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11281
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert args[0] == "emotional.memory.relationship_updated"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11286
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert args[0] == "emotional.memory.value_updated"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11291
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify that the value was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11296
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify that the state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11301
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Test emotional update handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11306
    SQL query detected - ensure parameterized queries are used
    Code: Code: await emotional_memory._handle_emotional_update(event_data)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11311
    SQL query detected - ensure parameterized queries are used
    Code: Code: memory_service.update_relationship_metrics.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11316
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Test value update handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11321
    SQL query detected - ensure parameterized queries are used
    Code: Code: await emotional_memory._handle_value_update(event_data)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11329
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11334
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Test update_emotional_memory event handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11339
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = await emotional_integration._handle_update_emotional_memory({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11347
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify memory update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11352
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify interaction timing updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11357
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify memory and learning updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11365
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11370
    SQL query detected - ensure parameterized queries are used
    Code: Code: def update_principle_weight(self, principle, weight):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11375
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Update principle weight"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11380
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_update_ethical_principle(ethical_integration, mock_ethical_framework):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11385
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Test valid update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11390
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = await ethical_integration.update_ethical_principle(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11395
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = await ethical_integration.update_ethical_principle(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11400
    SQL query detected - ensure parameterized queries are used
    Code: Code: with patch.object(mock_ethical_framework, 'update_principle_weight', side_effect=ValueError("Unknown principle")):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11405
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = await ethical_integration.update_ethical_principle(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11410
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Test update_ethical_principle event handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11415
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = await ethical_integration._handle_update_ethical_principle({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11423
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11431
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11439
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11444
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_delete_preset(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11449
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Delete the preset
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11454
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.preset_manager.delete_preset(test_preset["name"])
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11459
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify the preset was deleted
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11467
    SQL query detected - ensure parameterized queries are used
    Code: Code: temp_db = tempfile.NamedTemporaryFile(delete=False, suffix='.db')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11472
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_emotional_state_update_from_llm_response(self, brain, event_bus):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11477
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test that emotional state is updated from LLM responses."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11482
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify that the emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11487
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_relationship_update_after_interaction(self, brain):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11492
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test that relationship metrics are updated after interactions."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11497
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Mock the emotional processor and update_relationship
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11502
    SQL query detected - ensure parameterized queries are used
    Code: Code: }), patch.object(brain.emotional_memory, 'update_relationship', AsyncMock()) as mock_update:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11507
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify that update_relationship was called with positive deltas
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11512
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11517
    SQL query detected - ensure parameterized queries are used
    Code: Code: args, kwargs = mock_update.call_args
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11522
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Emit a value update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11527
    SQL query detected - ensure parameterized queries are used
    Code: Code: await brain.event_bus.emit("value.update", {
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11532
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Mock update_relationship
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11537
    SQL query detected - ensure parameterized queries are used
    Code: Code: with patch.object(brain.emotional_memory, 'update_relationship', AsyncMock()) as mock_update:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11542
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify that update_relationship was called to save final state
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11547
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11555
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11560
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertIn("emotional.update", self.event_bus._subscribers)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11565
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11570
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11575
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11580
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11585
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11590
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11595
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11600
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory._handle_emotional_update = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11605
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Emit an emotional update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11610
    SQL query detected - ensure parameterized queries are used
    Code: Code: await self.event_bus.emit("emotional.update", {"emotion": "joy", "value": 0.8})
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11615
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory._handle_emotional_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11620
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11625
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11633
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11638
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11646
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11651
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11656
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertIn("emotional.update", self.event_bus._subscribers)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11661
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Emit an emotional update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11666
    SQL query detected - ensure parameterized queries are used
    Code: Code: await self.event_bus.emit("emotional.update", {"emotion": "anger", "value": 0.8})
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11671
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def update_value_system():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11676
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.ethical_framework.update_value_system = AsyncMock(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11681
    SQL query detected - ensure parameterized queries are used
    Code: Code: side_effect=update_value_system
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11686
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update value system
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11691
    SQL query detected - ensure parameterized queries are used
    Code: Code: await self.brain.ethical_framework.update_value_system()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11696
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify that value system was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11704
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11712
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test that a service is auto-deregistered if not updated within the threshold
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11717
    SQL query detected - ensure parameterized queries are used
    Code: Code: and validate that the DatabaseManager can insert and fetch interactions."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11722
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Simulate that the service's last update occurred sufficiently in the past
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11727
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Insert an interaction record
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11732
    SQL query detected - ensure parameterized queries are used
    Code: Code: db.insert_interaction(test_data)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11737
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert record_found, "The inserted interaction data should be found in the database"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11745
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test that a service is auto-deregistered if no health update occurs within the threshold."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11753
    SQL query detected - ensure parameterized queries are used
    Code: Code: EventType.SYSTEM_IMPROVEMENT_UPDATE,
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11758
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert all(e.type == EventType.SYSTEM_IMPROVEMENT_UPDATE for e in events_received)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11763
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_analyze_and_update_error_patterns(improvement_system):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11768
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test error pattern analysis and strategy updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11773
    SQL query detected - ensure parameterized queries are used
    Code: Code: await improvement_system._analyze_and_update_error_patterns()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11778
    SQL query detected - ensure parameterized queries are used
    Code: Code: improvement_system.error_tracker.update_recovery_strategy.assert_called_once_with(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11783
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_analyze_and_update_emotional_patterns(improvement_system):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11788
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test emotional pattern analysis and parameter updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11793
    SQL query detected - ensure parameterized queries are used
    Code: Code: await improvement_system._analyze_and_update_emotional_patterns()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11798
    SQL query detected - ensure parameterized queries are used
    Code: Code: improvement_system.emotional_core.update_response_parameters.assert_called_once_with(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11806
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11814
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11822
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_delete_adapter(lora_manager):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11827
    SQL query detected - ensure parameterized queries are used
    Code: Code: name="adapter_to_delete",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11832
    SQL query detected - ensure parameterized queries are used
    Code: Code: description="Adapter to delete",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11837
    SQL query detected - ensure parameterized queries are used
    Code: Code: adapter_path = os.path.join(lora_manager.lora_dir, "adapter_to_delete")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11842
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Delete the adapter
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11847
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = await lora_manager.delete_adapter("adapter_to_delete")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11852
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check that the delete was successful
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11857
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Try to delete a non-existent adapter
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11862
    SQL query detected - ensure parameterized queries are used
    Code: Code: await lora_manager.delete_adapter("non_existent_adapter")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11870
    SQL query detected - ensure parameterized queries are used
    Code: Code: emotions.update(self.emotion_detector.detect_text_emotion(text))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11875
    SQL query detected - ensure parameterized queries are used
    Code: Code: emotions.update(self.emotion_detector.detect_audio_emotion(audio_data))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11880
    SQL query detected - ensure parameterized queries are used
    Code: Code: emotions.update(self.emotion_detector.detect_facial_emotion(image_data))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11885
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.personality_model.update(interaction)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11890
    SQL query detected - ensure parameterized queries are used
    Code: Code: def update(self, interaction):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11895
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Update personality state"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11903
    SQL query detected - ensure parameterized queries are used
    Code: Code: def delete(self, key):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11908
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Delete a key"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11913
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.sets[key].update(values)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11918
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.sorted_sets[key].update(mapping)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11926
    SQL query detected - ensure parameterized queries are used
    Code: Code: with tempfile.NamedTemporaryFile(suffix='.jpg', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11934
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11942
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, project_root)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11950
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11958
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test service heartbeat updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11966
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update skill levels
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11971
    SQL query detected - ensure parameterized queries are used
    Code: Code: curriculum_manager.update_skill_levels(task, True, 0.9)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11976
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update performance and select again
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11981
    SQL query detected - ensure parameterized queries are used
    Code: Code: meta_learner.update_strategy_performance(0.8)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11989
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify system state updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11997
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12002
    SQL query detected - ensure parameterized queries are used
    Code: Code: valid_command_json = '{"command": "delete_file", "args": "protected.txt"}'
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12007
    SQL query detected - ensure parameterized queries are used
    Code: Code: failure_message = "Failed to delete file: Permission denied"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12012
    SQL query detected - ensure parameterized queries are used
    Code: Code: final_response = brain.process_command("delete the protected file")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12017
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_cmd_processor.execute_command.assert_called_once_with("delete_file", "protected.txt")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12025
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12033
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify working memory was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12041
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12046
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_handle_delete_file(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12051
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test the internal _handle_delete_file method."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12056
    SQL query detected - ensure parameterized queries are used
    Code: Code: test_file = self.test_dir / "file_to_delete.txt"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12061
    SQL query detected - ensure parameterized queries are used
    Code: Code: test_file.touch() # Create the file to be deleted
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12066
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = self.cmd_processor._handle_delete_file(str(test_file))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12071
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertIn("Deleted file", result)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12076
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertFalse(test_file.exists(), "_handle_delete_file did not delete the file.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12084
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12089
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_05_delete_file_command_success(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12094
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test the 'delete file' command handler for successful deletion."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12099
    SQL query detected - ensure parameterized queries are used
    Code: Code: filename = "file_to_delete.txt"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12104
    SQL query detected - ensure parameterized queries are used
    Code: Code: command = f"delete file {filename}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12109
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertEqual(result, f"Deleted file: {expected_path}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12114
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_06_delete_file_not_found(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12119
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test the 'delete file' command when the file does not exist."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12124
    SQL query detected - ensure parameterized queries are used
    Code: Code: command = f"delete file {filename}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12129
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_07_delete_file_protected_path_failure(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12134
    SQL query detected - ensure parameterized queries are used
    Code: Code: command = f"delete file {protected_path}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12139
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_08_delete_file_decorator_error_handling(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12144
    SQL query detected - ensure parameterized queries are used
    Code: Code: command = f"delete file {filename}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12152
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12157
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update summary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12162
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update summary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12170
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_update_and_get_relationship_data(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12175
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.db_manager.update_relationship_data(user_id, relationship_type, trust_level, rapport_level)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12183
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_update_relationship_metrics(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12188
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Initial update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12193
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.memory.update_relationship_metrics(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12198
    SQL query detected - ensure parameterized queries are used
    Code: Code: action = "delete_user_data"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12206
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_01_emotional_state_update(self, event_bus):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12211
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update with positive emotion
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12216
    SQL query detected - ensure parameterized queries are used
    Code: Code: item_id = await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12221
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update with negative emotion
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12226
    SQL query detected - ensure parameterized queries are used
    Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12231
    SQL query detected - ensure parameterized queries are used
    Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12236
    SQL query detected - ensure parameterized queries are used
    Code: Code: await memory.update_relationship_context(entity_id, context)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12241
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update context
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12246
    SQL query detected - ensure parameterized queries are used
    Code: Code: update = {
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12251
    SQL query detected - ensure parameterized queries are used
    Code: Code: await memory.update_relationship_context(entity_id, update)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12256
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check updated context
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12261
    SQL query detected - ensure parameterized queries are used
    Code: Code: updated_context = await memory.get_relationship_context(entity_id)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12266
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert updated_context["trust_level"] == 0.9
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12271
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert len(updated_context["shared_experiences"]) == 3
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12276
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12281
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12286
    SQL query detected - ensure parameterized queries are used
    Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12291
    SQL query detected - ensure parameterized queries are used
    Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12296
    SQL query detected - ensure parameterized queries are used
    Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12301
    SQL query detected - ensure parameterized queries are used
    Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12309
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_personality_state_updates(self, emotional_service):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12314
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test personality state updates and persistence"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12319
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert final_state != initial_state  # State should update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12324
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Personality state updates validated")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12332
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_04_empathy_model_updates(self, processor):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12337
    SQL query detected - ensure parameterized queries are used
    Code: Code: await processor.update_empathy_model({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12342
    SQL query detected - ensure parameterized queries are used
    Code: Code: await processor.update_empathy_model({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12347
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12355
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12363
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12371
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12379
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check priorities were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12387
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.temp_config = tempfile.NamedTemporaryFile(delete=False, suffix='.json')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12392
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.temp_db = tempfile.NamedTemporaryFile(delete=False, suffix='.db')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12397
    SQL query detected - ensure parameterized queries are used
    Code: Code: with tempfile.NamedTemporaryFile(delete=False, suffix='.json') as temp_file:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12405
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.temp_db = tempfile.NamedTemporaryFile(delete=False, suffix='.db')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12410
    SQL query detected - ensure parameterized queries are used
    Code: Code: "delete user data without confirmation",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12415
    SQL query detected - ensure parameterized queries are used
    Code: Code: with tempfile.NamedTemporaryFile(delete=False, suffix='.json') as temp_file:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12420
    SQL query detected - ensure parameterized queries are used
    Code: Code: with tempfile.NamedTemporaryFile(delete=False, suffix='.json') as temp_file:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12428
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify emotional state update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12436
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert result['memory_updates']
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12441
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Get updated metrics
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12446
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify metrics were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12454
    SQL query detected - ensure parameterized queries are used
    Code: Code: """HealthMonitor should emit a *healthy* status update when the endpoint responds 200."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12462
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12470
    SQL query detected - ensure parameterized queries are used
    Code: Code: updated_items = await working_memory.get_active_items()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12475
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert len(updated_items) <= len(items)  # Should have decayed
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12480
    SQL query detected - ensure parameterized queries are used
    Code: Code: for old, new in zip(items, updated_items):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12488
    SQL query detected - ensure parameterized queries are used
    Code: Code: last_updated: float
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12493
    SQL query detected - ensure parameterized queries are used
    Code: Code: last_updated=time.time(),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12498
    SQL query detected - ensure parameterized queries are used
    Code: Code: last_updated=time.time(),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12506
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12514
    SQL query detected - ensure parameterized queries are used
    Code: Code: await brain.emotional_processor.update_emotional_state({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12522
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_event_bus.subscribe.assert_any_call("config.updated", arpeggiator._handle_config_updated)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12527
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_handle_config_updated(self, arpeggiator):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12532
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test handling configuration update events"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12537
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Replace update_configuration with a mock
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12542
    SQL query detected - ensure parameterized queries are used
    Code: Code: arpeggiator.update_configuration = MagicMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12547
    SQL query detected - ensure parameterized queries are used
    Code: Code: event_type="config.updated",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12552
    SQL query detected - ensure parameterized queries are used
    Code: Code: await arpeggiator._handle_config_updated(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12557
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify update_configuration was called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12562
    SQL query detected - ensure parameterized queries are used
    Code: Code: arpeggiator.update_configuration.assert_called_once_with({"sensitivity": 0.7})
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12567
    SQL query detected - ensure parameterized queries are used
    Code: Code: event_type="config.updated",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12572
    SQL query detected - ensure parameterized queries are used
    Code: Code: arpeggiator.update_configuration.reset_mock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12577
    SQL query detected - ensure parameterized queries are used
    Code: Code: await arpeggiator._handle_config_updated(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12582
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify update_configuration was not called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12587
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert not arpeggiator.update_configuration.called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12592
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_update_configuration(self, arpeggiator, mock_config_manager):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12597
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update configuration
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12602
    SQL query detected - ensure parameterized queries are used
    Code: Code: arpeggiator.update_configuration(new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12607
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify configuration was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12612
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify config manager was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12617
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_config_manager.update_config.assert_called_once_with("gesture_arpeggiator", new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12625
    SQL query detected - ensure parameterized queries are used
    Code: Code: event_bus.subscribe.assert_any_call("ui.context_changed", gesture_integration.update_ui_context)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12630
    SQL query detected - ensure parameterized queries are used
    Code: Code: event_bus.subscribe.assert_any_call("config.updated.gesture_integration", gesture_integration.update_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12635
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_update_ui_context(self, gesture_integration):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12640
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test UI context updates."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12645
    SQL query detected - ensure parameterized queries are used
    Code: Code: gesture_integration.update_ui_context(context_event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12650
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_update_config(self, gesture_integration):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12655
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test configuration updates."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12660
    SQL query detected - ensure parameterized queries are used
    Code: Code: gesture_integration.update_config(new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12668
    SQL query detected - ensure parameterized queries are used
    Code: Code: @patch('alejo.ui.pyside_ui.HolographicWidget.update')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12673
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_event_handler(self, mock_update):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12678
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12686
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12691
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check that config was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12696
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check that brain.update_config was called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12701
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_brain.update_config.assert_called_once_with(alejo_ui.config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12709
    SQL query detected - ensure parameterized queries are used
    Code: Code: service.update_arpeggiator_settings = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12714
    SQL query detected - ensure parameterized queries are used
    Code: Code: service.update_visualizer_settings = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12719
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify arpeggiator settings were updated with Joy parameters
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12724
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_arpeggiator_service.update_arpeggiator_settings.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12729
    SQL query detected - ensure parameterized queries are used
    Code: Code: args = mock_arpeggiator_service.update_arpeggiator_settings.call_args[0][0]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12734
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify visualizer settings were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12739
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_arpeggiator_service.update_visualizer_settings.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12744
    SQL query detected - ensure parameterized queries are used
    Code: Code: vis_args = mock_arpeggiator_service.update_visualizer_settings.call_args[0][0]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12749
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_arpeggiator_service.update_arpeggiator_settings.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12754
    SQL query detected - ensure parameterized queries are used
    Code: Code: args = mock_arpeggiator_service.update_arpeggiator_settings.call_args[0][0]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12759
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_arpeggiator_service.update_arpeggiator_settings.reset_mock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12767
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent.parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12772
    SQL query detected - ensure parameterized queries are used
    Code: Code: "page_title": "Test Page Updated",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12780
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent.parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12788
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12793
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check that last_used was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12801
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert sent_data["type"] == "config_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12806
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_handle_ui_update(websocket_handler, mock_websocket):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12811
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test handling of UI update events"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12816
    SQL query detected - ensure parameterized queries are used
    Code: Code: "update": {
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12821
    SQL query detected - ensure parameterized queries are used
    Code: Code: await websocket_handler._handle_ui_update(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12826
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert sent_data["type"] == "ui_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12831
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert sent_data["update"] == event["update"]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12836
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_handle_config_update(websocket_handler, mock_websocket):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12841
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test handling of configuration update events"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12846
    SQL query detected - ensure parameterized queries are used
    Code: Code: await websocket_handler._handle_config_update(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12851
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert sent_data["type"] == "config_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12855
    SQL query detected - ensure parameterized queries are used
    Code: File: update_manager.py
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12859
    SQL query detected - ensure parameterized queries are used
    Code: Code: ALEJO Update Manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12864
    SQL query detected - ensure parameterized queries are used
    Code: Code: Automatically checks for and applies updates before ALEJO starts.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12869
    SQL query detected - ensure parameterized queries are used
    Code: Code: logging.FileHandler("alejo_update.log"),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12874
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger = logging.getLogger("alejo.update_manager")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12879
    SQL query detected - ensure parameterized queries are used
    Code: Code: class UpdateManager:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12884
    SQL query detected - ensure parameterized queries are used
    Code: Code: Manages automatic updates for ALEJO system
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12889
    SQL query detected - ensure parameterized queries are used
    Code: Code: This class checks for updates from the main repository and applies them
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12894
    SQL query detected - ensure parameterized queries are used
    Code: Code: Initialize the Update Manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12899
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.update_cache_file = self.alejo_dir / ".update_cache"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12904
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.update_lock_file = self.alejo_dir / ".update_lock"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12909
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.force_update = self.config.get("force_update", False)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12914
    SQL query detected - ensure parameterized queries are used
    Code: Code: def should_check_for_updates(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12919
    SQL query detected - ensure parameterized queries are used
    Code: Code: Determine if we should check for updates based on last check time
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12924
    SQL query detected - ensure parameterized queries are used
    Code: Code: if self.force_update:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12929
    SQL query detected - ensure parameterized queries are used
    Code: Code: if not self.update_cache_file.exists():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12934
    SQL query detected - ensure parameterized queries are used
    Code: Code: with open(self.update_cache_file, "r") as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12939
    SQL query detected - ensure parameterized queries are used
    Code: Code: def update_check_cache(self, update_available=False, version=None):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12944
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Update the cache file with current check information"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12949
    SQL query detected - ensure parameterized queries are used
    Code: Code: "update_available": update_available,
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12954
    SQL query detected - ensure parameterized queries are used
    Code: Code: with open(self.update_cache_file, "w") as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12959
    SQL query detected - ensure parameterized queries are used
    Code: Code: def check_for_updates(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12964
    SQL query detected - ensure parameterized queries are used
    Code: Code: Check if updates are available
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12969
    SQL query detected - ensure parameterized queries are used
    Code: Code: tuple: (update_available, current_version, latest_version)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12974
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.warning("Not a git repository, cannot check for updates")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12979
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Create a lock file to prevent concurrent update checks
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12984
    SQL query detected - ensure parameterized queries are used
    Code: Code: if self.update_lock_file.exists():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12989
    SQL query detected - ensure parameterized queries are used
    Code: Code: if time.time() - os.path.getmtime(self.update_lock_file) > 600:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12994
    SQL query detected - ensure parameterized queries are used
    Code: Code: os.remove(self.update_lock_file)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12999
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Update check already in progress, skipping")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13004
    SQL query detected - ensure parameterized queries are used
    Code: Code: with open(self.update_lock_file, "w") as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13009
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_available = current_version != latest_version
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13014
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.update_check_cache(update_available, current_version)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13019
    SQL query detected - ensure parameterized queries are used
    Code: Code: return update_available, current_version, latest_version
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13024
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.error(f"Error checking for updates: {str(e)}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13029
    SQL query detected - ensure parameterized queries are used
    Code: Code: if self.update_lock_file.exists():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13034
    SQL query detected - ensure parameterized queries are used
    Code: Code: os.remove(self.update_lock_file)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13039
    SQL query detected - ensure parameterized queries are used
    Code: Code: def apply_update(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13044
    SQL query detected - ensure parameterized queries are used
    Code: Code: Apply available updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13049
    SQL query detected - ensure parameterized queries are used
    Code: Code: bool: True if update was successful, False otherwise
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13054
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.warning("Not a git repository, cannot apply updates")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13059
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.error(f"Error pulling updates: {result.stderr}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13064
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update database schema if needed
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13069
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.update_database_schema()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13074
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Update completed successfully")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13079
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.error(f"Error applying update: {str(e)}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13084
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Restore ALEJO from backup in case of update failure"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13089
    SQL query detected - ensure parameterized queries are used
    Code: Code: def update_database_schema(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13094
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Update database schema if necessary"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13099
    SQL query detected - ensure parameterized queries are used
    Code: Code: def run_update_check(self, auto_apply=True):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13104
    SQL query detected - ensure parameterized queries are used
    Code: Code: Run a full update check and optionally apply updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13109
    SQL query detected - ensure parameterized queries are used
    Code: Code: auto_apply: Whether to automatically apply updates if available
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13114
    SQL query detected - ensure parameterized queries are used
    Code: Code: bool: True if system is up to date, False if update failed
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13119
    SQL query detected - ensure parameterized queries are used
    Code: Code: if not self.should_check_for_updates():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13124
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Update check was performed recently, skipping")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13129
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Checking for ALEJO updates")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13134
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_available, current_version, latest_version = self.check_for_updates()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13139
    SQL query detected - ensure parameterized queries are used
    Code: Code: if update_available:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13144
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info(f"Update available: {current_version[:7]} -> {latest_version[:7]}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13149
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Applying update automatically")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13154
    SQL query detected - ensure parameterized queries are used
    Code: Code: return self.apply_update()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13159
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Update available but not applying automatically")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13164
    SQL query detected - ensure parameterized queries are used
    Code: Code: parser = argparse.ArgumentParser(description="ALEJO Update Manager")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13169
    SQL query detected - ensure parameterized queries are used
    Code: Code: parser.add_argument("--check-only", action="store_true", help="Only check for updates, don't apply them")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13174
    SQL query detected - ensure parameterized queries are used
    Code: Code: parser.add_argument("--force", action="store_true", help="Force update check even if done recently")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13179
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Create update manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13184
    SQL query detected - ensure parameterized queries are used
    Code: Code: config = {"force_update": args.force}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13189
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13194
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Run update check
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13199
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager.run_update_check(auto_apply=not args.check_only)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13207
    SQL query detected - ensure parameterized queries are used
    Code: Code: await r.delete(test_key)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13215
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(script_path).parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13223
    SQL query detected - ensure parameterized queries are used
    Code: Code: Y]O?gjOEb?0)r   id  r  )r#   r#   gh㈵>g7P>{r   )r#   r#   gh㈵>g7P>0)r   i  	fix_flags)r   r   guR#>g&p>{r   )r   r   guR#>g&p>0)r   i  r   )r   r   g>g+|c?{r   )r   r   g>g+|c?0)rS   rT   rU   )r)   r)   g0D4>g =T?{0)DC:\Users\magic\AppData\Local\Programs\Python\Python39\lib\weakref.pyi   r   )r)   r)   glӎ>g4vxU>{rY   )r)   r)   glӎ>g4vxU>0)r  i"  update)r)   r)   gavt>g:ܳS>{)r  r  r   )r)   r)   gavt>g:ܳS>0)FC:\Users\magic\AppData\Local\Programs\Python\Python39\lib\threading.pyr   RLock)r#   r#   gkNu>gkNu>{rZ   iv  
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13231
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13236
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Process the command and update the log"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13241
    SQL query detected - ensure parameterized queries are used
    Code: Code: def _update():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13246
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.log_text.insert(tk.END, message + "\n\n", color)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13251
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update in the main thread
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13256
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.root.after(0, _update)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13261
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.log_text.delete(1.0, tk.END)
    Remediation: Use parameterized queries with placeholders for all user input

[LOW] PseudoRandom line 6401
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: Code: Code: op = random.choice(['command', 'event', 'memory'])
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 6406
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: Code: Code: 'emotional_state': {'valence': random.random()}
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 6411
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: Code: Code: if random.random() < 0.3:  # 30% chance of rate limit
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 6416
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: Code: Code: if random.random() < 0.5:  # 50% chance of network error
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 6421
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: Code: Code: {"cascade_id": random.randint(1, 1000)}
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 6426
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: Code: # Replace random.random() with secrets.randbelow() / 2**32 or similar
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 6431
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: Code: # Replace random.randint with secrets.randbelow
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 6436
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: Code: # Replace random.choice with secrets.choice
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 6441
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: Code: if random.random() < 0.3:  # 30% chance of rate limit
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 6446
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: Code: if random.random() < 0.5:  # 50% chance of network error
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 9609
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: Code: op = random.choice(['command', 'event', 'memory'])
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 9614
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: Code: 'emotional_state': {'valence': random.random()}
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 9619
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: Code: if random.random() < 0.3:  # 30% chance of rate limit
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 9624
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: Code: if random.random() < 0.5:  # 50% chance of network error
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 9629
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: Code: {"cascade_id": random.randint(1, 1000)}
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 10175
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: # Replace random.random() with secrets.randbelow() / 2**32 or similar
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 10180
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: # Replace random.randint with secrets.randbelow
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 10185
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: # Replace random.choice with secrets.choice
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 13269
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: if random.random() < 0.3:  # 30% chance of rate limit
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 13274
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: if random.random() < 0.5:  # 50% chance of network error
    Remediation: Use secrets module for security-sensitive randomness needs


File: test_reports\security_scan_results.txt
--------------------------------------------------------------------------------
[HIGH] DynamicCodeExecution line 17
    Use of eval() can lead to code injection
    Code: Use of eval() can lead to code injection
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 18
    Use of eval() can lead to code injection
    Code: Code: 'Use of eval() can lead to code injection',
    Remediation: Replace with safer alternatives like JSON parsing or static code

[MEDIUM] SQLQuery line 23
    SQL query detected - ensure parameterized queries are used
    Code: Code: 'py_sql_query': (r'(?:execute|executemany)\s*\(\s*["\']SELECT|UPDATE|DELETE|INSERT',
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 27
    SQL query detected - ensure parameterized queries are used
    Code: File: .update_cache
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 31
    SQL query detected - ensure parameterized queries are used
    Code: Code: {"last_check": "2025-06-30T23:52:42.890553", "update_available": false, "current_version": "abcd1234"}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 39
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Updates services with zero downtime
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 44
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Dependency updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 52
    SQL query detected - ensure parameterized queries are used
    Code: Code: * Regular model updates containing collective insights
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 57
    SQL query detected - ensure parameterized queries are used
    Code: Code: * User control over update frequency and domains
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 62
    SQL query detected - ensure parameterized queries are used
    Code: Code: * Users can delete their local learning data at any time
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 70
    SQL query detected - ensure parameterized queries are used
    Code: Code: RUN apt-get update && apt-get install -y \
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 78
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Manages dynamic UI updates and DOM manipulation for gesture-enabled elements.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 83
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Provides methods to update, enable, or disable elements based on their gesture properties.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 88
    SQL query detected - ensure parameterized queries are used
    Code: Code: - CI/CD pipelines have been updated to include backend validation, integration testing, and security compliance.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 96
    SQL query detected - ensure parameterized queries are used
    Code: Code: - **Web Interface**: Modern, responsive web interface with real-time updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 101
    SQL query detected - ensure parameterized queries are used
    Code: Code: - **ServiceRegistry**: Manages service registration and health updates, providing a single source of truth for service status.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 109
    SQL query detected - ensure parameterized queries are used
    Code: Code: 3. Update the frontend UI in `alejo/templates/gesture_enabled_interface.html`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 117
    SQL query detected - ensure parameterized queries are used
    Code: Code: {"action": "delete_file"},
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 122
    SQL query detected - ensure parameterized queries are used
    Code: Code: 5. **Updates**: Keep all dependencies up to date.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 126
    SQL query detected - ensure parameterized queries are used
    Code: File: alejo_update.log
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 130
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-30 23:52:21,057 - alejo.update_manager - INFO - Pulling latest changes from repository
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 135
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-30 23:52:21,058 - alejo.update_manager - ERROR - Error pulling updates: Failed to pull
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 140
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-30 23:52:21,062 - alejo.update_manager - INFO - Pulling latest changes from repository
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 145
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-30 23:52:21,063 - alejo.update_manager - INFO - Updating dependencies
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 150
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-30 23:52:21,063 - alejo.update_manager - INFO - Update completed successfully
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 155
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-30 23:52:21,068 - alejo.update_manager - INFO - Backing up current ALEJO installation to C:\Users\magic\AppData\Local\Temp\alejo_backup_h5jwy8dw
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 160
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-30 23:52:21,083 - alejo.update_manager - INFO - Restoring ALEJO from backup C:\Users\magic\AppData\Local\Temp\alejo_backup_h5jwy8dw
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 165
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-30 23:52:42,882 - alejo.update_manager - ERROR - Error restoring backup: [WinError 32] The process cannot access the file because it is being used by another process: 'C:\\Users\\magic\\CascadeProjects\\ALEJO\\alejo_update.log'
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 173
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Update references to use the new module
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 178
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Update references to use the new module
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 183
    SQL query detected - ensure parameterized queries are used
    Code: Code: 4. **Update Tests**:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 188
    SQL query detected - ensure parameterized queries are used
    Code: Code: 5. **Update Documentation**:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 193
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Update user guide
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 201
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2. Update imports to use package structure
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 206
    SQL query detected - ensure parameterized queries are used
    Code: Code: 3. Update imports to use package structure
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 214
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(self.script_path.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 222
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 230
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 238
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 246
    SQL query detected - ensure parameterized queries are used
    Code: Code: 5. **Brain Integration**: Update ALEJOBrain and other components to automatically self-register with the ServiceRegistry and intercommunicate via the EventBus.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 254
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Create secure update mechanisms
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 258
    SQL query detected - ensure parameterized queries are used
    Code: File: docs\AUTO_UPDATE_README.md
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 262
    SQL query detected - ensure parameterized queries are used
    Code: Code: # ALEJO Automatic Update System
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 267
    SQL query detected - ensure parameterized queries are used
    Code: Code: This document explains the automatic update system implemented in ALEJO to ensure users always have the latest security patches and features.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 272
    SQL query detected - ensure parameterized queries are used
    Code: Code: The ALEJO update system performs the following operations:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 277
    SQL query detected - ensure parameterized queries are used
    Code: Code: 1. **Pre-launch Update Check**: Before ALEJO starts, it automatically checks for updates from the main repository.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 282
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2. **Secure Update Process**:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 287
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Creates a backup of the current installation before applying any updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 292
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Updates the codebase from the repository
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 297
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Updates dependencies if necessary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 302
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Rolls back to the backup if any errors occur during the update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 307
    SQL query detected - ensure parameterized queries are used
    Code: Code: 3. **Scheduled Checks**: Updates are checked at configurable intervals (default: every 4 hours) to avoid excessive network traffic.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 312
    SQL query detected - ensure parameterized queries are used
    Code: Code: The update system works automatically and requires no user intervention. However, several command-line options are available:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 317
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Normal startup with automatic update check
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 322
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Skip update check during startup
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 327
    SQL query detected - ensure parameterized queries are used
    Code: Code: python start_alejo_with_gestures.py --skip-updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 332
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Manually check for updates without starting ALEJO
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 337
    SQL query detected - ensure parameterized queries are used
    Code: Code: python update_manager.py --check-only
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 342
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Force update check regardless of when the last check occurred
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 347
    SQL query detected - ensure parameterized queries are used
    Code: Code: python update_manager.py --force
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 352
    SQL query detected - ensure parameterized queries are used
    Code: Code: The update system can be configured through environment variables:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 357
    SQL query detected - ensure parameterized queries are used
    Code: Code: - `ALEJO_UPDATE_INTERVAL`: Set the minimum hours between update checks (default: 4)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 362
    SQL query detected - ensure parameterized queries are used
    Code: Code: If you encounter issues with the automatic update system:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 367
    SQL query detected - ensure parameterized queries are used
    Code: Code: 1. Check the log file (`alejo_update.log`) for detailed error messages
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 372
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2. Try running a manual update with `python update_manager.py --force`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 377
    SQL query detected - ensure parameterized queries are used
    Code: Code: 3. If updates consistently fail, you can bypass them with `--skip-updates` and update manually
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 382
    SQL query detected - ensure parameterized queries are used
    Code: Code: The automatic update system enhances ALEJO's security by ensuring users always have the latest security patches. The system:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 387
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Creates backups before applying updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 392
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Maintains a log of all update operations
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 397
    SQL query detected - ensure parameterized queries are used
    Code: Code: To extend or modify the update system:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 402
    SQL query detected - ensure parameterized queries are used
    Code: Code: 1. The core functionality is in `update_manager.py`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 407
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2. Test cases are available in `test_update_manager.py`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 412
    SQL query detected - ensure parameterized queries are used
    Code: Code: 3. The update system is integrated into ALEJO's startup process in `start_alejo_with_gestures.py`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 417
    SQL query detected - ensure parameterized queries are used
    Code: Code: python -m unittest test_update_manager.py
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 425
    SQL query detected - ensure parameterized queries are used
    Code: Code: - **Event-Driven Updates**: Computing only when necessary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 430
    SQL query detected - ensure parameterized queries are used
    Code: Code: - **Processing Efficiency**: Neural updates per second
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 438
    SQL query detected - ensure parameterized queries are used
    Code: Code: - **Modularity**: Components are well-separated, making it easier to update individual parts.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 446
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Update plugins to compatible versions
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 454
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 462
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Insert before the first import
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 470
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Find a good place to insert the polyfill
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 475
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Try to insert after imports or at the beginning of the file
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 480
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Insert at the beginning of the file
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 485
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Insert catch block before the last closing brace
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 493
    SQL query detected - ensure parameterized queries are used
    Code: Code: progress_bar.update(len(data))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 498
    SQL query detected - ensure parameterized queries are used
    Code: Code: sha256_hash.update(byte_block)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 506
    SQL query detected - ensure parameterized queries are used
    Code: Code: 1. Update images:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 514
    SQL query detected - ensure parameterized queries are used
    Code: Code: 1. Update Istio:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 519
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2. Update monitoring stack:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 527
    SQL query detected - ensure parameterized queries are used
    Code: Code: "last_updated": "2025-06-17T06:34:00.742317"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 535
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-11 07:31:08,226 - __main__ - INFO - Updated index.html
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 543
    SQL query detected - ensure parameterized queries are used
    Code: Code: 1. Review and update priorities weekly
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 551
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(self.project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 556
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(self.project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 561
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update results
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 566
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update results
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 571
    SQL query detected - ensure parameterized queries are used
    Code: Code: def update_html_references(self, js_dir, css_dir):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 576
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Update HTML templates to use optimized files"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 581
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update JS references
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 586
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update CSS references
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 591
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Write updated content
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 596
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info(f"Updated {html_file.name}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 601
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update HTML references
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 606
    SQL query detected - ensure parameterized queries are used
    Code: Code: optimizer.update_html_references(js_dir, css_dir)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 614
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Send status updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 622
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.warning(f"{env_file} already exists. Please delete it first if you want to create a new one.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 630
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(PROJECT_ROOT))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 638
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 646
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.dirname(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 654
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 662
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(__file__).resolve().parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 667
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update improvements status in data manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 672
    SQL query detected - ensure parameterized queries are used
    Code: Code: await data_manager.update_improvements(applied_improvements)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 677
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info(f"Updated status for {len(applied_improvements)} improvements")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 685
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, project_root)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 693
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(__file__).resolve().parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 701
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(script_dir.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 709
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(__file__).resolve().parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 717
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 725
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Update test configuration"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 730
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update database paths in config
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 735
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Updated test configuration")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 743
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(PROJECT_ROOT))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 751
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update config with file values
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 756
    SQL query detected - ensure parameterized queries are used
    Code: Code: self._update_dict(config, file_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 761
    SQL query detected - ensure parameterized queries are used
    Code: Code: def _update_dict(self, target: Dict, source: Dict) -> None:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 766
    SQL query detected - ensure parameterized queries are used
    Code: Code: Recursively update dictionary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 771
    SQL query detected - ensure parameterized queries are used
    Code: Code: self._update_dict(target[key], value)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 779
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Import update manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 784
    SQL query detected - ensure parameterized queries are used
    Code: Code: from update_manager import UpdateManager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 789
    SQL query detected - ensure parameterized queries are used
    Code: Code: UPDATE_MANAGER_AVAILABLE = True
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 794
    SQL query detected - ensure parameterized queries are used
    Code: Code: UPDATE_MANAGER_AVAILABLE = False
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 799
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Add update-related command line arguments
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 804
    SQL query detected - ensure parameterized queries are used
    Code: Code: "--skip-updates",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 809
    SQL query detected - ensure parameterized queries are used
    Code: Code: help="Skip checking for updates before starting"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 814
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check for updates before starting services
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 819
    SQL query detected - ensure parameterized queries are used
    Code: Code: if UPDATE_MANAGER_AVAILABLE and not args.skip_updates:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 824
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Checking for ALEJO updates...")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 829
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 834
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_success = update_manager.run_update_check(auto_apply=True)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 839
    SQL query detected - ensure parameterized queries are used
    Code: Code: if not update_success:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 844
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.error("Update process encountered errors. Starting with current version.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 849
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Update check completed successfully.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 854
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.error(f"Error during update process: {str(e)}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 862
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(PROJECT_ROOT))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 870
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 878
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update the timestamp
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 883
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update default URLs if provided
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 891
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update the timestamp
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 899
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check updated allocations
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 904
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info(f"Updated allocations: {allocations}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 908
    SQL query detected - ensure parameterized queries are used
    Code: File: test_update_manager.py
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 912
    SQL query detected - ensure parameterized queries are used
    Code: Code: Test script for ALEJO Update Manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 917
    SQL query detected - ensure parameterized queries are used
    Code: Code: This script tests the functionality of the update manager to ensure it works correctly.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 922
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Import the update manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 927
    SQL query detected - ensure parameterized queries are used
    Code: Code: from update_manager import UpdateManager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 932
    SQL query detected - ensure parameterized queries are used
    Code: Code: class TestUpdateManager(unittest.TestCase):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 937
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test cases for the ALEJO Update Manager"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 942
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.test_dir = tempfile.mkdtemp(prefix="alejo_update_test_")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 947
    SQL query detected - ensure parameterized queries are used
    Code: Code: "force_update": True
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 952
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 957
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertTrue(update_manager.is_git_repo())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 962
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertFalse(update_manager.is_git_repo())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 967
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_check_for_updates_no_updates(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 972
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test checking for updates when none are available"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 977
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 982
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_available, current, latest = update_manager.check_for_updates()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 987
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertFalse(update_available)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 992
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_check_for_updates_available(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 997
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test checking for updates when updates are available"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1002
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1007
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_available, current, latest = update_manager.check_for_updates()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1012
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertTrue(update_available)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1017
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1022
    SQL query detected - ensure parameterized queries are used
    Code: Code: backup_dir = update_manager.backup_current_version()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1027
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager.restore_backup(backup_dir)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1032
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_apply_update_success(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1037
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test successful update application"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1042
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock.Mock(stdout="Updated files", stderr="", returncode=0),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1047
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1052
    SQL query detected - ensure parameterized queries are used
    Code: Code: UpdateManager, 'backup_current_version',
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1057
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Create requirements.txt for testing dependency updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1062
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = update_manager.apply_update()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1067
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_apply_update_failure(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1072
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test failed update application"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1077
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1082
    SQL query detected - ensure parameterized queries are used
    Code: Code: UpdateManager, 'backup_current_version',
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1087
    SQL query detected - ensure parameterized queries are used
    Code: Code: with mock.patch.object(UpdateManager, 'restore_backup') as mock_restore:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1092
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = update_manager.apply_update()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1097
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_should_check_for_updates(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1102
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test the logic for determining if updates should be checked"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1107
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Force update should always return True
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1112
    SQL query detected - ensure parameterized queries are used
    Code: Code: config = {"force_update": True, "check_interval_hours": 24}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1117
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1122
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertTrue(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1127
    SQL query detected - ensure parameterized queries are used
    Code: Code: config = {"force_update": False, "check_interval_hours": 24}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1132
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1137
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertTrue(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1142
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager.update_check_cache()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1147
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertFalse(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1152
    SQL query detected - ensure parameterized queries are used
    Code: Code: config = {"force_update": False, "check_interval_hours": 0}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1157
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1162
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager.update_check_cache()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1167
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertTrue(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1175
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Test state updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1180
    SQL query detected - ensure parameterized queries are used
    Code: Code: operation="update_state",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1185
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def update_state():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1190
    SQL query detected - ensure parameterized queries are used
    Code: Code: await emotional_core.update_emotional_state(test_input)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1195
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_result = await update_state()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1200
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert update_result.mean_time < 0.02, "State update too slow"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1205
    SQL query detected - ensure parameterized queries are used
    Code: Code: emotional_core.update_emotional_state({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1213
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1218
    SQL query detected - ensure parameterized queries are used
    Code: Code: brain.emotional_processor.update_emotional_state.assert_called()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1223
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Should update emotional state and respond empathetically
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1228
    SQL query detected - ensure parameterized queries are used
    Code: Code: brain.emotional_processor.update_emotional_state.assert_called()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1236
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1241
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_brain_context_update(multimodal_integration, mock_brain, temp_image):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1246
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check that brain context was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1254
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1262
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1270
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1278
    SQL query detected - ensure parameterized queries are used
    Code: Code: await event_bus.subscribe(EventType.ADAPTATION_UPDATED, collect_events)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1283
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert any(e.type == EventType.ADAPTATION_UPDATED for e in events)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1288
    SQL query detected - ensure parameterized queries are used
    Code: Code: adaptation_event = next(e for e in events if e.type == EventType.ADAPTATION_UPDATED)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1296
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify emotional trajectory was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1301
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify topic was updated and depth reset
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1306
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_update_configuration(self, proactive_engine, mock_config_manager):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1311
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update configuration
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1316
    SQL query detected - ensure parameterized queries are used
    Code: Code: proactive_engine.update_configuration(new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1321
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify configuration was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1326
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify config manager was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1331
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_config_manager.update_config.assert_called_once_with("cognitive", new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1339
    SQL query detected - ensure parameterized queries are used
    Code: Code: manager.update_improvement_status = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1344
    SQL query detected - ensure parameterized queries are used
    Code: Code: data_manager.update_improvement_status.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1349
    SQL query detected - ensure parameterized queries are used
    Code: Code: data_manager.update_improvement_status.assert_not_called()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1357
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1365
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1373
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1381
    SQL query detected - ensure parameterized queries are used
    Code: Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1386
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_repo.return_value.delete_head.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1391
    SQL query detected - ensure parameterized queries are used
    Code: Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1396
    SQL query detected - ensure parameterized queries are used
    Code: Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1401
    SQL query detected - ensure parameterized queries are used
    Code: Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1409
    SQL query detected - ensure parameterized queries are used
    Code: Code: Event(EventType.SYSTEM, {"status": "System update"}, priority=2),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1417
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test advanced health check metrics and updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1422
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify health metrics were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1427
    SQL query detected - ensure parameterized queries are used
    Code: Code: service_mesh._service_dependencies.update({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1435
    SQL query detected - ensure parameterized queries are used
    Code: Code: if event.data.get("action") == "health_update":
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1440
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert event.data["action"] == "health_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1445
    SQL query detected - ensure parameterized queries are used
    Code: Code: if event.data.get("action") == "dependency_update":
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1450
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Mock health checks to update dependencies
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1458
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_service_updates_subscription(registry):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1463
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test service update notifications"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1468
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Subscribe to updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1476
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Wait for the feedback to update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1484
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1489
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Wait for sentiment score to update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1497
    SQL query detected - ensure parameterized queries are used
    Code: Code: type=EventType.EMOTIONAL_STATE_UPDATE,
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1502
    SQL query detected - ensure parameterized queries are used
    Code: Code: events = event_bus.get_recent_events(EventType.EMOTIONAL_STATE_UPDATE)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1510
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify personality traits were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1518
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Simulate an emotional state update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1523
    SQL query detected - ensure parameterized queries are used
    Code: Code: "action": "state_update",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1528
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify emotional processor was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1533
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert emotional_integration.emotional_processor.update_emotional_state.called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1541
    SQL query detected - ensure parameterized queries are used
    Code: Code: interaction storage, relationship updates, value system storage, and event handling.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1546
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify that the state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1551
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify that the state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1556
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_update_relationship(self, emotional_memory, event_bus, memory_service):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1561
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update relationship
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1566
    SQL query detected - ensure parameterized queries are used
    Code: Code: await emotional_memory.update_relationship(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1571
    SQL query detected - ensure parameterized queries are used
    Code: Code: memory_service.update_relationship_metrics.assert_called_once_with(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1576
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert event_bus.emit.call_count == 2  # First for init, second for update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1581
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert args[0] == "emotional.memory.relationship_updated"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1586
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert args[0] == "emotional.memory.value_updated"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1591
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify that the value was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1596
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify that the state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1601
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Test emotional update handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1606
    SQL query detected - ensure parameterized queries are used
    Code: Code: await emotional_memory._handle_emotional_update(event_data)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1611
    SQL query detected - ensure parameterized queries are used
    Code: Code: memory_service.update_relationship_metrics.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1616
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Test value update handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1621
    SQL query detected - ensure parameterized queries are used
    Code: Code: await emotional_memory._handle_value_update(event_data)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1629
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1634
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Test update_emotional_memory event handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1639
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = await emotional_integration._handle_update_emotional_memory({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1647
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify memory update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1652
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify interaction timing updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1657
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify memory and learning updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1665
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1670
    SQL query detected - ensure parameterized queries are used
    Code: Code: def update_principle_weight(self, principle, weight):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1675
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Update principle weight"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1680
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_update_ethical_principle(ethical_integration, mock_ethical_framework):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1685
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Test valid update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1690
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = await ethical_integration.update_ethical_principle(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1695
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = await ethical_integration.update_ethical_principle(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1700
    SQL query detected - ensure parameterized queries are used
    Code: Code: with patch.object(mock_ethical_framework, 'update_principle_weight', side_effect=ValueError("Unknown principle")):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1705
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = await ethical_integration.update_ethical_principle(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1710
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Test update_ethical_principle event handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1715
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = await ethical_integration._handle_update_ethical_principle({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1723
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1731
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1739
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1744
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_delete_preset(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1749
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Delete the preset
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1754
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.preset_manager.delete_preset(test_preset["name"])
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1759
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify the preset was deleted
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1767
    SQL query detected - ensure parameterized queries are used
    Code: Code: temp_db = tempfile.NamedTemporaryFile(delete=False, suffix='.db')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1772
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_emotional_state_update_from_llm_response(self, brain, event_bus):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1777
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test that emotional state is updated from LLM responses."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1782
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify that the emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1787
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_relationship_update_after_interaction(self, brain):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1792
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test that relationship metrics are updated after interactions."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1797
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Mock the emotional processor and update_relationship
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1802
    SQL query detected - ensure parameterized queries are used
    Code: Code: }), patch.object(brain.emotional_memory, 'update_relationship', AsyncMock()) as mock_update:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1807
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify that update_relationship was called with positive deltas
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1812
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1817
    SQL query detected - ensure parameterized queries are used
    Code: Code: args, kwargs = mock_update.call_args
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1822
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Emit a value update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1827
    SQL query detected - ensure parameterized queries are used
    Code: Code: await brain.event_bus.emit("value.update", {
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1832
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Mock update_relationship
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1837
    SQL query detected - ensure parameterized queries are used
    Code: Code: with patch.object(brain.emotional_memory, 'update_relationship', AsyncMock()) as mock_update:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1842
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify that update_relationship was called to save final state
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1847
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1855
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1860
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertIn("emotional.update", self.event_bus._subscribers)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1865
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1870
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1875
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1880
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1885
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1890
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1895
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1900
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory._handle_emotional_update = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1905
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Emit an emotional update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1910
    SQL query detected - ensure parameterized queries are used
    Code: Code: await self.event_bus.emit("emotional.update", {"emotion": "joy", "value": 0.8})
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1915
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory._handle_emotional_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1920
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1925
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1933
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1938
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1946
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1951
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1956
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertIn("emotional.update", self.event_bus._subscribers)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1961
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Emit an emotional update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1966
    SQL query detected - ensure parameterized queries are used
    Code: Code: await self.event_bus.emit("emotional.update", {"emotion": "anger", "value": 0.8})
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1971
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def update_value_system():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1976
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.ethical_framework.update_value_system = AsyncMock(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1981
    SQL query detected - ensure parameterized queries are used
    Code: Code: side_effect=update_value_system
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1986
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update value system
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1991
    SQL query detected - ensure parameterized queries are used
    Code: Code: await self.brain.ethical_framework.update_value_system()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1996
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify that value system was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2004
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2012
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test that a service is auto-deregistered if not updated within the threshold
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2017
    SQL query detected - ensure parameterized queries are used
    Code: Code: and validate that the DatabaseManager can insert and fetch interactions."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2022
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Simulate that the service's last update occurred sufficiently in the past
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2027
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Insert an interaction record
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2032
    SQL query detected - ensure parameterized queries are used
    Code: Code: db.insert_interaction(test_data)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2037
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert record_found, "The inserted interaction data should be found in the database"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2045
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test that a service is auto-deregistered if no health update occurs within the threshold."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2053
    SQL query detected - ensure parameterized queries are used
    Code: Code: EventType.SYSTEM_IMPROVEMENT_UPDATE,
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2058
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert all(e.type == EventType.SYSTEM_IMPROVEMENT_UPDATE for e in events_received)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2063
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_analyze_and_update_error_patterns(improvement_system):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2068
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test error pattern analysis and strategy updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2073
    SQL query detected - ensure parameterized queries are used
    Code: Code: await improvement_system._analyze_and_update_error_patterns()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2078
    SQL query detected - ensure parameterized queries are used
    Code: Code: improvement_system.error_tracker.update_recovery_strategy.assert_called_once_with(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2083
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_analyze_and_update_emotional_patterns(improvement_system):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2088
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test emotional pattern analysis and parameter updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2093
    SQL query detected - ensure parameterized queries are used
    Code: Code: await improvement_system._analyze_and_update_emotional_patterns()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2098
    SQL query detected - ensure parameterized queries are used
    Code: Code: improvement_system.emotional_core.update_response_parameters.assert_called_once_with(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2106
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2114
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2122
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_delete_adapter(lora_manager):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2127
    SQL query detected - ensure parameterized queries are used
    Code: Code: name="adapter_to_delete",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2132
    SQL query detected - ensure parameterized queries are used
    Code: Code: description="Adapter to delete",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2137
    SQL query detected - ensure parameterized queries are used
    Code: Code: adapter_path = os.path.join(lora_manager.lora_dir, "adapter_to_delete")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2142
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Delete the adapter
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2147
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = await lora_manager.delete_adapter("adapter_to_delete")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2152
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check that the delete was successful
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2157
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Try to delete a non-existent adapter
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2162
    SQL query detected - ensure parameterized queries are used
    Code: Code: await lora_manager.delete_adapter("non_existent_adapter")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2170
    SQL query detected - ensure parameterized queries are used
    Code: Code: emotions.update(self.emotion_detector.detect_text_emotion(text))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2175
    SQL query detected - ensure parameterized queries are used
    Code: Code: emotions.update(self.emotion_detector.detect_audio_emotion(audio_data))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2180
    SQL query detected - ensure parameterized queries are used
    Code: Code: emotions.update(self.emotion_detector.detect_facial_emotion(image_data))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2185
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.personality_model.update(interaction)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2190
    SQL query detected - ensure parameterized queries are used
    Code: Code: def update(self, interaction):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2195
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Update personality state"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2203
    SQL query detected - ensure parameterized queries are used
    Code: Code: def delete(self, key):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2208
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Delete a key"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2213
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.sets[key].update(values)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2218
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.sorted_sets[key].update(mapping)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2226
    SQL query detected - ensure parameterized queries are used
    Code: Code: with tempfile.NamedTemporaryFile(suffix='.jpg', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2234
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2242
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, project_root)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2250
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2258
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test service heartbeat updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2266
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update skill levels
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2271
    SQL query detected - ensure parameterized queries are used
    Code: Code: curriculum_manager.update_skill_levels(task, True, 0.9)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2276
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update performance and select again
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2281
    SQL query detected - ensure parameterized queries are used
    Code: Code: meta_learner.update_strategy_performance(0.8)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2289
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify system state updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2307
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2312
    SQL query detected - ensure parameterized queries are used
    Code: Code: valid_command_json = '{"command": "delete_file", "args": "protected.txt"}'
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2317
    SQL query detected - ensure parameterized queries are used
    Code: Code: failure_message = "Failed to delete file: Permission denied"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2322
    SQL query detected - ensure parameterized queries are used
    Code: Code: final_response = brain.process_command("delete the protected file")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2327
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_cmd_processor.execute_command.assert_called_once_with("delete_file", "protected.txt")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2335
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2343
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify working memory was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2351
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2356
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_handle_delete_file(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2361
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test the internal _handle_delete_file method."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2366
    SQL query detected - ensure parameterized queries are used
    Code: Code: test_file = self.test_dir / "file_to_delete.txt"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2371
    SQL query detected - ensure parameterized queries are used
    Code: Code: test_file.touch() # Create the file to be deleted
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2376
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = self.cmd_processor._handle_delete_file(str(test_file))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2381
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertIn("Deleted file", result)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2386
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertFalse(test_file.exists(), "_handle_delete_file did not delete the file.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2394
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2399
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_05_delete_file_command_success(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2404
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test the 'delete file' command handler for successful deletion."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2409
    SQL query detected - ensure parameterized queries are used
    Code: Code: filename = "file_to_delete.txt"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2414
    SQL query detected - ensure parameterized queries are used
    Code: Code: command = f"delete file {filename}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2419
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertEqual(result, f"Deleted file: {expected_path}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2424
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_06_delete_file_not_found(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2429
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test the 'delete file' command when the file does not exist."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2434
    SQL query detected - ensure parameterized queries are used
    Code: Code: command = f"delete file {filename}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2439
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_07_delete_file_protected_path_failure(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2444
    SQL query detected - ensure parameterized queries are used
    Code: Code: command = f"delete file {protected_path}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2449
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_08_delete_file_decorator_error_handling(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2454
    SQL query detected - ensure parameterized queries are used
    Code: Code: command = f"delete file {filename}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2462
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2467
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update summary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2472
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update summary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2480
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_update_and_get_relationship_data(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2485
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.db_manager.update_relationship_data(user_id, relationship_type, trust_level, rapport_level)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2493
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_update_relationship_metrics(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2498
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Initial update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2503
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.memory.update_relationship_metrics(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2508
    SQL query detected - ensure parameterized queries are used
    Code: Code: action = "delete_user_data"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2516
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_01_emotional_state_update(self, event_bus):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2521
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update with positive emotion
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2526
    SQL query detected - ensure parameterized queries are used
    Code: Code: item_id = await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2531
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update with negative emotion
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2536
    SQL query detected - ensure parameterized queries are used
    Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2541
    SQL query detected - ensure parameterized queries are used
    Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2546
    SQL query detected - ensure parameterized queries are used
    Code: Code: await memory.update_relationship_context(entity_id, context)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2551
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update context
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2556
    SQL query detected - ensure parameterized queries are used
    Code: Code: update = {
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2561
    SQL query detected - ensure parameterized queries are used
    Code: Code: await memory.update_relationship_context(entity_id, update)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2566
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check updated context
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2571
    SQL query detected - ensure parameterized queries are used
    Code: Code: updated_context = await memory.get_relationship_context(entity_id)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2576
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert updated_context["trust_level"] == 0.9
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2581
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert len(updated_context["shared_experiences"]) == 3
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2586
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2591
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2596
    SQL query detected - ensure parameterized queries are used
    Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2601
    SQL query detected - ensure parameterized queries are used
    Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2606
    SQL query detected - ensure parameterized queries are used
    Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2611
    SQL query detected - ensure parameterized queries are used
    Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2619
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_personality_state_updates(self, emotional_service):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2624
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test personality state updates and persistence"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2629
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert final_state != initial_state  # State should update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2634
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Personality state updates validated")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2642
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_04_empathy_model_updates(self, processor):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2647
    SQL query detected - ensure parameterized queries are used
    Code: Code: await processor.update_empathy_model({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2652
    SQL query detected - ensure parameterized queries are used
    Code: Code: await processor.update_empathy_model({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2657
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2665
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2673
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2681
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2689
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check priorities were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2697
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.temp_config = tempfile.NamedTemporaryFile(delete=False, suffix='.json')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2702
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.temp_db = tempfile.NamedTemporaryFile(delete=False, suffix='.db')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2707
    SQL query detected - ensure parameterized queries are used
    Code: Code: with tempfile.NamedTemporaryFile(delete=False, suffix='.json') as temp_file:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2715
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.temp_db = tempfile.NamedTemporaryFile(delete=False, suffix='.db')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2720
    SQL query detected - ensure parameterized queries are used
    Code: Code: "delete user data without confirmation",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2725
    SQL query detected - ensure parameterized queries are used
    Code: Code: with tempfile.NamedTemporaryFile(delete=False, suffix='.json') as temp_file:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2730
    SQL query detected - ensure parameterized queries are used
    Code: Code: with tempfile.NamedTemporaryFile(delete=False, suffix='.json') as temp_file:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2738
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify emotional state update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2746
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert result['memory_updates']
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2751
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Get updated metrics
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2756
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify metrics were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2764
    SQL query detected - ensure parameterized queries are used
    Code: Code: """HealthMonitor should emit a *healthy* status update when the endpoint responds 200."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2772
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2780
    SQL query detected - ensure parameterized queries are used
    Code: Code: updated_items = await working_memory.get_active_items()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2785
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert len(updated_items) <= len(items)  # Should have decayed
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2790
    SQL query detected - ensure parameterized queries are used
    Code: Code: for old, new in zip(items, updated_items):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2798
    SQL query detected - ensure parameterized queries are used
    Code: Code: last_updated: float
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2803
    SQL query detected - ensure parameterized queries are used
    Code: Code: last_updated=time.time(),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2808
    SQL query detected - ensure parameterized queries are used
    Code: Code: last_updated=time.time(),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2816
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2824
    SQL query detected - ensure parameterized queries are used
    Code: Code: await brain.emotional_processor.update_emotional_state({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2832
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_event_bus.subscribe.assert_any_call("config.updated", arpeggiator._handle_config_updated)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2837
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_handle_config_updated(self, arpeggiator):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2842
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test handling configuration update events"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2847
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Replace update_configuration with a mock
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2852
    SQL query detected - ensure parameterized queries are used
    Code: Code: arpeggiator.update_configuration = MagicMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2857
    SQL query detected - ensure parameterized queries are used
    Code: Code: event_type="config.updated",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2862
    SQL query detected - ensure parameterized queries are used
    Code: Code: await arpeggiator._handle_config_updated(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2867
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify update_configuration was called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2872
    SQL query detected - ensure parameterized queries are used
    Code: Code: arpeggiator.update_configuration.assert_called_once_with({"sensitivity": 0.7})
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2877
    SQL query detected - ensure parameterized queries are used
    Code: Code: event_type="config.updated",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2882
    SQL query detected - ensure parameterized queries are used
    Code: Code: arpeggiator.update_configuration.reset_mock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2887
    SQL query detected - ensure parameterized queries are used
    Code: Code: await arpeggiator._handle_config_updated(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2892
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify update_configuration was not called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2897
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert not arpeggiator.update_configuration.called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2902
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_update_configuration(self, arpeggiator, mock_config_manager):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2907
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update configuration
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2912
    SQL query detected - ensure parameterized queries are used
    Code: Code: arpeggiator.update_configuration(new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2917
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify configuration was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2922
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify config manager was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2927
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_config_manager.update_config.assert_called_once_with("gesture_arpeggiator", new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2935
    SQL query detected - ensure parameterized queries are used
    Code: Code: event_bus.subscribe.assert_any_call("ui.context_changed", gesture_integration.update_ui_context)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2940
    SQL query detected - ensure parameterized queries are used
    Code: Code: event_bus.subscribe.assert_any_call("config.updated.gesture_integration", gesture_integration.update_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2945
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_update_ui_context(self, gesture_integration):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2950
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test UI context updates."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2955
    SQL query detected - ensure parameterized queries are used
    Code: Code: gesture_integration.update_ui_context(context_event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2960
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_update_config(self, gesture_integration):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2965
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test configuration updates."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2970
    SQL query detected - ensure parameterized queries are used
    Code: Code: gesture_integration.update_config(new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2978
    SQL query detected - ensure parameterized queries are used
    Code: Code: @patch('alejo.ui.pyside_ui.HolographicWidget.update')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2983
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_event_handler(self, mock_update):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2988
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2996
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3001
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check that config was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3006
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check that brain.update_config was called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3011
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_brain.update_config.assert_called_once_with(alejo_ui.config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3019
    SQL query detected - ensure parameterized queries are used
    Code: Code: service.update_arpeggiator_settings = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3024
    SQL query detected - ensure parameterized queries are used
    Code: Code: service.update_visualizer_settings = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3029
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify arpeggiator settings were updated with Joy parameters
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3034
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_arpeggiator_service.update_arpeggiator_settings.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3039
    SQL query detected - ensure parameterized queries are used
    Code: Code: args = mock_arpeggiator_service.update_arpeggiator_settings.call_args[0][0]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3044
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify visualizer settings were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3049
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_arpeggiator_service.update_visualizer_settings.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3054
    SQL query detected - ensure parameterized queries are used
    Code: Code: vis_args = mock_arpeggiator_service.update_visualizer_settings.call_args[0][0]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3059
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_arpeggiator_service.update_arpeggiator_settings.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3064
    SQL query detected - ensure parameterized queries are used
    Code: Code: args = mock_arpeggiator_service.update_arpeggiator_settings.call_args[0][0]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3069
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_arpeggiator_service.update_arpeggiator_settings.reset_mock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3077
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent.parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3082
    SQL query detected - ensure parameterized queries are used
    Code: Code: "page_title": "Test Page Updated",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3090
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent.parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3098
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3103
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check that last_used was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3111
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert sent_data["type"] == "config_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3116
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_handle_ui_update(websocket_handler, mock_websocket):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3121
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test handling of UI update events"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3126
    SQL query detected - ensure parameterized queries are used
    Code: Code: "update": {
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3131
    SQL query detected - ensure parameterized queries are used
    Code: Code: await websocket_handler._handle_ui_update(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3136
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert sent_data["type"] == "ui_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3141
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert sent_data["update"] == event["update"]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3146
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_handle_config_update(websocket_handler, mock_websocket):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3151
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test handling of configuration update events"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3156
    SQL query detected - ensure parameterized queries are used
    Code: Code: await websocket_handler._handle_config_update(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3161
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert sent_data["type"] == "config_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3165
    SQL query detected - ensure parameterized queries are used
    Code: File: update_manager.py
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3169
    SQL query detected - ensure parameterized queries are used
    Code: Code: ALEJO Update Manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3174
    SQL query detected - ensure parameterized queries are used
    Code: Code: Automatically checks for and applies updates before ALEJO starts.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3179
    SQL query detected - ensure parameterized queries are used
    Code: Code: logging.FileHandler("alejo_update.log"),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3184
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger = logging.getLogger("alejo.update_manager")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3189
    SQL query detected - ensure parameterized queries are used
    Code: Code: class UpdateManager:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3194
    SQL query detected - ensure parameterized queries are used
    Code: Code: Manages automatic updates for ALEJO system
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3199
    SQL query detected - ensure parameterized queries are used
    Code: Code: This class checks for updates from the main repository and applies them
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3204
    SQL query detected - ensure parameterized queries are used
    Code: Code: Initialize the Update Manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3209
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.update_cache_file = self.alejo_dir / ".update_cache"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3214
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.update_lock_file = self.alejo_dir / ".update_lock"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3219
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.force_update = self.config.get("force_update", False)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3224
    SQL query detected - ensure parameterized queries are used
    Code: Code: def should_check_for_updates(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3229
    SQL query detected - ensure parameterized queries are used
    Code: Code: Determine if we should check for updates based on last check time
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3234
    SQL query detected - ensure parameterized queries are used
    Code: Code: if self.force_update:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3239
    SQL query detected - ensure parameterized queries are used
    Code: Code: if not self.update_cache_file.exists():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3244
    SQL query detected - ensure parameterized queries are used
    Code: Code: with open(self.update_cache_file, "r") as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3249
    SQL query detected - ensure parameterized queries are used
    Code: Code: def update_check_cache(self, update_available=False, version=None):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3254
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Update the cache file with current check information"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3259
    SQL query detected - ensure parameterized queries are used
    Code: Code: "update_available": update_available,
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3264
    SQL query detected - ensure parameterized queries are used
    Code: Code: with open(self.update_cache_file, "w") as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3269
    SQL query detected - ensure parameterized queries are used
    Code: Code: def check_for_updates(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3274
    SQL query detected - ensure parameterized queries are used
    Code: Code: Check if updates are available
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3279
    SQL query detected - ensure parameterized queries are used
    Code: Code: tuple: (update_available, current_version, latest_version)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3284
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.warning("Not a git repository, cannot check for updates")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3289
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Create a lock file to prevent concurrent update checks
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3294
    SQL query detected - ensure parameterized queries are used
    Code: Code: if self.update_lock_file.exists():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3299
    SQL query detected - ensure parameterized queries are used
    Code: Code: if time.time() - os.path.getmtime(self.update_lock_file) > 600:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3304
    SQL query detected - ensure parameterized queries are used
    Code: Code: os.remove(self.update_lock_file)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3309
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Update check already in progress, skipping")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3314
    SQL query detected - ensure parameterized queries are used
    Code: Code: with open(self.update_lock_file, "w") as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3319
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_available = current_version != latest_version
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3324
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.update_check_cache(update_available, current_version)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3329
    SQL query detected - ensure parameterized queries are used
    Code: Code: return update_available, current_version, latest_version
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3334
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.error(f"Error checking for updates: {str(e)}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3339
    SQL query detected - ensure parameterized queries are used
    Code: Code: if self.update_lock_file.exists():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3344
    SQL query detected - ensure parameterized queries are used
    Code: Code: os.remove(self.update_lock_file)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3349
    SQL query detected - ensure parameterized queries are used
    Code: Code: def apply_update(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3354
    SQL query detected - ensure parameterized queries are used
    Code: Code: Apply available updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3359
    SQL query detected - ensure parameterized queries are used
    Code: Code: bool: True if update was successful, False otherwise
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3364
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.warning("Not a git repository, cannot apply updates")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3369
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.error(f"Error pulling updates: {result.stderr}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3374
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update database schema if needed
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3379
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.update_database_schema()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3384
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Update completed successfully")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3389
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.error(f"Error applying update: {str(e)}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3394
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Restore ALEJO from backup in case of update failure"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3399
    SQL query detected - ensure parameterized queries are used
    Code: Code: def update_database_schema(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3404
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Update database schema if necessary"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3409
    SQL query detected - ensure parameterized queries are used
    Code: Code: def run_update_check(self, auto_apply=True):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3414
    SQL query detected - ensure parameterized queries are used
    Code: Code: Run a full update check and optionally apply updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3419
    SQL query detected - ensure parameterized queries are used
    Code: Code: auto_apply: Whether to automatically apply updates if available
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3424
    SQL query detected - ensure parameterized queries are used
    Code: Code: bool: True if system is up to date, False if update failed
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3429
    SQL query detected - ensure parameterized queries are used
    Code: Code: if not self.should_check_for_updates():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3434
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Update check was performed recently, skipping")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3439
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Checking for ALEJO updates")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3444
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_available, current_version, latest_version = self.check_for_updates()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3449
    SQL query detected - ensure parameterized queries are used
    Code: Code: if update_available:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3454
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info(f"Update available: {current_version[:7]} -> {latest_version[:7]}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3459
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Applying update automatically")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3464
    SQL query detected - ensure parameterized queries are used
    Code: Code: return self.apply_update()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3469
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Update available but not applying automatically")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3474
    SQL query detected - ensure parameterized queries are used
    Code: Code: parser = argparse.ArgumentParser(description="ALEJO Update Manager")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3479
    SQL query detected - ensure parameterized queries are used
    Code: Code: parser.add_argument("--check-only", action="store_true", help="Only check for updates, don't apply them")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3484
    SQL query detected - ensure parameterized queries are used
    Code: Code: parser.add_argument("--force", action="store_true", help="Force update check even if done recently")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3489
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Create update manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3494
    SQL query detected - ensure parameterized queries are used
    Code: Code: config = {"force_update": args.force}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3499
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3504
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Run update check
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3509
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager.run_update_check(auto_apply=not args.check_only)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3517
    SQL query detected - ensure parameterized queries are used
    Code: Code: await r.delete(test_key)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3525
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(script_path).parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3533
    SQL query detected - ensure parameterized queries are used
    Code: Code: Y]O?gjOEb?0)r   id  r  )r#   r#   gh㈵>g7P>{r   )r#   r#   gh㈵>g7P>0)r   i  	fix_flags)r   r   guR#>g&p>{r   )r   r   guR#>g&p>0)r   i  r   )r   r   g>g+|c?{r   )r   r   g>g+|c?0)rS   rT   rU   )r)   r)   g0D4>g =T?{0)DC:\Users\magic\AppData\Local\Programs\Python\Python39\lib\weakref.pyi   r   )r)   r)   glӎ>g4vxU>{rY   )r)   r)   glӎ>g4vxU>0)r  i"  update)r)   r)   gavt>g:ܳS>{)r  r  r   )r)   r)   gavt>g:ܳS>0)FC:\Users\magic\AppData\Local\Programs\Python\Python39\lib\threading.pyr   RLock)r#   r#   gkNu>gkNu>{rZ   iv  
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3541
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3546
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Process the command and update the log"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3551
    SQL query detected - ensure parameterized queries are used
    Code: Code: def _update():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3556
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.log_text.insert(tk.END, message + "\n\n", color)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3561
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update in the main thread
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3566
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.root.after(0, _update)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3571
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.log_text.delete(1.0, tk.END)
    Remediation: Use parameterized queries with placeholders for all user input

[LOW] PseudoRandom line 2294
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: op = random.choice(['command', 'event', 'memory'])
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 2299
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: 'emotional_state': {'valence': random.random()}
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 3579
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: if random.random() < 0.3:  # 30% chance of rate limit
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 3584
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: if random.random() < 0.5:  # 50% chance of network error
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 3592
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: {"cascade_id": random.randint(1, 1000)}
    Remediation: Use secrets module for security-sensitive randomness needs


File: test_reports\security_validation_20250701_063115.json
--------------------------------------------------------------------------------
[HIGH] DynamicCodeExecution line 37
    Use of eval() can lead to code injection
    Code: "issue": "Unsafe eval() usage"
    Remediation: Replace with safer alternatives like JSON parsing or static code


File: test_reports\security_validation_20250701_063115.txt
--------------------------------------------------------------------------------
[HIGH] DynamicCodeExecution line 29
    Use of eval() can lead to code injection
    Code: eval() Security Fixes: FAILED
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 32
    Use of eval() can lead to code injection
    Code: - validate_security.py: Unsafe eval() usage
    Remediation: Replace with safer alternatives like JSON parsing or static code


File: test_reports\security_validation_20250701_063328.txt
--------------------------------------------------------------------------------
[HIGH] DynamicCodeExecution line 26
    Use of eval() can lead to code injection
    Code: eval() Security Fixes: PASSED
    Remediation: Replace with safer alternatives like JSON parsing or static code


File: validate_security.py
--------------------------------------------------------------------------------
[HIGH] DynamicCodeExecution line 340
    Use of eval() can lead to code injection
    Code: """Validate that eval() is not used insecurely"""
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 341
    Use of eval() can lead to code injection
    Code: logger.info("Validating eval() usage...")
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 346
    Use of eval() can lead to code injection
    Code: # Files to exclude from eval() checks (scanning/validation tools that might have eval() patterns)
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 363
    Use of eval() can lead to code injection
    Code: # Look for eval() usage but exclude ast.literal_eval which is safe
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 367
    Use of eval() can lead to code injection
    Code: 'issue': 'Unsafe eval() usage'
    Remediation: Replace with safer alternatives like JSON parsing or static code

[MEDIUM] SQLQuery line 559
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.dirname(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input


File: .update_cache
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 1
    SQL query detected - ensure parameterized queries are used
    Code: {"last_check": "2025-06-30T23:52:42.890553", "update_available": false, "current_version": "abcd1234"}
    Remediation: Use parameterized queries with placeholders for all user input


File: CI_CD.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 33
    SQL query detected - ensure parameterized queries are used
    Code: - Updates services with zero downtime
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 88
    SQL query detected - ensure parameterized queries are used
    Code: - Dependency updates
    Remediation: Use parameterized queries with placeholders for all user input


File: DISTRIBUTED_INTELLIGENCE.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 51
    SQL query detected - ensure parameterized queries are used
    Code: * Regular model updates containing collective insights
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 55
    SQL query detected - ensure parameterized queries are used
    Code: * User control over update frequency and domains
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 73
    SQL query detected - ensure parameterized queries are used
    Code: * Users can delete their local learning data at any time
    Remediation: Use parameterized queries with placeholders for all user input


File: Dockerfile
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 6
    SQL query detected - ensure parameterized queries are used
    Code: RUN apt-get update && apt-get install -y \
    Remediation: Use parameterized queries with placeholders for all user input


File: GESTURE_SYSTEM.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 35
    SQL query detected - ensure parameterized queries are used
    Code: - Manages dynamic UI updates and DOM manipulation for gesture-enabled elements.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 43
    SQL query detected - ensure parameterized queries are used
    Code: - Provides methods to update, enable, or disable elements based on their gesture properties.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 135
    SQL query detected - ensure parameterized queries are used
    Code: - CI/CD pipelines have been updated to include backend validation, integration testing, and security compliance.
    Remediation: Use parameterized queries with placeholders for all user input


File: README.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 47
    SQL query detected - ensure parameterized queries are used
    Code: - **Web Interface**: Modern, responsive web interface with real-time updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 76
    SQL query detected - ensure parameterized queries are used
    Code: - **ServiceRegistry**: Manages service registration and health updates, providing a single source of truth for service status.
    Remediation: Use parameterized queries with placeholders for all user input


File: README_GESTURE_SYSTEM.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 131
    SQL query detected - ensure parameterized queries are used
    Code: 3. Update the frontend UI in `alejo/templates/gesture_enabled_interface.html`
    Remediation: Use parameterized queries with placeholders for all user input


File: README_SECURITY.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 240
    SQL query detected - ensure parameterized queries are used
    Code: {"action": "delete_file"},
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 380
    SQL query detected - ensure parameterized queries are used
    Code: 5. **Updates**: Keep all dependencies up to date.
    Remediation: Use parameterized queries with placeholders for all user input


File: alejo_update.log
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 1
    SQL query detected - ensure parameterized queries are used
    Code: 2025-06-30 23:52:21,057 - alejo.update_manager - INFO - Pulling latest changes from repository
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2
    SQL query detected - ensure parameterized queries are used
    Code: 2025-06-30 23:52:21,058 - alejo.update_manager - ERROR - Error pulling updates: Failed to pull
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3
    SQL query detected - ensure parameterized queries are used
    Code: 2025-06-30 23:52:21,062 - alejo.update_manager - INFO - Pulling latest changes from repository
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4
    SQL query detected - ensure parameterized queries are used
    Code: 2025-06-30 23:52:21,063 - alejo.update_manager - INFO - Updating dependencies
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5
    SQL query detected - ensure parameterized queries are used
    Code: 2025-06-30 23:52:21,063 - alejo.update_manager - INFO - Update completed successfully
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6
    SQL query detected - ensure parameterized queries are used
    Code: 2025-06-30 23:52:21,068 - alejo.update_manager - INFO - Backing up current ALEJO installation to C:\Users\magic\AppData\Local\Temp\alejo_backup_h5jwy8dw
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7
    SQL query detected - ensure parameterized queries are used
    Code: 2025-06-30 23:52:21,083 - alejo.update_manager - INFO - Restoring ALEJO from backup C:\Users\magic\AppData\Local\Temp\alejo_backup_h5jwy8dw
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8
    SQL query detected - ensure parameterized queries are used
    Code: 2025-06-30 23:52:42,882 - alejo.update_manager - ERROR - Error restoring backup: [WinError 32] The process cannot access the file because it is being used by another process: 'C:\\Users\\magic\\CascadeProjects\\ALEJO\\alejo_update.log'
    Remediation: Use parameterized queries with placeholders for all user input


File: architecture\migration_guide.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 101
    SQL query detected - ensure parameterized queries are used
    Code: - Update references to use the new module
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 106
    SQL query detected - ensure parameterized queries are used
    Code: - Update references to use the new module
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 108
    SQL query detected - ensure parameterized queries are used
    Code: 4. **Update Tests**:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 113
    SQL query detected - ensure parameterized queries are used
    Code: 5. **Update Documentation**:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 115
    SQL query detected - ensure parameterized queries are used
    Code: - Update user guide
    Remediation: Use parameterized queries with placeholders for all user input


File: architecture\package_structure.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 102
    SQL query detected - ensure parameterized queries are used
    Code: 2. Update imports to use package structure
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 120
    SQL query detected - ensure parameterized queries are used
    Code: 3. Update imports to use package structure
    Remediation: Use parameterized queries with placeholders for all user input


File: auto_fix_selenium_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 51
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(self.script_path.parent))
    Remediation: Use parameterized queries with placeholders for all user input


File: bin\alejo-browser-test
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 14
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(Path(__file__).parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input


File: cleanup_processes.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 16
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input


File: direct_gaze_test.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 17
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input


File: docs\ADR\0001_system_architecture.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 15
    SQL query detected - ensure parameterized queries are used
    Code: 5. **Brain Integration**: Update ALEJOBrain and other components to automatically self-register with the ServiceRegistry and intercommunicate via the EventBus.
    Remediation: Use parameterized queries with placeholders for all user input


File: docs\ALEJO_ROBOTICS_INTEGRATION.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 204
    SQL query detected - ensure parameterized queries are used
    Code: - Create secure update mechanisms
    Remediation: Use parameterized queries with placeholders for all user input


File: docs\AUTO_UPDATE_README.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 1
    SQL query detected - ensure parameterized queries are used
    Code: # ALEJO Automatic Update System
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3
    SQL query detected - ensure parameterized queries are used
    Code: This document explains the automatic update system implemented in ALEJO to ensure users always have the latest security patches and features.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7
    SQL query detected - ensure parameterized queries are used
    Code: The ALEJO update system performs the following operations:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9
    SQL query detected - ensure parameterized queries are used
    Code: 1. **Pre-launch Update Check**: Before ALEJO starts, it automatically checks for updates from the main repository.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10
    SQL query detected - ensure parameterized queries are used
    Code: 2. **Secure Update Process**:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11
    SQL query detected - ensure parameterized queries are used
    Code: - Creates a backup of the current installation before applying any updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12
    SQL query detected - ensure parameterized queries are used
    Code: - Updates the codebase from the repository
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13
    SQL query detected - ensure parameterized queries are used
    Code: - Updates dependencies if necessary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 15
    SQL query detected - ensure parameterized queries are used
    Code: - Rolls back to the backup if any errors occur during the update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 16
    SQL query detected - ensure parameterized queries are used
    Code: 3. **Scheduled Checks**: Updates are checked at configurable intervals (default: every 4 hours) to avoid excessive network traffic.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 20
    SQL query detected - ensure parameterized queries are used
    Code: The update system works automatically and requires no user intervention. However, several command-line options are available:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 23
    SQL query detected - ensure parameterized queries are used
    Code: # Normal startup with automatic update check
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 26
    SQL query detected - ensure parameterized queries are used
    Code: # Skip update check during startup
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 27
    SQL query detected - ensure parameterized queries are used
    Code: python start_alejo_with_gestures.py --skip-updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 29
    SQL query detected - ensure parameterized queries are used
    Code: # Manually check for updates without starting ALEJO
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 30
    SQL query detected - ensure parameterized queries are used
    Code: python update_manager.py --check-only
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 32
    SQL query detected - ensure parameterized queries are used
    Code: # Force update check regardless of when the last check occurred
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 33
    SQL query detected - ensure parameterized queries are used
    Code: python update_manager.py --force
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 38
    SQL query detected - ensure parameterized queries are used
    Code: The update system can be configured through environment variables:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 42
    SQL query detected - ensure parameterized queries are used
    Code: - `ALEJO_UPDATE_INTERVAL`: Set the minimum hours between update checks (default: 4)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 46
    SQL query detected - ensure parameterized queries are used
    Code: If you encounter issues with the automatic update system:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 48
    SQL query detected - ensure parameterized queries are used
    Code: 1. Check the log file (`alejo_update.log`) for detailed error messages
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 49
    SQL query detected - ensure parameterized queries are used
    Code: 2. Try running a manual update with `python update_manager.py --force`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 50
    SQL query detected - ensure parameterized queries are used
    Code: 3. If updates consistently fail, you can bypass them with `--skip-updates` and update manually
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 54
    SQL query detected - ensure parameterized queries are used
    Code: The automatic update system enhances ALEJO's security by ensuring users always have the latest security patches. The system:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 57
    SQL query detected - ensure parameterized queries are used
    Code: - Creates backups before applying updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 59
    SQL query detected - ensure parameterized queries are used
    Code: - Maintains a log of all update operations
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 63
    SQL query detected - ensure parameterized queries are used
    Code: To extend or modify the update system:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 65
    SQL query detected - ensure parameterized queries are used
    Code: 1. The core functionality is in `update_manager.py`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 66
    SQL query detected - ensure parameterized queries are used
    Code: 2. Test cases are available in `test_update_manager.py`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 67
    SQL query detected - ensure parameterized queries are used
    Code: 3. The update system is integrated into ALEJO's startup process in `start_alejo_with_gestures.py`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 72
    SQL query detected - ensure parameterized queries are used
    Code: python -m unittest test_update_manager.py
    Remediation: Use parameterized queries with placeholders for all user input


File: docs\SPINNAKER_NEUROMORPHIC_IMPLEMENTATION.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 194
    SQL query detected - ensure parameterized queries are used
    Code: - **Event-Driven Updates**: Computing only when necessary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 246
    SQL query detected - ensure parameterized queries are used
    Code: - **Processing Efficiency**: Neural updates per second
    Remediation: Use parameterized queries with placeholders for all user input


File: docs\architecture_review.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 15
    SQL query detected - ensure parameterized queries are used
    Code: - **Modularity**: Components are well-separated, making it easier to update individual parts.
    Remediation: Use parameterized queries with placeholders for all user input


File: docs\plugin_development_guide.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 243
    SQL query detected - ensure parameterized queries are used
    Code: - Update plugins to compatible versions
    Remediation: Use parameterized queries with placeholders for all user input


File: examples\browser_testing_example.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 14
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(Path(__file__).parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input


File: fix_common_issues.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 221
    SQL query detected - ensure parameterized queries are used
    Code: # Insert before the first import
    Remediation: Use parameterized queries with placeholders for all user input


File: fix_js_issues.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 121
    SQL query detected - ensure parameterized queries are used
    Code: # Find a good place to insert the polyfill
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 122
    SQL query detected - ensure parameterized queries are used
    Code: # Try to insert after imports or at the beginning of the file
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 130
    SQL query detected - ensure parameterized queries are used
    Code: # Insert at the beginning of the file
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 182
    SQL query detected - ensure parameterized queries are used
    Code: # Insert catch block before the last closing brace
    Remediation: Use parameterized queries with placeholders for all user input


File: fix_localstorage_issues.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 197
    SQL query detected - ensure parameterized queries are used
    Code: # Find a good place to insert the wrapper
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 202
    SQL query detected - ensure parameterized queries are used
    Code: # Insert after script tag
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 203
    SQL query detected - ensure parameterized queries are used
    Code: insert_pos = script_tag_match.end()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 204
    SQL query detected - ensure parameterized queries are used
    Code: content = content[:insert_pos] + secure_storage_wrapper + content[insert_pos:]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 206
    SQL query detected - ensure parameterized queries are used
    Code: # Insert after imports
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 207
    SQL query detected - ensure parameterized queries are used
    Code: insert_pos = import_match.end()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 208
    SQL query detected - ensure parameterized queries are used
    Code: content = content[:insert_pos] + secure_storage_wrapper + content[insert_pos:]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 210
    SQL query detected - ensure parameterized queries are used
    Code: # Insert at the beginning with a comment explaining
    Remediation: Use parameterized queries with placeholders for all user input


File: fix_random_issues.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 138
    SQL query detected - ensure parameterized queries are used
    Code: modified_lines.insert(import_section_end, "import secrets  # More secure for cryptographic purposes")
    Remediation: Use parameterized queries with placeholders for all user input

[LOW] PseudoRandom line 91
    Pseudo-random number generator used - not suitable for security purposes
    Code: # Replace random.random() with secrets.randbelow() / 2**32 or similar
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 98
    Pseudo-random number generator used - not suitable for security purposes
    Code: # Replace random.randint with secrets.randbelow
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 107
    Pseudo-random number generator used - not suitable for security purposes
    Code: # Replace random.choice with secrets.choice
    Remediation: Use secrets module for security-sensitive randomness needs


File: installer.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 125
    SQL query detected - ensure parameterized queries are used
    Code: progress_bar.update(len(data))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 160
    SQL query detected - ensure parameterized queries are used
    Code: sha256_hash.update(byte_block)
    Remediation: Use parameterized queries with placeholders for all user input


File: k8s\README.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 136
    SQL query detected - ensure parameterized queries are used
    Code: 1. Update images:
    Remediation: Use parameterized queries with placeholders for all user input


File: k8s\monitoring\README.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 124
    SQL query detected - ensure parameterized queries are used
    Code: 1. Update Istio:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 129
    SQL query detected - ensure parameterized queries are used
    Code: 2. Update monitoring stack:
    Remediation: Use parameterized queries with placeholders for all user input


File: logs\error_log.json
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 15
    SQL query detected - ensure parameterized queries are used
    Code: "last_updated": "2025-06-17T06:34:00.742317"
    Remediation: Use parameterized queries with placeholders for all user input


File: logs\optimization.log
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 32
    SQL query detected - ensure parameterized queries are used
    Code: 2025-06-11 07:31:08,226 - __main__ - INFO - Updated index.html
    Remediation: Use parameterized queries with placeholders for all user input


File: optimization_priorities.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 87
    SQL query detected - ensure parameterized queries are used
    Code: 1. Review and update priorities weekly
    Remediation: Use parameterized queries with placeholders for all user input


File: optimize_performance.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 83
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(self.project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 132
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(self.project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 243
    SQL query detected - ensure parameterized queries are used
    Code: # Update results
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 313
    SQL query detected - ensure parameterized queries are used
    Code: # Update results
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 323
    SQL query detected - ensure parameterized queries are used
    Code: def update_html_references(self, js_dir, css_dir):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 324
    SQL query detected - ensure parameterized queries are used
    Code: """Update HTML templates to use optimized files"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 365
    SQL query detected - ensure parameterized queries are used
    Code: # Update JS references
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 385
    SQL query detected - ensure parameterized queries are used
    Code: # Update CSS references
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 405
    SQL query detected - ensure parameterized queries are used
    Code: # Write updated content
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 409
    SQL query detected - ensure parameterized queries are used
    Code: logger.info(f"Updated {html_file.name}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 524
    SQL query detected - ensure parameterized queries are used
    Code: # Update HTML references
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 526
    SQL query detected - ensure parameterized queries are used
    Code: optimizer.update_html_references(js_dir, css_dir)
    Remediation: Use parameterized queries with placeholders for all user input


File: preview_alejo.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 298
    SQL query detected - ensure parameterized queries are used
    Code: # Send status updates
    Remediation: Use parameterized queries with placeholders for all user input


File: run_alejo_optimized.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 193
    SQL query detected - ensure parameterized queries are used
    Code: logger.warning(f"{env_file} already exists. Please delete it first if you want to create a new one.")
    Remediation: Use parameterized queries with placeholders for all user input


File: run_comprehensive_tests.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 41
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(PROJECT_ROOT))
    Remediation: Use parameterized queries with placeholders for all user input


File: run_gaze_test.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 16
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input


File: run_integration_tests.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 9
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.dirname(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input


File: run_tests.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 11
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input


File: scripts\apply_improvements.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 19
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(Path(__file__).resolve().parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 97
    SQL query detected - ensure parameterized queries are used
    Code: # Update improvements status in data manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 99
    SQL query detected - ensure parameterized queries are used
    Code: await data_manager.update_improvements(applied_improvements)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 100
    SQL query detected - ensure parameterized queries are used
    Code: logger.info(f"Updated status for {len(applied_improvements)} improvements")
    Remediation: Use parameterized queries with placeholders for all user input


File: scripts\benchmark_performance.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 23
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, project_root)
    Remediation: Use parameterized queries with placeholders for all user input


File: scripts\generate_improvements.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 20
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(Path(__file__).resolve().parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input


File: scripts\model_fetcher.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 26
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(script_dir.parent))
    Remediation: Use parameterized queries with placeholders for all user input


File: scripts\process_insights.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 20
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(Path(__file__).resolve().parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input


File: scripts\run_integration_tests.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 17
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input


File: scripts\setup_test_env.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 88
    SQL query detected - ensure parameterized queries are used
    Code: """Update test configuration"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 94
    SQL query detected - ensure parameterized queries are used
    Code: # Update database paths in config
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 107
    SQL query detected - ensure parameterized queries are used
    Code: logger.info("Updated test configuration")
    Remediation: Use parameterized queries with placeholders for all user input


File: scripts\smoke_test.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 23
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(PROJECT_ROOT))
    Remediation: Use parameterized queries with placeholders for all user input


File: secure_alejo.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 82
    SQL query detected - ensure parameterized queries are used
    Code: # Update config with file values
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 83
    SQL query detected - ensure parameterized queries are used
    Code: self._update_dict(config, file_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 95
    SQL query detected - ensure parameterized queries are used
    Code: def _update_dict(self, target: Dict, source: Dict) -> None:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 97
    SQL query detected - ensure parameterized queries are used
    Code: Recursively update dictionary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 105
    SQL query detected - ensure parameterized queries are used
    Code: self._update_dict(target[key], value)
    Remediation: Use parameterized queries with placeholders for all user input


File: start_alejo_with_gestures.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 18
    SQL query detected - ensure parameterized queries are used
    Code: # Import update manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 20
    SQL query detected - ensure parameterized queries are used
    Code: from update_manager import UpdateManager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 21
    SQL query detected - ensure parameterized queries are used
    Code: UPDATE_MANAGER_AVAILABLE = True
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 23
    SQL query detected - ensure parameterized queries are used
    Code: UPDATE_MANAGER_AVAILABLE = False
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 96
    SQL query detected - ensure parameterized queries are used
    Code: # Add update-related command line arguments
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 98
    SQL query detected - ensure parameterized queries are used
    Code: "--skip-updates",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 100
    SQL query detected - ensure parameterized queries are used
    Code: help="Skip checking for updates before starting"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 416
    SQL query detected - ensure parameterized queries are used
    Code: # Check for updates before starting services
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 417
    SQL query detected - ensure parameterized queries are used
    Code: if UPDATE_MANAGER_AVAILABLE and not args.skip_updates:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 418
    SQL query detected - ensure parameterized queries are used
    Code: logger.info("Checking for ALEJO updates...")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 420
    SQL query detected - ensure parameterized queries are used
    Code: update_manager = UpdateManager()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 421
    SQL query detected - ensure parameterized queries are used
    Code: update_success = update_manager.run_update_check(auto_apply=True)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 422
    SQL query detected - ensure parameterized queries are used
    Code: if not update_success:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 423
    SQL query detected - ensure parameterized queries are used
    Code: logger.error("Update process encountered errors. Starting with current version.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 425
    SQL query detected - ensure parameterized queries are used
    Code: logger.info("Update check completed successfully.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 427
    SQL query detected - ensure parameterized queries are used
    Code: logger.error(f"Error during update process: {str(e)}")
    Remediation: Use parameterized queries with placeholders for all user input


File: test_component.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 35
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(PROJECT_ROOT))
    Remediation: Use parameterized queries with placeholders for all user input


File: test_event_bus.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 10
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input


File: test_gesture_docker.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 197
    SQL query detected - ensure parameterized queries are used
    Code: # Update the timestamp
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 285
    SQL query detected - ensure parameterized queries are used
    Code: # Update default URLs if provided
    Remediation: Use parameterized queries with placeholders for all user input


File: test_gesture_system.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 99
    SQL query detected - ensure parameterized queries are used
    Code: # Update the timestamp
    Remediation: Use parameterized queries with placeholders for all user input


File: test_resource_management.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 110
    SQL query detected - ensure parameterized queries are used
    Code: # Check updated allocations
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 113
    SQL query detected - ensure parameterized queries are used
    Code: logger.info(f"Updated allocations: {allocations}")
    Remediation: Use parameterized queries with placeholders for all user input


File: test_update_manager.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 3
    SQL query detected - ensure parameterized queries are used
    Code: Test script for ALEJO Update Manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4
    SQL query detected - ensure parameterized queries are used
    Code: This script tests the functionality of the update manager to ensure it works correctly.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 16
    SQL query detected - ensure parameterized queries are used
    Code: # Import the update manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 18
    SQL query detected - ensure parameterized queries are used
    Code: from update_manager import UpdateManager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 21
    SQL query detected - ensure parameterized queries are used
    Code: class TestUpdateManager(unittest.TestCase):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 22
    SQL query detected - ensure parameterized queries are used
    Code: """Test cases for the ALEJO Update Manager"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 27
    SQL query detected - ensure parameterized queries are used
    Code: self.test_dir = tempfile.mkdtemp(prefix="alejo_update_test_")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 39
    SQL query detected - ensure parameterized queries are used
    Code: "force_update": True
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 53
    SQL query detected - ensure parameterized queries are used
    Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 54
    SQL query detected - ensure parameterized queries are used
    Code: self.assertTrue(update_manager.is_git_repo())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 58
    SQL query detected - ensure parameterized queries are used
    Code: self.assertFalse(update_manager.is_git_repo())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 61
    SQL query detected - ensure parameterized queries are used
    Code: def test_check_for_updates_no_updates(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 62
    SQL query detected - ensure parameterized queries are used
    Code: """Test checking for updates when none are available"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 73
    SQL query detected - ensure parameterized queries are used
    Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 74
    SQL query detected - ensure parameterized queries are used
    Code: update_available, current, latest = update_manager.check_for_updates()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 76
    SQL query detected - ensure parameterized queries are used
    Code: self.assertFalse(update_available)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 81
    SQL query detected - ensure parameterized queries are used
    Code: def test_check_for_updates_available(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 82
    SQL query detected - ensure parameterized queries are used
    Code: """Test checking for updates when updates are available"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 93
    SQL query detected - ensure parameterized queries are used
    Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 94
    SQL query detected - ensure parameterized queries are used
    Code: update_available, current, latest = update_manager.check_for_updates()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 96
    SQL query detected - ensure parameterized queries are used
    Code: self.assertTrue(update_available)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 105
    SQL query detected - ensure parameterized queries are used
    Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 115
    SQL query detected - ensure parameterized queries are used
    Code: backup_dir = update_manager.backup_current_version()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 123
    SQL query detected - ensure parameterized queries are used
    Code: update_manager.restore_backup(backup_dir)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 126
    SQL query detected - ensure parameterized queries are used
    Code: def test_apply_update_success(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 127
    SQL query detected - ensure parameterized queries are used
    Code: """Test successful update application"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 131
    SQL query detected - ensure parameterized queries are used
    Code: mock.Mock(stdout="Updated files", stderr="", returncode=0),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 136
    SQL query detected - ensure parameterized queries are used
    Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 140
    SQL query detected - ensure parameterized queries are used
    Code: UpdateManager, 'backup_current_version',
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 143
    SQL query detected - ensure parameterized queries are used
    Code: # Create requirements.txt for testing dependency updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 147
    SQL query detected - ensure parameterized queries are used
    Code: result = update_manager.apply_update()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 151
    SQL query detected - ensure parameterized queries are used
    Code: def test_apply_update_failure(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 152
    SQL query detected - ensure parameterized queries are used
    Code: """Test failed update application"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 159
    SQL query detected - ensure parameterized queries are used
    Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 163
    SQL query detected - ensure parameterized queries are used
    Code: UpdateManager, 'backup_current_version',
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 166
    SQL query detected - ensure parameterized queries are used
    Code: with mock.patch.object(UpdateManager, 'restore_backup') as mock_restore:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 167
    SQL query detected - ensure parameterized queries are used
    Code: result = update_manager.apply_update()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 172
    SQL query detected - ensure parameterized queries are used
    Code: def test_should_check_for_updates(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 173
    SQL query detected - ensure parameterized queries are used
    Code: """Test the logic for determining if updates should be checked"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 174
    SQL query detected - ensure parameterized queries are used
    Code: # Force update should always return True
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 175
    SQL query detected - ensure parameterized queries are used
    Code: config = {"force_update": True, "check_interval_hours": 24}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 176
    SQL query detected - ensure parameterized queries are used
    Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 177
    SQL query detected - ensure parameterized queries are used
    Code: self.assertTrue(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 180
    SQL query detected - ensure parameterized queries are used
    Code: config = {"force_update": False, "check_interval_hours": 24}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 181
    SQL query detected - ensure parameterized queries are used
    Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 182
    SQL query detected - ensure parameterized queries are used
    Code: self.assertTrue(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 185
    SQL query detected - ensure parameterized queries are used
    Code: update_manager.update_check_cache()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 186
    SQL query detected - ensure parameterized queries are used
    Code: self.assertFalse(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 189
    SQL query detected - ensure parameterized queries are used
    Code: config = {"force_update": False, "check_interval_hours": 0}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 190
    SQL query detected - ensure parameterized queries are used
    Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 191
    SQL query detected - ensure parameterized queries are used
    Code: update_manager.update_check_cache()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 192
    SQL query detected - ensure parameterized queries are used
    Code: self.assertTrue(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\benchmarks\test_emotional_benchmarks.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 131
    SQL query detected - ensure parameterized queries are used
    Code: # Test state updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 146
    SQL query detected - ensure parameterized queries are used
    Code: operation="update_state",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 149
    SQL query detected - ensure parameterized queries are used
    Code: async def update_state():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 150
    SQL query detected - ensure parameterized queries are used
    Code: await emotional_core.update_emotional_state(test_input)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 152
    SQL query detected - ensure parameterized queries are used
    Code: update_result = await update_state()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 153
    SQL query detected - ensure parameterized queries are used
    Code: assert update_result.mean_time < 0.02, "State update too slow"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 195
    SQL query detected - ensure parameterized queries are used
    Code: emotional_core.update_emotional_state({
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\brain\test_proactive_dialogue.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 99
    SQL query detected - ensure parameterized queries are used
    Code: # Verify emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 100
    SQL query detected - ensure parameterized queries are used
    Code: brain.emotional_processor.update_emotional_state.assert_called()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 181
    SQL query detected - ensure parameterized queries are used
    Code: # Should update emotional state and respond empathetically
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 182
    SQL query detected - ensure parameterized queries are used
    Code: brain.emotional_processor.update_emotional_state.assert_called()
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\cognitive\multimodal\test_brain_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 15
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 200
    SQL query detected - ensure parameterized queries are used
    Code: async def test_brain_context_update(multimodal_integration, mock_brain, temp_image):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 209
    SQL query detected - ensure parameterized queries are used
    Code: # Check that brain context was updated
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\cognitive\multimodal\test_multimodal_processor.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 15
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\cognitive\retrieval\test_brain_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 15
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\cognitive\retrieval\test_hybrid_retrieval.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 15
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\cognitive\test_learning_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 118
    SQL query detected - ensure parameterized queries are used
    Code: await event_bus.subscribe(EventType.ADAPTATION_UPDATED, collect_events)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 128
    SQL query detected - ensure parameterized queries are used
    Code: assert any(e.type == EventType.ADAPTATION_UPDATED for e in events)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 131
    SQL query detected - ensure parameterized queries are used
    Code: adaptation_event = next(e for e in events if e.type == EventType.ADAPTATION_UPDATED)
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\cognitive\test_proactive_cognition.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 155
    SQL query detected - ensure parameterized queries are used
    Code: # Verify emotional trajectory was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 191
    SQL query detected - ensure parameterized queries are used
    Code: # Verify topic was updated and depth reset
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 281
    SQL query detected - ensure parameterized queries are used
    Code: def test_update_configuration(self, proactive_engine, mock_config_manager):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 290
    SQL query detected - ensure parameterized queries are used
    Code: # Update configuration
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 291
    SQL query detected - ensure parameterized queries are used
    Code: proactive_engine.update_configuration(new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 293
    SQL query detected - ensure parameterized queries are used
    Code: # Verify configuration was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 298
    SQL query detected - ensure parameterized queries are used
    Code: # Verify config manager was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 299
    SQL query detected - ensure parameterized queries are used
    Code: mock_config_manager.update_config.assert_called_once_with("cognitive", new_config)
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\collective\test_improvement_engine.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 51
    SQL query detected - ensure parameterized queries are used
    Code: manager.update_improvement_status = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 296
    SQL query detected - ensure parameterized queries are used
    Code: data_manager.update_improvement_status.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 312
    SQL query detected - ensure parameterized queries are used
    Code: data_manager.update_improvement_status.assert_not_called()
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\components\emotional_intelligence\test_emotion_recognition.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 11
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\conftest.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 16
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\core\test_brain_extensions.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 15
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\core\test_code_healing.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 44
    SQL query detected - ensure parameterized queries are used
    Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 167
    SQL query detected - ensure parameterized queries are used
    Code: mock_repo.return_value.delete_head.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 212
    SQL query detected - ensure parameterized queries are used
    Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 234
    SQL query detected - ensure parameterized queries are used
    Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 247
    SQL query detected - ensure parameterized queries are used
    Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\core\test_event_bus.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 27
    SQL query detected - ensure parameterized queries are used
    Code: Event(EventType.SYSTEM, {"status": "System update"}, priority=2),
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\core\test_service_mesh_advanced.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 87
    SQL query detected - ensure parameterized queries are used
    Code: """Test advanced health check metrics and updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 108
    SQL query detected - ensure parameterized queries are used
    Code: # Verify health metrics were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 173
    SQL query detected - ensure parameterized queries are used
    Code: service_mesh._service_dependencies.update({
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\core\test_service_mesh_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 62
    SQL query detected - ensure parameterized queries are used
    Code: if event.data.get("action") == "health_update":
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 86
    SQL query detected - ensure parameterized queries are used
    Code: assert event.data["action"] == "health_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 105
    SQL query detected - ensure parameterized queries are used
    Code: if event.data.get("action") == "dependency_update":
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 131
    SQL query detected - ensure parameterized queries are used
    Code: # Mock health checks to update dependencies
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\core\test_service_registry.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 131
    SQL query detected - ensure parameterized queries are used
    Code: async def test_service_updates_subscription(registry):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 132
    SQL query detected - ensure parameterized queries are used
    Code: """Test service update notifications"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 141
    SQL query detected - ensure parameterized queries are used
    Code: # Subscribe to updates
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\e2e\test_gesture_interface.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 87
    SQL query detected - ensure parameterized queries are used
    Code: # Wait for the feedback to update
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\e2e\test_ui_e2e.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 23
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 247
    SQL query detected - ensure parameterized queries are used
    Code: # Wait for sentiment score to update
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\emotional_intelligence\test_adaptive_processor_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 79
    SQL query detected - ensure parameterized queries are used
    Code: type=EventType.EMOTIONAL_STATE_UPDATE,
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 150
    SQL query detected - ensure parameterized queries are used
    Code: events = event_bus.get_recent_events(EventType.EMOTIONAL_STATE_UPDATE)
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\emotional_intelligence\test_emotional_core.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 74
    SQL query detected - ensure parameterized queries are used
    Code: # Verify personality traits were updated
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\emotional_intelligence\test_emotional_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 117
    SQL query detected - ensure parameterized queries are used
    Code: # Simulate an emotional state update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 121
    SQL query detected - ensure parameterized queries are used
    Code: "action": "state_update",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 133
    SQL query detected - ensure parameterized queries are used
    Code: # Verify emotional processor was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 134
    SQL query detected - ensure parameterized queries are used
    Code: assert emotional_integration.emotional_processor.update_emotional_state.called
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\emotional_intelligence\test_emotional_memory.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 5
    SQL query detected - ensure parameterized queries are used
    Code: interaction storage, relationship updates, value system storage, and event handling.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 92
    SQL query detected - ensure parameterized queries are used
    Code: # Verify that the state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 137
    SQL query detected - ensure parameterized queries are used
    Code: # Verify that the state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 142
    SQL query detected - ensure parameterized queries are used
    Code: async def test_update_relationship(self, emotional_memory, event_bus, memory_service):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 147
    SQL query detected - ensure parameterized queries are used
    Code: # Update relationship
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 148
    SQL query detected - ensure parameterized queries are used
    Code: await emotional_memory.update_relationship(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 154
    SQL query detected - ensure parameterized queries are used
    Code: memory_service.update_relationship_metrics.assert_called_once_with(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 161
    SQL query detected - ensure parameterized queries are used
    Code: assert event_bus.emit.call_count == 2  # First for init, second for update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 163
    SQL query detected - ensure parameterized queries are used
    Code: assert args[0] == "emotional.memory.relationship_updated"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 188
    SQL query detected - ensure parameterized queries are used
    Code: assert args[0] == "emotional.memory.value_updated"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 192
    SQL query detected - ensure parameterized queries are used
    Code: # Verify that the value was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 383
    SQL query detected - ensure parameterized queries are used
    Code: # Verify that the state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 393
    SQL query detected - ensure parameterized queries are used
    Code: # Test emotional update handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 407
    SQL query detected - ensure parameterized queries are used
    Code: await emotional_memory._handle_emotional_update(event_data)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 425
    SQL query detected - ensure parameterized queries are used
    Code: memory_service.update_relationship_metrics.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 427
    SQL query detected - ensure parameterized queries are used
    Code: # Test value update handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 437
    SQL query detected - ensure parameterized queries are used
    Code: await emotional_memory._handle_value_update(event_data)
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\emotional_intelligence\test_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 15
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 404
    SQL query detected - ensure parameterized queries are used
    Code: # Test update_emotional_memory event handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 405
    SQL query detected - ensure parameterized queries are used
    Code: result = await emotional_integration._handle_update_emotional_memory({
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\emotional_intelligence\test_proactive_dialogue.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 147
    SQL query detected - ensure parameterized queries are used
    Code: # Verify memory update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 198
    SQL query detected - ensure parameterized queries are used
    Code: # Verify interaction timing updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 201
    SQL query detected - ensure parameterized queries are used
    Code: # Verify memory and learning updates
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\ethical\test_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 15
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 80
    SQL query detected - ensure parameterized queries are used
    Code: def update_principle_weight(self, principle, weight):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 81
    SQL query detected - ensure parameterized queries are used
    Code: """Update principle weight"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 204
    SQL query detected - ensure parameterized queries are used
    Code: async def test_update_ethical_principle(ethical_integration, mock_ethical_framework):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 206
    SQL query detected - ensure parameterized queries are used
    Code: # Test valid update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 207
    SQL query detected - ensure parameterized queries are used
    Code: result = await ethical_integration.update_ethical_principle(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 219
    SQL query detected - ensure parameterized queries are used
    Code: result = await ethical_integration.update_ethical_principle(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 229
    SQL query detected - ensure parameterized queries are used
    Code: with patch.object(mock_ethical_framework, 'update_principle_weight', side_effect=ValueError("Unknown principle")):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 230
    SQL query detected - ensure parameterized queries are used
    Code: result = await ethical_integration.update_ethical_principle(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 278
    SQL query detected - ensure parameterized queries are used
    Code: # Test update_ethical_principle event handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 279
    SQL query detected - ensure parameterized queries are used
    Code: result = await ethical_integration._handle_update_ethical_principle({
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\gesture\test_gesture_e2e.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 18
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\gesture\test_gesture_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 15
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\gesture\test_gesture_unit.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 16
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 193
    SQL query detected - ensure parameterized queries are used
    Code: def test_delete_preset(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 199
    SQL query detected - ensure parameterized queries are used
    Code: # Delete the preset
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 200
    SQL query detected - ensure parameterized queries are used
    Code: self.preset_manager.delete_preset(test_preset["name"])
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 202
    SQL query detected - ensure parameterized queries are used
    Code: # Verify the preset was deleted
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\integration\test_brain_emotional_memory.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 37
    SQL query detected - ensure parameterized queries are used
    Code: temp_db = tempfile.NamedTemporaryFile(delete=False, suffix='.db')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 101
    SQL query detected - ensure parameterized queries are used
    Code: async def test_emotional_state_update_from_llm_response(self, brain, event_bus):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 102
    SQL query detected - ensure parameterized queries are used
    Code: """Test that emotional state is updated from LLM responses."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 125
    SQL query detected - ensure parameterized queries are used
    Code: # Verify that the emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 157
    SQL query detected - ensure parameterized queries are used
    Code: async def test_relationship_update_after_interaction(self, brain):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 158
    SQL query detected - ensure parameterized queries are used
    Code: """Test that relationship metrics are updated after interactions."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 162
    SQL query detected - ensure parameterized queries are used
    Code: # Mock the emotional processor and update_relationship
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 170
    SQL query detected - ensure parameterized queries are used
    Code: }), patch.object(brain.emotional_memory, 'update_relationship', AsyncMock()) as mock_update:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 175
    SQL query detected - ensure parameterized queries are used
    Code: # Verify that update_relationship was called with positive deltas
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 176
    SQL query detected - ensure parameterized queries are used
    Code: mock_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 177
    SQL query detected - ensure parameterized queries are used
    Code: args, kwargs = mock_update.call_args
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 213
    SQL query detected - ensure parameterized queries are used
    Code: # Emit a value update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 214
    SQL query detected - ensure parameterized queries are used
    Code: await brain.event_bus.emit("value.update", {
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 303
    SQL query detected - ensure parameterized queries are used
    Code: # Mock update_relationship
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 304
    SQL query detected - ensure parameterized queries are used
    Code: with patch.object(brain.emotional_memory, 'update_relationship', AsyncMock()) as mock_update:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 308
    SQL query detected - ensure parameterized queries are used
    Code: # Verify that update_relationship was called to save final state
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 309
    SQL query detected - ensure parameterized queries are used
    Code: mock_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\integration\test_brain_emotional_memory_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 17
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 127
    SQL query detected - ensure parameterized queries are used
    Code: self.assertIn("emotional.update", self.event_bus._subscribers)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 145
    SQL query detected - ensure parameterized queries are used
    Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 154
    SQL query detected - ensure parameterized queries are used
    Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 180
    SQL query detected - ensure parameterized queries are used
    Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 191
    SQL query detected - ensure parameterized queries are used
    Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 218
    SQL query detected - ensure parameterized queries are used
    Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 234
    SQL query detected - ensure parameterized queries are used
    Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 255
    SQL query detected - ensure parameterized queries are used
    Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 288
    SQL query detected - ensure parameterized queries are used
    Code: self.brain.emotional_memory._handle_emotional_update = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 290
    SQL query detected - ensure parameterized queries are used
    Code: # Emit an emotional update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 291
    SQL query detected - ensure parameterized queries are used
    Code: await self.event_bus.emit("emotional.update", {"emotion": "joy", "value": 0.8})
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 294
    SQL query detected - ensure parameterized queries are used
    Code: self.brain.emotional_memory._handle_emotional_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 304
    SQL query detected - ensure parameterized queries are used
    Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 314
    SQL query detected - ensure parameterized queries are used
    Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\integration\test_brain_emotional_processor.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 16
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 144
    SQL query detected - ensure parameterized queries are used
    Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\integration\test_brain_ethical_framework.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 16
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 119
    SQL query detected - ensure parameterized queries are used
    Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 153
    SQL query detected - ensure parameterized queries are used
    Code: self.assertIn("emotional.update", self.event_bus._subscribers)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 265
    SQL query detected - ensure parameterized queries are used
    Code: # Emit an emotional update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 266
    SQL query detected - ensure parameterized queries are used
    Code: await self.event_bus.emit("emotional.update", {"emotion": "anger", "value": 0.8})
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 351
    SQL query detected - ensure parameterized queries are used
    Code: async def update_value_system():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 355
    SQL query detected - ensure parameterized queries are used
    Code: self.brain.ethical_framework.update_value_system = AsyncMock(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 356
    SQL query detected - ensure parameterized queries are used
    Code: side_effect=update_value_system
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 359
    SQL query detected - ensure parameterized queries are used
    Code: # Update value system
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 360
    SQL query detected - ensure parameterized queries are used
    Code: await self.brain.ethical_framework.update_value_system()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 362
    SQL query detected - ensure parameterized queries are used
    Code: # Verify that value system was updated
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\integration\test_brain_multimodal_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 20
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\integration\test_extended_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 18
    SQL query detected - ensure parameterized queries are used
    Code: """Test that a service is auto-deregistered if not updated within the threshold
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 19
    SQL query detected - ensure parameterized queries are used
    Code: and validate that the DatabaseManager can insert and fetch interactions."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 24
    SQL query detected - ensure parameterized queries are used
    Code: # Simulate that the service's last update occurred sufficiently in the past
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 39
    SQL query detected - ensure parameterized queries are used
    Code: # Insert an interaction record
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 41
    SQL query detected - ensure parameterized queries are used
    Code: db.insert_interaction(test_data)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 48
    SQL query detected - ensure parameterized queries are used
    Code: assert record_found, "The inserted interaction data should be found in the database"
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\integration\test_service_auto_deregistration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 16
    SQL query detected - ensure parameterized queries are used
    Code: """Test that a service is auto-deregistered if no health update occurs within the threshold."""
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\learning\test_self_improvement.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 212
    SQL query detected - ensure parameterized queries are used
    Code: EventType.SYSTEM_IMPROVEMENT_UPDATE,
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 228
    SQL query detected - ensure parameterized queries are used
    Code: assert all(e.type == EventType.SYSTEM_IMPROVEMENT_UPDATE for e in events_received)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 232
    SQL query detected - ensure parameterized queries are used
    Code: async def test_analyze_and_update_error_patterns(improvement_system):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 233
    SQL query detected - ensure parameterized queries are used
    Code: """Test error pattern analysis and strategy updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 246
    SQL query detected - ensure parameterized queries are used
    Code: await improvement_system._analyze_and_update_error_patterns()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 250
    SQL query detected - ensure parameterized queries are used
    Code: improvement_system.error_tracker.update_recovery_strategy.assert_called_once_with(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 261
    SQL query detected - ensure parameterized queries are used
    Code: async def test_analyze_and_update_emotional_patterns(improvement_system):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 262
    SQL query detected - ensure parameterized queries are used
    Code: """Test emotional pattern analysis and parameter updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 275
    SQL query detected - ensure parameterized queries are used
    Code: await improvement_system._analyze_and_update_emotional_patterns()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 279
    SQL query detected - ensure parameterized queries are used
    Code: improvement_system.emotional_core.update_response_parameters.assert_called_once_with(
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\llm_client\test_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 15
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\llm_client\test_local_provider.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 16
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\llm_client\test_lora_manager.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 161
    SQL query detected - ensure parameterized queries are used
    Code: async def test_delete_adapter(lora_manager):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 165
    SQL query detected - ensure parameterized queries are used
    Code: name="adapter_to_delete",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 166
    SQL query detected - ensure parameterized queries are used
    Code: description="Adapter to delete",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 171
    SQL query detected - ensure parameterized queries are used
    Code: adapter_path = os.path.join(lora_manager.lora_dir, "adapter_to_delete")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 174
    SQL query detected - ensure parameterized queries are used
    Code: # Delete the adapter
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 175
    SQL query detected - ensure parameterized queries are used
    Code: result = await lora_manager.delete_adapter("adapter_to_delete")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 177
    SQL query detected - ensure parameterized queries are used
    Code: # Check that the delete was successful
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 286
    SQL query detected - ensure parameterized queries are used
    Code: # Try to delete a non-existent adapter
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 288
    SQL query detected - ensure parameterized queries are used
    Code: await lora_manager.delete_adapter("non_existent_adapter")
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\mocks.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 33
    SQL query detected - ensure parameterized queries are used
    Code: emotions.update(self.emotion_detector.detect_text_emotion(text))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 35
    SQL query detected - ensure parameterized queries are used
    Code: emotions.update(self.emotion_detector.detect_audio_emotion(audio_data))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 37
    SQL query detected - ensure parameterized queries are used
    Code: emotions.update(self.emotion_detector.detect_facial_emotion(image_data))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 49
    SQL query detected - ensure parameterized queries are used
    Code: self.personality_model.update(interaction)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 68
    SQL query detected - ensure parameterized queries are used
    Code: def update(self, interaction):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 69
    SQL query detected - ensure parameterized queries are used
    Code: """Update personality state"""
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\mocks\redis_mock.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 29
    SQL query detected - ensure parameterized queries are used
    Code: def delete(self, key):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 30
    SQL query detected - ensure parameterized queries are used
    Code: """Delete a key"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 40
    SQL query detected - ensure parameterized queries are used
    Code: self.sets[key].update(values)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 50
    SQL query detected - ensure parameterized queries are used
    Code: self.sorted_sets[key].update(mapping)
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\multimodal\test_fusion.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 24
    SQL query detected - ensure parameterized queries are used
    Code: with tempfile.NamedTemporaryFile(suffix='.jpg', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\multimodal\test_multimodal_fusion.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 20
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\run_integration_tests.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 20
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, project_root)
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\scripts\test_collective_scripts.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 14
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(Path(__file__).parent.parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\services\test_service_communicator.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 74
    SQL query detected - ensure parameterized queries are used
    Code: """Test service heartbeat updates"""
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_advanced_features.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 58
    SQL query detected - ensure parameterized queries are used
    Code: # Update skill levels
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 59
    SQL query detected - ensure parameterized queries are used
    Code: curriculum_manager.update_skill_levels(task, True, 0.9)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 93
    SQL query detected - ensure parameterized queries are used
    Code: # Update performance and select again
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 94
    SQL query detected - ensure parameterized queries are used
    Code: meta_learner.update_strategy_performance(0.8)
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_advanced_reliability.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 209
    SQL query detected - ensure parameterized queries are used
    Code: # Verify system state updated
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_brain.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 15
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 363
    SQL query detected - ensure parameterized queries are used
    Code: valid_command_json = '{"command": "delete_file", "args": "protected.txt"}'
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 369
    SQL query detected - ensure parameterized queries are used
    Code: failure_message = "Failed to delete file: Permission denied"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 377
    SQL query detected - ensure parameterized queries are used
    Code: final_response = brain.process_command("delete the protected file")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 381
    SQL query detected - ensure parameterized queries are used
    Code: mock_cmd_processor.execute_command.assert_called_once_with("delete_file", "protected.txt")
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_brain_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 13
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_brain_integration_new.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 46
    SQL query detected - ensure parameterized queries are used
    Code: # Verify working memory was updated
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_command_processor.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 9
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 43
    SQL query detected - ensure parameterized queries are used
    Code: def test_handle_delete_file(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 44
    SQL query detected - ensure parameterized queries are used
    Code: """Test the internal _handle_delete_file method."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 45
    SQL query detected - ensure parameterized queries are used
    Code: test_file = self.test_dir / "file_to_delete.txt"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 46
    SQL query detected - ensure parameterized queries are used
    Code: test_file.touch() # Create the file to be deleted
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 50
    SQL query detected - ensure parameterized queries are used
    Code: result = self.cmd_processor._handle_delete_file(str(test_file))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 52
    SQL query detected - ensure parameterized queries are used
    Code: self.assertIn("Deleted file", result)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 53
    SQL query detected - ensure parameterized queries are used
    Code: self.assertFalse(test_file.exists(), "_handle_delete_file did not delete the file.")
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_commands.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 8
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 95
    SQL query detected - ensure parameterized queries are used
    Code: def test_05_delete_file_command_success(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 96
    SQL query detected - ensure parameterized queries are used
    Code: """Test the 'delete file' command handler for successful deletion."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 97
    SQL query detected - ensure parameterized queries are used
    Code: filename = "file_to_delete.txt"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 98
    SQL query detected - ensure parameterized queries are used
    Code: command = f"delete file {filename}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 109
    SQL query detected - ensure parameterized queries are used
    Code: self.assertEqual(result, f"Deleted file: {expected_path}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 113
    SQL query detected - ensure parameterized queries are used
    Code: def test_06_delete_file_not_found(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 114
    SQL query detected - ensure parameterized queries are used
    Code: """Test the 'delete file' command when the file does not exist."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 116
    SQL query detected - ensure parameterized queries are used
    Code: command = f"delete file {filename}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 133
    SQL query detected - ensure parameterized queries are used
    Code: def test_07_delete_file_protected_path_failure(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 137
    SQL query detected - ensure parameterized queries are used
    Code: command = f"delete file {protected_path}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 152
    SQL query detected - ensure parameterized queries are used
    Code: def test_08_delete_file_decorator_error_handling(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 163
    SQL query detected - ensure parameterized queries are used
    Code: command = f"delete file {filename}"
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_coordinator.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 20
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 230
    SQL query detected - ensure parameterized queries are used
    Code: # Update summary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 315
    SQL query detected - ensure parameterized queries are used
    Code: # Update summary
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_database.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 31
    SQL query detected - ensure parameterized queries are used
    Code: def test_update_and_get_relationship_data(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 38
    SQL query detected - ensure parameterized queries are used
    Code: self.db_manager.update_relationship_data(user_id, relationship_type, trust_level, rapport_level)
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_emotional_intelligence.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 59
    SQL query detected - ensure parameterized queries are used
    Code: def test_update_relationship_metrics(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 63
    SQL query detected - ensure parameterized queries are used
    Code: # Initial update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 64
    SQL query detected - ensure parameterized queries are used
    Code: self.memory.update_relationship_metrics(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 189
    SQL query detected - ensure parameterized queries are used
    Code: action = "delete_user_data"
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_emotional_memory.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 18
    SQL query detected - ensure parameterized queries are used
    Code: async def test_01_emotional_state_update(self, event_bus):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 23
    SQL query detected - ensure parameterized queries are used
    Code: # Update with positive emotion
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 24
    SQL query detected - ensure parameterized queries are used
    Code: item_id = await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 40
    SQL query detected - ensure parameterized queries are used
    Code: # Update with negative emotion
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 41
    SQL query detected - ensure parameterized queries are used
    Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 71
    SQL query detected - ensure parameterized queries are used
    Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 110
    SQL query detected - ensure parameterized queries are used
    Code: await memory.update_relationship_context(entity_id, context)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 118
    SQL query detected - ensure parameterized queries are used
    Code: # Update context
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 119
    SQL query detected - ensure parameterized queries are used
    Code: update = {
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 124
    SQL query detected - ensure parameterized queries are used
    Code: await memory.update_relationship_context(entity_id, update)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 126
    SQL query detected - ensure parameterized queries are used
    Code: # Check updated context
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 127
    SQL query detected - ensure parameterized queries are used
    Code: updated_context = await memory.get_relationship_context(entity_id)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 128
    SQL query detected - ensure parameterized queries are used
    Code: assert updated_context["trust_level"] == 0.9
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 129
    SQL query detected - ensure parameterized queries are used
    Code: assert len(updated_context["shared_experiences"]) == 3
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 157
    SQL query detected - ensure parameterized queries are used
    Code: # Check emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 187
    SQL query detected - ensure parameterized queries are used
    Code: # Check emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 210
    SQL query detected - ensure parameterized queries are used
    Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 221
    SQL query detected - ensure parameterized queries are used
    Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 240
    SQL query detected - ensure parameterized queries are used
    Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 248
    SQL query detected - ensure parameterized queries are used
    Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_emotional_performance.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 152
    SQL query detected - ensure parameterized queries are used
    Code: def test_personality_state_updates(self, emotional_service):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 153
    SQL query detected - ensure parameterized queries are used
    Code: """Test personality state updates and persistence"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 165
    SQL query detected - ensure parameterized queries are used
    Code: assert final_state != initial_state  # State should update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 167
    SQL query detected - ensure parameterized queries are used
    Code: logger.info("Personality state updates validated")
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_emotional_processor.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 73
    SQL query detected - ensure parameterized queries are used
    Code: async def test_04_empathy_model_updates(self, processor):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 78
    SQL query detected - ensure parameterized queries are used
    Code: await processor.update_empathy_model({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 88
    SQL query detected - ensure parameterized queries are used
    Code: await processor.update_empathy_model({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 112
    SQL query detected - ensure parameterized queries are used
    Code: # Verify emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_error_edge_cases.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 13
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_error_handling.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 14
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_error_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 12
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_ethical_framework.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 130
    SQL query detected - ensure parameterized queries are used
    Code: # Check priorities were updated
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_ethical_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 38
    SQL query detected - ensure parameterized queries are used
    Code: self.temp_config = tempfile.NamedTemporaryFile(delete=False, suffix='.json')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 47
    SQL query detected - ensure parameterized queries are used
    Code: self.temp_db = tempfile.NamedTemporaryFile(delete=False, suffix='.db')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 130
    SQL query detected - ensure parameterized queries are used
    Code: with tempfile.NamedTemporaryFile(delete=False, suffix='.json') as temp_file:
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_ethics.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 29
    SQL query detected - ensure parameterized queries are used
    Code: self.temp_db = tempfile.NamedTemporaryFile(delete=False, suffix='.db')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 170
    SQL query detected - ensure parameterized queries are used
    Code: "delete user data without confirmation",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 231
    SQL query detected - ensure parameterized queries are used
    Code: with tempfile.NamedTemporaryFile(delete=False, suffix='.json') as temp_file:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 244
    SQL query detected - ensure parameterized queries are used
    Code: with tempfile.NamedTemporaryFile(delete=False, suffix='.json') as temp_file:
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_event_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 105
    SQL query detected - ensure parameterized queries are used
    Code: # Verify emotional state update
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_full_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 58
    SQL query detected - ensure parameterized queries are used
    Code: assert result['memory_updates']
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 195
    SQL query detected - ensure parameterized queries are used
    Code: # Get updated metrics
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 199
    SQL query detected - ensure parameterized queries are used
    Code: # Verify metrics were updated
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_health_curiosity.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 19
    SQL query detected - ensure parameterized queries are used
    Code: """HealthMonitor should emit a *healthy* status update when the endpoint responds 200."""
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_lifecycle.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 16
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_memory_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 198
    SQL query detected - ensure parameterized queries are used
    Code: updated_items = await working_memory.get_active_items()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 199
    SQL query detected - ensure parameterized queries are used
    Code: assert len(updated_items) <= len(items)  # Should have decayed
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 202
    SQL query detected - ensure parameterized queries are used
    Code: for old, new in zip(items, updated_items):
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_memory_store.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 37
    SQL query detected - ensure parameterized queries are used
    Code: last_updated: float
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 92
    SQL query detected - ensure parameterized queries are used
    Code: last_updated=time.time(),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 149
    SQL query detected - ensure parameterized queries are used
    Code: last_updated=time.time(),
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_performance.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 16
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_system_reliability.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 122
    SQL query detected - ensure parameterized queries are used
    Code: await brain.emotional_processor.update_emotional_state({
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\ui\test_gesture_arpeggiator.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 97
    SQL query detected - ensure parameterized queries are used
    Code: mock_event_bus.subscribe.assert_any_call("config.updated", arpeggiator._handle_config_updated)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 202
    SQL query detected - ensure parameterized queries are used
    Code: async def test_handle_config_updated(self, arpeggiator):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 203
    SQL query detected - ensure parameterized queries are used
    Code: """Test handling configuration update events"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 204
    SQL query detected - ensure parameterized queries are used
    Code: # Replace update_configuration with a mock
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 205
    SQL query detected - ensure parameterized queries are used
    Code: arpeggiator.update_configuration = MagicMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 209
    SQL query detected - ensure parameterized queries are used
    Code: event_type="config.updated",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 217
    SQL query detected - ensure parameterized queries are used
    Code: await arpeggiator._handle_config_updated(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 219
    SQL query detected - ensure parameterized queries are used
    Code: # Verify update_configuration was called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 220
    SQL query detected - ensure parameterized queries are used
    Code: arpeggiator.update_configuration.assert_called_once_with({"sensitivity": 0.7})
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 224
    SQL query detected - ensure parameterized queries are used
    Code: event_type="config.updated",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 232
    SQL query detected - ensure parameterized queries are used
    Code: arpeggiator.update_configuration.reset_mock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 235
    SQL query detected - ensure parameterized queries are used
    Code: await arpeggiator._handle_config_updated(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 237
    SQL query detected - ensure parameterized queries are used
    Code: # Verify update_configuration was not called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 238
    SQL query detected - ensure parameterized queries are used
    Code: assert not arpeggiator.update_configuration.called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 323
    SQL query detected - ensure parameterized queries are used
    Code: def test_update_configuration(self, arpeggiator, mock_config_manager):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 335
    SQL query detected - ensure parameterized queries are used
    Code: # Update configuration
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 336
    SQL query detected - ensure parameterized queries are used
    Code: arpeggiator.update_configuration(new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 338
    SQL query detected - ensure parameterized queries are used
    Code: # Verify configuration was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 344
    SQL query detected - ensure parameterized queries are used
    Code: # Verify config manager was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 345
    SQL query detected - ensure parameterized queries are used
    Code: mock_config_manager.update_config.assert_called_once_with("gesture_arpeggiator", new_config)
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\ui\test_gesture_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 49
    SQL query detected - ensure parameterized queries are used
    Code: event_bus.subscribe.assert_any_call("ui.context_changed", gesture_integration.update_ui_context)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 50
    SQL query detected - ensure parameterized queries are used
    Code: event_bus.subscribe.assert_any_call("config.updated.gesture_integration", gesture_integration.update_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 211
    SQL query detected - ensure parameterized queries are used
    Code: def test_update_ui_context(self, gesture_integration):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 212
    SQL query detected - ensure parameterized queries are used
    Code: """Test UI context updates."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 218
    SQL query detected - ensure parameterized queries are used
    Code: gesture_integration.update_ui_context(context_event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 222
    SQL query detected - ensure parameterized queries are used
    Code: def test_update_config(self, gesture_integration):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 223
    SQL query detected - ensure parameterized queries are used
    Code: """Test configuration updates."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 235
    SQL query detected - ensure parameterized queries are used
    Code: gesture_integration.update_config(new_config)
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\ui\test_proactive_ui.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 71
    SQL query detected - ensure parameterized queries are used
    Code: @patch('alejo.ui.pyside_ui.HolographicWidget.update')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 72
    SQL query detected - ensure parameterized queries are used
    Code: def test_event_handler(self, mock_update):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 94
    SQL query detected - ensure parameterized queries are used
    Code: mock_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\ui\test_ui_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 14
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 283
    SQL query detected - ensure parameterized queries are used
    Code: # Check that config was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 288
    SQL query detected - ensure parameterized queries are used
    Code: # Check that brain.update_config was called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 289
    SQL query detected - ensure parameterized queries are used
    Code: mock_brain.update_config.assert_called_once_with(alejo_ui.config)
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\unit\interaction\gesture_arpeggiator\test_emotional_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 28
    SQL query detected - ensure parameterized queries are used
    Code: service.update_arpeggiator_settings = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 29
    SQL query detected - ensure parameterized queries are used
    Code: service.update_visualizer_settings = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 89
    SQL query detected - ensure parameterized queries are used
    Code: # Verify arpeggiator settings were updated with Joy parameters
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 91
    SQL query detected - ensure parameterized queries are used
    Code: mock_arpeggiator_service.update_arpeggiator_settings.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 92
    SQL query detected - ensure parameterized queries are used
    Code: args = mock_arpeggiator_service.update_arpeggiator_settings.call_args[0][0]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 98
    SQL query detected - ensure parameterized queries are used
    Code: # Verify visualizer settings were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 99
    SQL query detected - ensure parameterized queries are used
    Code: mock_arpeggiator_service.update_visualizer_settings.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 100
    SQL query detected - ensure parameterized queries are used
    Code: vis_args = mock_arpeggiator_service.update_visualizer_settings.call_args[0][0]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 181
    SQL query detected - ensure parameterized queries are used
    Code: mock_arpeggiator_service.update_arpeggiator_settings.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 182
    SQL query detected - ensure parameterized queries are used
    Code: args = mock_arpeggiator_service.update_arpeggiator_settings.call_args[0][0]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 187
    SQL query detected - ensure parameterized queries are used
    Code: mock_arpeggiator_service.update_arpeggiator_settings.reset_mock()
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\unit\testing\test_browser_compatibility.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 14
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(Path(__file__).parent.parent.parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 243
    SQL query detected - ensure parameterized queries are used
    Code: "page_title": "Test Page Updated",
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\unit\testing\test_browser_detector.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 12
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(Path(__file__).parent.parent.parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\utils\test_memory_optimization.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 14
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 112
    SQL query detected - ensure parameterized queries are used
    Code: # Check that last_used was updated
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\websockets\test_gesture_socket.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 103
    SQL query detected - ensure parameterized queries are used
    Code: assert sent_data["type"] == "config_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 221
    SQL query detected - ensure parameterized queries are used
    Code: async def test_handle_ui_update(websocket_handler, mock_websocket):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 222
    SQL query detected - ensure parameterized queries are used
    Code: """Test handling of UI update events"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 227
    SQL query detected - ensure parameterized queries are used
    Code: "update": {
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 233
    SQL query detected - ensure parameterized queries are used
    Code: await websocket_handler._handle_ui_update(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 238
    SQL query detected - ensure parameterized queries are used
    Code: assert sent_data["type"] == "ui_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 239
    SQL query detected - ensure parameterized queries are used
    Code: assert sent_data["update"] == event["update"]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 243
    SQL query detected - ensure parameterized queries are used
    Code: async def test_handle_config_update(websocket_handler, mock_websocket):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 244
    SQL query detected - ensure parameterized queries are used
    Code: """Test handling of configuration update events"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 255
    SQL query detected - ensure parameterized queries are used
    Code: await websocket_handler._handle_config_update(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 260
    SQL query detected - ensure parameterized queries are used
    Code: assert sent_data["type"] == "config_update"
    Remediation: Use parameterized queries with placeholders for all user input


File: update_manager.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 3
    SQL query detected - ensure parameterized queries are used
    Code: ALEJO Update Manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4
    SQL query detected - ensure parameterized queries are used
    Code: Automatically checks for and applies updates before ALEJO starts.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 25
    SQL query detected - ensure parameterized queries are used
    Code: logging.FileHandler("alejo_update.log"),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 30
    SQL query detected - ensure parameterized queries are used
    Code: logger = logging.getLogger("alejo.update_manager")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 32
    SQL query detected - ensure parameterized queries are used
    Code: class UpdateManager:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 34
    SQL query detected - ensure parameterized queries are used
    Code: Manages automatic updates for ALEJO system
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 36
    SQL query detected - ensure parameterized queries are used
    Code: This class checks for updates from the main repository and applies them
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 42
    SQL query detected - ensure parameterized queries are used
    Code: Initialize the Update Manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 51
    SQL query detected - ensure parameterized queries are used
    Code: self.update_cache_file = self.alejo_dir / ".update_cache"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 52
    SQL query detected - ensure parameterized queries are used
    Code: self.update_lock_file = self.alejo_dir / ".update_lock"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 54
    SQL query detected - ensure parameterized queries are used
    Code: self.force_update = self.config.get("force_update", False)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 56
    SQL query detected - ensure parameterized queries are used
    Code: def should_check_for_updates(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 58
    SQL query detected - ensure parameterized queries are used
    Code: Determine if we should check for updates based on last check time
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 63
    SQL query detected - ensure parameterized queries are used
    Code: if self.force_update:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 66
    SQL query detected - ensure parameterized queries are used
    Code: if not self.update_cache_file.exists():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 70
    SQL query detected - ensure parameterized queries are used
    Code: with open(self.update_cache_file, "r") as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 82
    SQL query detected - ensure parameterized queries are used
    Code: def update_check_cache(self, update_available=False, version=None):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 83
    SQL query detected - ensure parameterized queries are used
    Code: """Update the cache file with current check information"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 86
    SQL query detected - ensure parameterized queries are used
    Code: "update_available": update_available,
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 90
    SQL query detected - ensure parameterized queries are used
    Code: with open(self.update_cache_file, "w") as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 97
    SQL query detected - ensure parameterized queries are used
    Code: def check_for_updates(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 99
    SQL query detected - ensure parameterized queries are used
    Code: Check if updates are available
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 102
    SQL query detected - ensure parameterized queries are used
    Code: tuple: (update_available, current_version, latest_version)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 105
    SQL query detected - ensure parameterized queries are used
    Code: logger.warning("Not a git repository, cannot check for updates")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 109
    SQL query detected - ensure parameterized queries are used
    Code: # Create a lock file to prevent concurrent update checks
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 110
    SQL query detected - ensure parameterized queries are used
    Code: if self.update_lock_file.exists():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 112
    SQL query detected - ensure parameterized queries are used
    Code: if time.time() - os.path.getmtime(self.update_lock_file) > 600:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 113
    SQL query detected - ensure parameterized queries are used
    Code: os.remove(self.update_lock_file)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 115
    SQL query detected - ensure parameterized queries are used
    Code: logger.info("Update check already in progress, skipping")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 118
    SQL query detected - ensure parameterized queries are used
    Code: with open(self.update_lock_file, "w") as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 146
    SQL query detected - ensure parameterized queries are used
    Code: update_available = current_version != latest_version
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 147
    SQL query detected - ensure parameterized queries are used
    Code: self.update_check_cache(update_available, current_version)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 149
    SQL query detected - ensure parameterized queries are used
    Code: return update_available, current_version, latest_version
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 152
    SQL query detected - ensure parameterized queries are used
    Code: logger.error(f"Error checking for updates: {str(e)}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 156
    SQL query detected - ensure parameterized queries are used
    Code: if self.update_lock_file.exists():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 157
    SQL query detected - ensure parameterized queries are used
    Code: os.remove(self.update_lock_file)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 180
    SQL query detected - ensure parameterized queries are used
    Code: def apply_update(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 182
    SQL query detected - ensure parameterized queries are used
    Code: Apply available updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 185
    SQL query detected - ensure parameterized queries are used
    Code: bool: True if update was successful, False otherwise
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 188
    SQL query detected - ensure parameterized queries are used
    Code: logger.warning("Not a git repository, cannot apply updates")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 207
    SQL query detected - ensure parameterized queries are used
    Code: logger.error(f"Error pulling updates: {result.stderr}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 226
    SQL query detected - ensure parameterized queries are used
    Code: # Update database schema if needed
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 227
    SQL query detected - ensure parameterized queries are used
    Code: self.update_database_schema()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 229
    SQL query detected - ensure parameterized queries are used
    Code: logger.info("Update completed successfully")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 233
    SQL query detected - ensure parameterized queries are used
    Code: logger.error(f"Error applying update: {str(e)}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 238
    SQL query detected - ensure parameterized queries are used
    Code: """Restore ALEJO from backup in case of update failure"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 267
    SQL query detected - ensure parameterized queries are used
    Code: def update_database_schema(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 268
    SQL query detected - ensure parameterized queries are used
    Code: """Update database schema if necessary"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 284
    SQL query detected - ensure parameterized queries are used
    Code: def run_update_check(self, auto_apply=True):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 286
    SQL query detected - ensure parameterized queries are used
    Code: Run a full update check and optionally apply updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 289
    SQL query detected - ensure parameterized queries are used
    Code: auto_apply: Whether to automatically apply updates if available
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 292
    SQL query detected - ensure parameterized queries are used
    Code: bool: True if system is up to date, False if update failed
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 294
    SQL query detected - ensure parameterized queries are used
    Code: if not self.should_check_for_updates():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 295
    SQL query detected - ensure parameterized queries are used
    Code: logger.info("Update check was performed recently, skipping")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 298
    SQL query detected - ensure parameterized queries are used
    Code: logger.info("Checking for ALEJO updates")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 299
    SQL query detected - ensure parameterized queries are used
    Code: update_available, current_version, latest_version = self.check_for_updates()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 301
    SQL query detected - ensure parameterized queries are used
    Code: if update_available:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 302
    SQL query detected - ensure parameterized queries are used
    Code: logger.info(f"Update available: {current_version[:7]} -> {latest_version[:7]}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 305
    SQL query detected - ensure parameterized queries are used
    Code: logger.info("Applying update automatically")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 306
    SQL query detected - ensure parameterized queries are used
    Code: return self.apply_update()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 308
    SQL query detected - ensure parameterized queries are used
    Code: logger.info("Update available but not applying automatically")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 318
    SQL query detected - ensure parameterized queries are used
    Code: parser = argparse.ArgumentParser(description="ALEJO Update Manager")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 319
    SQL query detected - ensure parameterized queries are used
    Code: parser.add_argument("--check-only", action="store_true", help="Only check for updates, don't apply them")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 320
    SQL query detected - ensure parameterized queries are used
    Code: parser.add_argument("--force", action="store_true", help="Force update check even if done recently")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 323
    SQL query detected - ensure parameterized queries are used
    Code: # Create update manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 324
    SQL query detected - ensure parameterized queries are used
    Code: config = {"force_update": args.force}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 325
    SQL query detected - ensure parameterized queries are used
    Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 327
    SQL query detected - ensure parameterized queries are used
    Code: # Run update check
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 328
    SQL query detected - ensure parameterized queries are used
    Code: update_manager.run_update_check(auto_apply=not args.check_only)
    Remediation: Use parameterized queries with placeholders for all user input


File: validate_gesture_deployment.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 103
    SQL query detected - ensure parameterized queries are used
    Code: await r.delete(test_key)
    Remediation: Use parameterized queries with placeholders for all user input


File: verify_selenium_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 64
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(Path(script_path).parent))
    Remediation: Use parameterized queries with placeholders for all user input


File: vision_initialization_profile.stats
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 47
    SQL query detected - ensure parameterized queries are used
    Code: Y]O?gjOEb?0)r   id  r  )r#   r#   gh㈵>g7P>{r   )r#   r#   gh㈵>g7P>0)r   i  	fix_flags)r   r   guR#>g&p>{r   )r   r   guR#>g&p>0)r   i  r   )r   r   g>g+|c?{r   )r   r   g>g+|c?0)rS   rT   rU   )r)   r)   g0D4>g =T?{0)DC:\Users\magic\AppData\Local\Programs\Python\Python39\lib\weakref.pyi   r   )r)   r)   glӎ>g4vxU>{rY   )r)   r)   glӎ>g4vxU>0)r  i"  update)r)   r)   gavt>g:ܳS>{)r  r  r   )r)   r)   gavt>g:ܳS>0)FC:\Users\magic\AppData\Local\Programs\Python\Python39\lib\threading.pyr   RLock)r#   r#   gkNu>gkNu>{rZ   iv  
    Remediation: Use parameterized queries with placeholders for all user input


File: voice_command_simulator.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 25
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 185
    SQL query detected - ensure parameterized queries are used
    Code: """Process the command and update the log"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 199
    SQL query detected - ensure parameterized queries are used
    Code: def _update():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 201
    SQL query detected - ensure parameterized queries are used
    Code: self.log_text.insert(tk.END, message + "\n\n", color)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 206
    SQL query detected - ensure parameterized queries are used
    Code: # Update in the main thread
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 207
    SQL query detected - ensure parameterized queries are used
    Code: self.root.after(0, _update)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 212
    SQL query detected - ensure parameterized queries are used
    Code: self.log_text.delete(1.0, tk.END)
    Remediation: Use parameterized queries with placeholders for all user input


File: examples\error_handling_demo.py
--------------------------------------------------------------------------------
[LOW] PseudoRandom line 56
    Pseudo-random number generator used - not suitable for security purposes
    Code: if random.random() < 0.3:  # 30% chance of rate limit
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 63
    Pseudo-random number generator used - not suitable for security purposes
    Code: if random.random() < 0.5:  # 50% chance of network error
    Remediation: Use secrets module for security-sensitive randomness needs

