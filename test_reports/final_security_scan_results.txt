================================================================================
ALEJO Security Scan Report
================================================================================
Files analyzed: 280
Lines of code analyzed: 53248
Total vulnerabilities found: 1275
  Critical: 0
  High: 3
  Medium: 1262
  Low: 10
  Info: 0
================================================================================

File: focused_security_scan.py
--------------------------------------------------------------------------------
[HIGH] DynamicCodeExecution line 57
    Use of eval() can lead to code injection
    Code: 'Use of eval() can lead to code injection',
    Remediation: Replace with safer alternatives like JSON parsing or static code

[MEDIUM] SQLQuery line 60
    SQL query detected - ensure parameterized queries are used
    Code: 'py_sql_query': (r'(?:execute|executemany)\s*\(\s*["\']SELECT|UPDATE|DELETE|INSERT',
    Remediation: Use parameterized queries with placeholders for all user input


File: test_reports\security_scan_results.txt
--------------------------------------------------------------------------------
[HIGH] DynamicCodeExecution line 17
    Use of eval() can lead to code injection
    Code: Use of eval() can lead to code injection
    Remediation: Replace with safer alternatives like JSON parsing or static code

[HIGH] DynamicCodeExecution line 18
    Use of eval() can lead to code injection
    Code: Code: 'Use of eval() can lead to code injection',
    Remediation: Replace with safer alternatives like JSON parsing or static code

[MEDIUM] SQLQuery line 23
    SQL query detected - ensure parameterized queries are used
    Code: Code: 'py_sql_query': (r'(?:execute|executemany)\s*\(\s*["\']SELECT|UPDATE|DELETE|INSERT',
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 27
    SQL query detected - ensure parameterized queries are used
    Code: File: .update_cache
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 31
    SQL query detected - ensure parameterized queries are used
    Code: Code: {"last_check": "2025-06-30T23:52:42.890553", "update_available": false, "current_version": "abcd1234"}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 39
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Updates services with zero downtime
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 44
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Dependency updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 52
    SQL query detected - ensure parameterized queries are used
    Code: Code: * Regular model updates containing collective insights
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 57
    SQL query detected - ensure parameterized queries are used
    Code: Code: * User control over update frequency and domains
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 62
    SQL query detected - ensure parameterized queries are used
    Code: Code: * Users can delete their local learning data at any time
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 70
    SQL query detected - ensure parameterized queries are used
    Code: Code: RUN apt-get update && apt-get install -y \
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 78
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Manages dynamic UI updates and DOM manipulation for gesture-enabled elements.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 83
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Provides methods to update, enable, or disable elements based on their gesture properties.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 88
    SQL query detected - ensure parameterized queries are used
    Code: Code: - CI/CD pipelines have been updated to include backend validation, integration testing, and security compliance.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 96
    SQL query detected - ensure parameterized queries are used
    Code: Code: - **Web Interface**: Modern, responsive web interface with real-time updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 101
    SQL query detected - ensure parameterized queries are used
    Code: Code: - **ServiceRegistry**: Manages service registration and health updates, providing a single source of truth for service status.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 109
    SQL query detected - ensure parameterized queries are used
    Code: Code: 3. Update the frontend UI in `alejo/templates/gesture_enabled_interface.html`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 117
    SQL query detected - ensure parameterized queries are used
    Code: Code: {"action": "delete_file"},
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 122
    SQL query detected - ensure parameterized queries are used
    Code: Code: 5. **Updates**: Keep all dependencies up to date.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 126
    SQL query detected - ensure parameterized queries are used
    Code: File: alejo_update.log
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 130
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-30 23:52:21,057 - alejo.update_manager - INFO - Pulling latest changes from repository
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 135
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-30 23:52:21,058 - alejo.update_manager - ERROR - Error pulling updates: Failed to pull
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 140
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-30 23:52:21,062 - alejo.update_manager - INFO - Pulling latest changes from repository
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 145
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-30 23:52:21,063 - alejo.update_manager - INFO - Updating dependencies
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 150
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-30 23:52:21,063 - alejo.update_manager - INFO - Update completed successfully
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 155
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-30 23:52:21,068 - alejo.update_manager - INFO - Backing up current ALEJO installation to C:\Users\magic\AppData\Local\Temp\alejo_backup_h5jwy8dw
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 160
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-30 23:52:21,083 - alejo.update_manager - INFO - Restoring ALEJO from backup C:\Users\magic\AppData\Local\Temp\alejo_backup_h5jwy8dw
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 165
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-30 23:52:42,882 - alejo.update_manager - ERROR - Error restoring backup: [WinError 32] The process cannot access the file because it is being used by another process: 'C:\\Users\\magic\\CascadeProjects\\ALEJO\\alejo_update.log'
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 173
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Update references to use the new module
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 178
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Update references to use the new module
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 183
    SQL query detected - ensure parameterized queries are used
    Code: Code: 4. **Update Tests**:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 188
    SQL query detected - ensure parameterized queries are used
    Code: Code: 5. **Update Documentation**:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 193
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Update user guide
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 201
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2. Update imports to use package structure
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 206
    SQL query detected - ensure parameterized queries are used
    Code: Code: 3. Update imports to use package structure
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 214
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(self.script_path.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 222
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 230
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 238
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 246
    SQL query detected - ensure parameterized queries are used
    Code: Code: 5. **Brain Integration**: Update ALEJOBrain and other components to automatically self-register with the ServiceRegistry and intercommunicate via the EventBus.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 254
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Create secure update mechanisms
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 258
    SQL query detected - ensure parameterized queries are used
    Code: File: docs\AUTO_UPDATE_README.md
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 262
    SQL query detected - ensure parameterized queries are used
    Code: Code: # ALEJO Automatic Update System
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 267
    SQL query detected - ensure parameterized queries are used
    Code: Code: This document explains the automatic update system implemented in ALEJO to ensure users always have the latest security patches and features.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 272
    SQL query detected - ensure parameterized queries are used
    Code: Code: The ALEJO update system performs the following operations:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 277
    SQL query detected - ensure parameterized queries are used
    Code: Code: 1. **Pre-launch Update Check**: Before ALEJO starts, it automatically checks for updates from the main repository.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 282
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2. **Secure Update Process**:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 287
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Creates a backup of the current installation before applying any updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 292
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Updates the codebase from the repository
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 297
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Updates dependencies if necessary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 302
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Rolls back to the backup if any errors occur during the update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 307
    SQL query detected - ensure parameterized queries are used
    Code: Code: 3. **Scheduled Checks**: Updates are checked at configurable intervals (default: every 4 hours) to avoid excessive network traffic.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 312
    SQL query detected - ensure parameterized queries are used
    Code: Code: The update system works automatically and requires no user intervention. However, several command-line options are available:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 317
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Normal startup with automatic update check
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 322
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Skip update check during startup
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 327
    SQL query detected - ensure parameterized queries are used
    Code: Code: python start_alejo_with_gestures.py --skip-updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 332
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Manually check for updates without starting ALEJO
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 337
    SQL query detected - ensure parameterized queries are used
    Code: Code: python update_manager.py --check-only
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 342
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Force update check regardless of when the last check occurred
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 347
    SQL query detected - ensure parameterized queries are used
    Code: Code: python update_manager.py --force
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 352
    SQL query detected - ensure parameterized queries are used
    Code: Code: The update system can be configured through environment variables:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 357
    SQL query detected - ensure parameterized queries are used
    Code: Code: - `ALEJO_UPDATE_INTERVAL`: Set the minimum hours between update checks (default: 4)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 362
    SQL query detected - ensure parameterized queries are used
    Code: Code: If you encounter issues with the automatic update system:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 367
    SQL query detected - ensure parameterized queries are used
    Code: Code: 1. Check the log file (`alejo_update.log`) for detailed error messages
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 372
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2. Try running a manual update with `python update_manager.py --force`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 377
    SQL query detected - ensure parameterized queries are used
    Code: Code: 3. If updates consistently fail, you can bypass them with `--skip-updates` and update manually
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 382
    SQL query detected - ensure parameterized queries are used
    Code: Code: The automatic update system enhances ALEJO's security by ensuring users always have the latest security patches. The system:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 387
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Creates backups before applying updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 392
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Maintains a log of all update operations
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 397
    SQL query detected - ensure parameterized queries are used
    Code: Code: To extend or modify the update system:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 402
    SQL query detected - ensure parameterized queries are used
    Code: Code: 1. The core functionality is in `update_manager.py`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 407
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2. Test cases are available in `test_update_manager.py`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 412
    SQL query detected - ensure parameterized queries are used
    Code: Code: 3. The update system is integrated into ALEJO's startup process in `start_alejo_with_gestures.py`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 417
    SQL query detected - ensure parameterized queries are used
    Code: Code: python -m unittest test_update_manager.py
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 425
    SQL query detected - ensure parameterized queries are used
    Code: Code: - **Event-Driven Updates**: Computing only when necessary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 430
    SQL query detected - ensure parameterized queries are used
    Code: Code: - **Processing Efficiency**: Neural updates per second
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 438
    SQL query detected - ensure parameterized queries are used
    Code: Code: - **Modularity**: Components are well-separated, making it easier to update individual parts.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 446
    SQL query detected - ensure parameterized queries are used
    Code: Code: - Update plugins to compatible versions
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 454
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 462
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Insert before the first import
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 470
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Find a good place to insert the polyfill
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 475
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Try to insert after imports or at the beginning of the file
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 480
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Insert at the beginning of the file
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 485
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Insert catch block before the last closing brace
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 493
    SQL query detected - ensure parameterized queries are used
    Code: Code: progress_bar.update(len(data))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 498
    SQL query detected - ensure parameterized queries are used
    Code: Code: sha256_hash.update(byte_block)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 506
    SQL query detected - ensure parameterized queries are used
    Code: Code: 1. Update images:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 514
    SQL query detected - ensure parameterized queries are used
    Code: Code: 1. Update Istio:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 519
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2. Update monitoring stack:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 527
    SQL query detected - ensure parameterized queries are used
    Code: Code: "last_updated": "2025-06-17T06:34:00.742317"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 535
    SQL query detected - ensure parameterized queries are used
    Code: Code: 2025-06-11 07:31:08,226 - __main__ - INFO - Updated index.html
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 543
    SQL query detected - ensure parameterized queries are used
    Code: Code: 1. Review and update priorities weekly
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 551
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(self.project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 556
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(self.project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 561
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update results
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 566
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update results
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 571
    SQL query detected - ensure parameterized queries are used
    Code: Code: def update_html_references(self, js_dir, css_dir):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 576
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Update HTML templates to use optimized files"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 581
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update JS references
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 586
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update CSS references
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 591
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Write updated content
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 596
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info(f"Updated {html_file.name}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 601
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update HTML references
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 606
    SQL query detected - ensure parameterized queries are used
    Code: Code: optimizer.update_html_references(js_dir, css_dir)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 614
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Send status updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 622
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.warning(f"{env_file} already exists. Please delete it first if you want to create a new one.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 630
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(PROJECT_ROOT))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 638
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 646
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.dirname(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 654
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 662
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(__file__).resolve().parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 667
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update improvements status in data manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 672
    SQL query detected - ensure parameterized queries are used
    Code: Code: await data_manager.update_improvements(applied_improvements)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 677
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info(f"Updated status for {len(applied_improvements)} improvements")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 685
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, project_root)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 693
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(__file__).resolve().parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 701
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(script_dir.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 709
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(__file__).resolve().parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 717
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 725
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Update test configuration"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 730
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update database paths in config
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 735
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Updated test configuration")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 743
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(PROJECT_ROOT))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 751
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update config with file values
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 756
    SQL query detected - ensure parameterized queries are used
    Code: Code: self._update_dict(config, file_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 761
    SQL query detected - ensure parameterized queries are used
    Code: Code: def _update_dict(self, target: Dict, source: Dict) -> None:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 766
    SQL query detected - ensure parameterized queries are used
    Code: Code: Recursively update dictionary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 771
    SQL query detected - ensure parameterized queries are used
    Code: Code: self._update_dict(target[key], value)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 779
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Import update manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 784
    SQL query detected - ensure parameterized queries are used
    Code: Code: from update_manager import UpdateManager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 789
    SQL query detected - ensure parameterized queries are used
    Code: Code: UPDATE_MANAGER_AVAILABLE = True
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 794
    SQL query detected - ensure parameterized queries are used
    Code: Code: UPDATE_MANAGER_AVAILABLE = False
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 799
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Add update-related command line arguments
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 804
    SQL query detected - ensure parameterized queries are used
    Code: Code: "--skip-updates",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 809
    SQL query detected - ensure parameterized queries are used
    Code: Code: help="Skip checking for updates before starting"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 814
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check for updates before starting services
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 819
    SQL query detected - ensure parameterized queries are used
    Code: Code: if UPDATE_MANAGER_AVAILABLE and not args.skip_updates:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 824
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Checking for ALEJO updates...")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 829
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 834
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_success = update_manager.run_update_check(auto_apply=True)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 839
    SQL query detected - ensure parameterized queries are used
    Code: Code: if not update_success:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 844
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.error("Update process encountered errors. Starting with current version.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 849
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Update check completed successfully.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 854
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.error(f"Error during update process: {str(e)}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 862
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(PROJECT_ROOT))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 870
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 878
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update the timestamp
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 883
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update default URLs if provided
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 891
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update the timestamp
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 899
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check updated allocations
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 904
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info(f"Updated allocations: {allocations}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 908
    SQL query detected - ensure parameterized queries are used
    Code: File: test_update_manager.py
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 912
    SQL query detected - ensure parameterized queries are used
    Code: Code: Test script for ALEJO Update Manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 917
    SQL query detected - ensure parameterized queries are used
    Code: Code: This script tests the functionality of the update manager to ensure it works correctly.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 922
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Import the update manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 927
    SQL query detected - ensure parameterized queries are used
    Code: Code: from update_manager import UpdateManager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 932
    SQL query detected - ensure parameterized queries are used
    Code: Code: class TestUpdateManager(unittest.TestCase):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 937
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test cases for the ALEJO Update Manager"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 942
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.test_dir = tempfile.mkdtemp(prefix="alejo_update_test_")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 947
    SQL query detected - ensure parameterized queries are used
    Code: Code: "force_update": True
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 952
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 957
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertTrue(update_manager.is_git_repo())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 962
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertFalse(update_manager.is_git_repo())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 967
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_check_for_updates_no_updates(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 972
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test checking for updates when none are available"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 977
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 982
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_available, current, latest = update_manager.check_for_updates()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 987
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertFalse(update_available)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 992
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_check_for_updates_available(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 997
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test checking for updates when updates are available"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1002
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1007
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_available, current, latest = update_manager.check_for_updates()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1012
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertTrue(update_available)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1017
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1022
    SQL query detected - ensure parameterized queries are used
    Code: Code: backup_dir = update_manager.backup_current_version()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1027
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager.restore_backup(backup_dir)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1032
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_apply_update_success(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1037
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test successful update application"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1042
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock.Mock(stdout="Updated files", stderr="", returncode=0),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1047
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1052
    SQL query detected - ensure parameterized queries are used
    Code: Code: UpdateManager, 'backup_current_version',
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1057
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Create requirements.txt for testing dependency updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1062
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = update_manager.apply_update()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1067
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_apply_update_failure(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1072
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test failed update application"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1077
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1082
    SQL query detected - ensure parameterized queries are used
    Code: Code: UpdateManager, 'backup_current_version',
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1087
    SQL query detected - ensure parameterized queries are used
    Code: Code: with mock.patch.object(UpdateManager, 'restore_backup') as mock_restore:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1092
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = update_manager.apply_update()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1097
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_should_check_for_updates(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1102
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test the logic for determining if updates should be checked"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1107
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Force update should always return True
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1112
    SQL query detected - ensure parameterized queries are used
    Code: Code: config = {"force_update": True, "check_interval_hours": 24}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1117
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1122
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertTrue(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1127
    SQL query detected - ensure parameterized queries are used
    Code: Code: config = {"force_update": False, "check_interval_hours": 24}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1132
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1137
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertTrue(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1142
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager.update_check_cache()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1147
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertFalse(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1152
    SQL query detected - ensure parameterized queries are used
    Code: Code: config = {"force_update": False, "check_interval_hours": 0}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1157
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1162
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager.update_check_cache()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1167
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertTrue(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1175
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Test state updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1180
    SQL query detected - ensure parameterized queries are used
    Code: Code: operation="update_state",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1185
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def update_state():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1190
    SQL query detected - ensure parameterized queries are used
    Code: Code: await emotional_core.update_emotional_state(test_input)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1195
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_result = await update_state()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1200
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert update_result.mean_time < 0.02, "State update too slow"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1205
    SQL query detected - ensure parameterized queries are used
    Code: Code: emotional_core.update_emotional_state({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1213
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1218
    SQL query detected - ensure parameterized queries are used
    Code: Code: brain.emotional_processor.update_emotional_state.assert_called()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1223
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Should update emotional state and respond empathetically
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1228
    SQL query detected - ensure parameterized queries are used
    Code: Code: brain.emotional_processor.update_emotional_state.assert_called()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1236
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1241
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_brain_context_update(multimodal_integration, mock_brain, temp_image):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1246
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check that brain context was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1254
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1262
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1270
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1278
    SQL query detected - ensure parameterized queries are used
    Code: Code: await event_bus.subscribe(EventType.ADAPTATION_UPDATED, collect_events)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1283
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert any(e.type == EventType.ADAPTATION_UPDATED for e in events)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1288
    SQL query detected - ensure parameterized queries are used
    Code: Code: adaptation_event = next(e for e in events if e.type == EventType.ADAPTATION_UPDATED)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1296
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify emotional trajectory was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1301
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify topic was updated and depth reset
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1306
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_update_configuration(self, proactive_engine, mock_config_manager):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1311
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update configuration
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1316
    SQL query detected - ensure parameterized queries are used
    Code: Code: proactive_engine.update_configuration(new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1321
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify configuration was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1326
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify config manager was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1331
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_config_manager.update_config.assert_called_once_with("cognitive", new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1339
    SQL query detected - ensure parameterized queries are used
    Code: Code: manager.update_improvement_status = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1344
    SQL query detected - ensure parameterized queries are used
    Code: Code: data_manager.update_improvement_status.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1349
    SQL query detected - ensure parameterized queries are used
    Code: Code: data_manager.update_improvement_status.assert_not_called()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1357
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1365
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1373
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1381
    SQL query detected - ensure parameterized queries are used
    Code: Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1386
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_repo.return_value.delete_head.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1391
    SQL query detected - ensure parameterized queries are used
    Code: Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1396
    SQL query detected - ensure parameterized queries are used
    Code: Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1401
    SQL query detected - ensure parameterized queries are used
    Code: Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1409
    SQL query detected - ensure parameterized queries are used
    Code: Code: Event(EventType.SYSTEM, {"status": "System update"}, priority=2),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1417
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test advanced health check metrics and updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1422
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify health metrics were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1427
    SQL query detected - ensure parameterized queries are used
    Code: Code: service_mesh._service_dependencies.update({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1435
    SQL query detected - ensure parameterized queries are used
    Code: Code: if event.data.get("action") == "health_update":
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1440
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert event.data["action"] == "health_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1445
    SQL query detected - ensure parameterized queries are used
    Code: Code: if event.data.get("action") == "dependency_update":
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1450
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Mock health checks to update dependencies
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1458
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_service_updates_subscription(registry):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1463
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test service update notifications"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1468
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Subscribe to updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1476
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Wait for the feedback to update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1484
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1489
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Wait for sentiment score to update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1497
    SQL query detected - ensure parameterized queries are used
    Code: Code: type=EventType.EMOTIONAL_STATE_UPDATE,
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1502
    SQL query detected - ensure parameterized queries are used
    Code: Code: events = event_bus.get_recent_events(EventType.EMOTIONAL_STATE_UPDATE)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1510
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify personality traits were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1518
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Simulate an emotional state update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1523
    SQL query detected - ensure parameterized queries are used
    Code: Code: "action": "state_update",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1528
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify emotional processor was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1533
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert emotional_integration.emotional_processor.update_emotional_state.called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1541
    SQL query detected - ensure parameterized queries are used
    Code: Code: interaction storage, relationship updates, value system storage, and event handling.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1546
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify that the state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1551
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify that the state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1556
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_update_relationship(self, emotional_memory, event_bus, memory_service):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1561
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update relationship
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1566
    SQL query detected - ensure parameterized queries are used
    Code: Code: await emotional_memory.update_relationship(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1571
    SQL query detected - ensure parameterized queries are used
    Code: Code: memory_service.update_relationship_metrics.assert_called_once_with(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1576
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert event_bus.emit.call_count == 2  # First for init, second for update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1581
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert args[0] == "emotional.memory.relationship_updated"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1586
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert args[0] == "emotional.memory.value_updated"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1591
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify that the value was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1596
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify that the state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1601
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Test emotional update handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1606
    SQL query detected - ensure parameterized queries are used
    Code: Code: await emotional_memory._handle_emotional_update(event_data)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1611
    SQL query detected - ensure parameterized queries are used
    Code: Code: memory_service.update_relationship_metrics.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1616
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Test value update handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1621
    SQL query detected - ensure parameterized queries are used
    Code: Code: await emotional_memory._handle_value_update(event_data)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1629
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1634
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Test update_emotional_memory event handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1639
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = await emotional_integration._handle_update_emotional_memory({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1647
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify memory update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1652
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify interaction timing updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1657
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify memory and learning updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1665
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1670
    SQL query detected - ensure parameterized queries are used
    Code: Code: def update_principle_weight(self, principle, weight):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1675
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Update principle weight"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1680
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_update_ethical_principle(ethical_integration, mock_ethical_framework):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1685
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Test valid update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1690
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = await ethical_integration.update_ethical_principle(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1695
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = await ethical_integration.update_ethical_principle(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1700
    SQL query detected - ensure parameterized queries are used
    Code: Code: with patch.object(mock_ethical_framework, 'update_principle_weight', side_effect=ValueError("Unknown principle")):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1705
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = await ethical_integration.update_ethical_principle(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1710
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Test update_ethical_principle event handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1715
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = await ethical_integration._handle_update_ethical_principle({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1723
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1731
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1739
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1744
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_delete_preset(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1749
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Delete the preset
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1754
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.preset_manager.delete_preset(test_preset["name"])
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1759
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify the preset was deleted
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1767
    SQL query detected - ensure parameterized queries are used
    Code: Code: temp_db = tempfile.NamedTemporaryFile(delete=False, suffix='.db')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1772
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_emotional_state_update_from_llm_response(self, brain, event_bus):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1777
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test that emotional state is updated from LLM responses."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1782
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify that the emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1787
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_relationship_update_after_interaction(self, brain):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1792
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test that relationship metrics are updated after interactions."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1797
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Mock the emotional processor and update_relationship
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1802
    SQL query detected - ensure parameterized queries are used
    Code: Code: }), patch.object(brain.emotional_memory, 'update_relationship', AsyncMock()) as mock_update:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1807
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify that update_relationship was called with positive deltas
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1812
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1817
    SQL query detected - ensure parameterized queries are used
    Code: Code: args, kwargs = mock_update.call_args
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1822
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Emit a value update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1827
    SQL query detected - ensure parameterized queries are used
    Code: Code: await brain.event_bus.emit("value.update", {
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1832
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Mock update_relationship
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1837
    SQL query detected - ensure parameterized queries are used
    Code: Code: with patch.object(brain.emotional_memory, 'update_relationship', AsyncMock()) as mock_update:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1842
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify that update_relationship was called to save final state
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1847
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1855
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1860
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertIn("emotional.update", self.event_bus._subscribers)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1865
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1870
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1875
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1880
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1885
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1890
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1895
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1900
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory._handle_emotional_update = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1905
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Emit an emotional update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1910
    SQL query detected - ensure parameterized queries are used
    Code: Code: await self.event_bus.emit("emotional.update", {"emotion": "joy", "value": 0.8})
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1915
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory._handle_emotional_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1920
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1925
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1933
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1938
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1946
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1951
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1956
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertIn("emotional.update", self.event_bus._subscribers)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1961
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Emit an emotional update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1966
    SQL query detected - ensure parameterized queries are used
    Code: Code: await self.event_bus.emit("emotional.update", {"emotion": "anger", "value": 0.8})
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1971
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def update_value_system():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1976
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.brain.ethical_framework.update_value_system = AsyncMock(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1981
    SQL query detected - ensure parameterized queries are used
    Code: Code: side_effect=update_value_system
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1986
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update value system
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1991
    SQL query detected - ensure parameterized queries are used
    Code: Code: await self.brain.ethical_framework.update_value_system()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 1996
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify that value system was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2004
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2012
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test that a service is auto-deregistered if not updated within the threshold
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2017
    SQL query detected - ensure parameterized queries are used
    Code: Code: and validate that the DatabaseManager can insert and fetch interactions."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2022
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Simulate that the service's last update occurred sufficiently in the past
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2027
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Insert an interaction record
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2032
    SQL query detected - ensure parameterized queries are used
    Code: Code: db.insert_interaction(test_data)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2037
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert record_found, "The inserted interaction data should be found in the database"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2045
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test that a service is auto-deregistered if no health update occurs within the threshold."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2053
    SQL query detected - ensure parameterized queries are used
    Code: Code: EventType.SYSTEM_IMPROVEMENT_UPDATE,
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2058
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert all(e.type == EventType.SYSTEM_IMPROVEMENT_UPDATE for e in events_received)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2063
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_analyze_and_update_error_patterns(improvement_system):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2068
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test error pattern analysis and strategy updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2073
    SQL query detected - ensure parameterized queries are used
    Code: Code: await improvement_system._analyze_and_update_error_patterns()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2078
    SQL query detected - ensure parameterized queries are used
    Code: Code: improvement_system.error_tracker.update_recovery_strategy.assert_called_once_with(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2083
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_analyze_and_update_emotional_patterns(improvement_system):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2088
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test emotional pattern analysis and parameter updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2093
    SQL query detected - ensure parameterized queries are used
    Code: Code: await improvement_system._analyze_and_update_emotional_patterns()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2098
    SQL query detected - ensure parameterized queries are used
    Code: Code: improvement_system.emotional_core.update_response_parameters.assert_called_once_with(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2106
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2114
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2122
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_delete_adapter(lora_manager):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2127
    SQL query detected - ensure parameterized queries are used
    Code: Code: name="adapter_to_delete",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2132
    SQL query detected - ensure parameterized queries are used
    Code: Code: description="Adapter to delete",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2137
    SQL query detected - ensure parameterized queries are used
    Code: Code: adapter_path = os.path.join(lora_manager.lora_dir, "adapter_to_delete")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2142
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Delete the adapter
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2147
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = await lora_manager.delete_adapter("adapter_to_delete")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2152
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check that the delete was successful
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2157
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Try to delete a non-existent adapter
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2162
    SQL query detected - ensure parameterized queries are used
    Code: Code: await lora_manager.delete_adapter("non_existent_adapter")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2170
    SQL query detected - ensure parameterized queries are used
    Code: Code: emotions.update(self.emotion_detector.detect_text_emotion(text))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2175
    SQL query detected - ensure parameterized queries are used
    Code: Code: emotions.update(self.emotion_detector.detect_audio_emotion(audio_data))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2180
    SQL query detected - ensure parameterized queries are used
    Code: Code: emotions.update(self.emotion_detector.detect_facial_emotion(image_data))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2185
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.personality_model.update(interaction)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2190
    SQL query detected - ensure parameterized queries are used
    Code: Code: def update(self, interaction):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2195
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Update personality state"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2203
    SQL query detected - ensure parameterized queries are used
    Code: Code: def delete(self, key):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2208
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Delete a key"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2213
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.sets[key].update(values)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2218
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.sorted_sets[key].update(mapping)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2226
    SQL query detected - ensure parameterized queries are used
    Code: Code: with tempfile.NamedTemporaryFile(suffix='.jpg', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2234
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2242
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, project_root)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2250
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2258
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test service heartbeat updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2266
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update skill levels
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2271
    SQL query detected - ensure parameterized queries are used
    Code: Code: curriculum_manager.update_skill_levels(task, True, 0.9)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2276
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update performance and select again
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2281
    SQL query detected - ensure parameterized queries are used
    Code: Code: meta_learner.update_strategy_performance(0.8)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2289
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify system state updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2307
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2312
    SQL query detected - ensure parameterized queries are used
    Code: Code: valid_command_json = '{"command": "delete_file", "args": "protected.txt"}'
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2317
    SQL query detected - ensure parameterized queries are used
    Code: Code: failure_message = "Failed to delete file: Permission denied"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2322
    SQL query detected - ensure parameterized queries are used
    Code: Code: final_response = brain.process_command("delete the protected file")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2327
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_cmd_processor.execute_command.assert_called_once_with("delete_file", "protected.txt")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2335
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2343
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify working memory was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2351
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2356
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_handle_delete_file(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2361
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test the internal _handle_delete_file method."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2366
    SQL query detected - ensure parameterized queries are used
    Code: Code: test_file = self.test_dir / "file_to_delete.txt"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2371
    SQL query detected - ensure parameterized queries are used
    Code: Code: test_file.touch() # Create the file to be deleted
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2376
    SQL query detected - ensure parameterized queries are used
    Code: Code: result = self.cmd_processor._handle_delete_file(str(test_file))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2381
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertIn("Deleted file", result)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2386
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertFalse(test_file.exists(), "_handle_delete_file did not delete the file.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2394
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2399
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_05_delete_file_command_success(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2404
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test the 'delete file' command handler for successful deletion."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2409
    SQL query detected - ensure parameterized queries are used
    Code: Code: filename = "file_to_delete.txt"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2414
    SQL query detected - ensure parameterized queries are used
    Code: Code: command = f"delete file {filename}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2419
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.assertEqual(result, f"Deleted file: {expected_path}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2424
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_06_delete_file_not_found(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2429
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test the 'delete file' command when the file does not exist."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2434
    SQL query detected - ensure parameterized queries are used
    Code: Code: command = f"delete file {filename}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2439
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_07_delete_file_protected_path_failure(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2444
    SQL query detected - ensure parameterized queries are used
    Code: Code: command = f"delete file {protected_path}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2449
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_08_delete_file_decorator_error_handling(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2454
    SQL query detected - ensure parameterized queries are used
    Code: Code: command = f"delete file {filename}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2462
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2467
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update summary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2472
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update summary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2480
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_update_and_get_relationship_data(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2485
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.db_manager.update_relationship_data(user_id, relationship_type, trust_level, rapport_level)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2493
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_update_relationship_metrics(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2498
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Initial update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2503
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.memory.update_relationship_metrics(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2508
    SQL query detected - ensure parameterized queries are used
    Code: Code: action = "delete_user_data"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2516
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_01_emotional_state_update(self, event_bus):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2521
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update with positive emotion
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2526
    SQL query detected - ensure parameterized queries are used
    Code: Code: item_id = await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2531
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update with negative emotion
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2536
    SQL query detected - ensure parameterized queries are used
    Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2541
    SQL query detected - ensure parameterized queries are used
    Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2546
    SQL query detected - ensure parameterized queries are used
    Code: Code: await memory.update_relationship_context(entity_id, context)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2551
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update context
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2556
    SQL query detected - ensure parameterized queries are used
    Code: Code: update = {
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2561
    SQL query detected - ensure parameterized queries are used
    Code: Code: await memory.update_relationship_context(entity_id, update)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2566
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check updated context
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2571
    SQL query detected - ensure parameterized queries are used
    Code: Code: updated_context = await memory.get_relationship_context(entity_id)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2576
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert updated_context["trust_level"] == 0.9
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2581
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert len(updated_context["shared_experiences"]) == 3
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2586
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2591
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2596
    SQL query detected - ensure parameterized queries are used
    Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2601
    SQL query detected - ensure parameterized queries are used
    Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2606
    SQL query detected - ensure parameterized queries are used
    Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2611
    SQL query detected - ensure parameterized queries are used
    Code: Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2619
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_personality_state_updates(self, emotional_service):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2624
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test personality state updates and persistence"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2629
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert final_state != initial_state  # State should update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2634
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Personality state updates validated")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2642
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_04_empathy_model_updates(self, processor):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2647
    SQL query detected - ensure parameterized queries are used
    Code: Code: await processor.update_empathy_model({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2652
    SQL query detected - ensure parameterized queries are used
    Code: Code: await processor.update_empathy_model({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2657
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2665
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2673
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2681
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2689
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check priorities were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2697
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.temp_config = tempfile.NamedTemporaryFile(delete=False, suffix='.json')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2702
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.temp_db = tempfile.NamedTemporaryFile(delete=False, suffix='.db')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2707
    SQL query detected - ensure parameterized queries are used
    Code: Code: with tempfile.NamedTemporaryFile(delete=False, suffix='.json') as temp_file:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2715
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.temp_db = tempfile.NamedTemporaryFile(delete=False, suffix='.db')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2720
    SQL query detected - ensure parameterized queries are used
    Code: Code: "delete user data without confirmation",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2725
    SQL query detected - ensure parameterized queries are used
    Code: Code: with tempfile.NamedTemporaryFile(delete=False, suffix='.json') as temp_file:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2730
    SQL query detected - ensure parameterized queries are used
    Code: Code: with tempfile.NamedTemporaryFile(delete=False, suffix='.json') as temp_file:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2738
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify emotional state update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2746
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert result['memory_updates']
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2751
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Get updated metrics
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2756
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify metrics were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2764
    SQL query detected - ensure parameterized queries are used
    Code: Code: """HealthMonitor should emit a *healthy* status update when the endpoint responds 200."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2772
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2780
    SQL query detected - ensure parameterized queries are used
    Code: Code: updated_items = await working_memory.get_active_items()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2785
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert len(updated_items) <= len(items)  # Should have decayed
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2790
    SQL query detected - ensure parameterized queries are used
    Code: Code: for old, new in zip(items, updated_items):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2798
    SQL query detected - ensure parameterized queries are used
    Code: Code: last_updated: float
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2803
    SQL query detected - ensure parameterized queries are used
    Code: Code: last_updated=time.time(),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2808
    SQL query detected - ensure parameterized queries are used
    Code: Code: last_updated=time.time(),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2816
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2824
    SQL query detected - ensure parameterized queries are used
    Code: Code: await brain.emotional_processor.update_emotional_state({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2832
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_event_bus.subscribe.assert_any_call("config.updated", arpeggiator._handle_config_updated)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2837
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_handle_config_updated(self, arpeggiator):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2842
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test handling configuration update events"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2847
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Replace update_configuration with a mock
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2852
    SQL query detected - ensure parameterized queries are used
    Code: Code: arpeggiator.update_configuration = MagicMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2857
    SQL query detected - ensure parameterized queries are used
    Code: Code: event_type="config.updated",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2862
    SQL query detected - ensure parameterized queries are used
    Code: Code: await arpeggiator._handle_config_updated(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2867
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify update_configuration was called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2872
    SQL query detected - ensure parameterized queries are used
    Code: Code: arpeggiator.update_configuration.assert_called_once_with({"sensitivity": 0.7})
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2877
    SQL query detected - ensure parameterized queries are used
    Code: Code: event_type="config.updated",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2882
    SQL query detected - ensure parameterized queries are used
    Code: Code: arpeggiator.update_configuration.reset_mock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2887
    SQL query detected - ensure parameterized queries are used
    Code: Code: await arpeggiator._handle_config_updated(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2892
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify update_configuration was not called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2897
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert not arpeggiator.update_configuration.called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2902
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_update_configuration(self, arpeggiator, mock_config_manager):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2907
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update configuration
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2912
    SQL query detected - ensure parameterized queries are used
    Code: Code: arpeggiator.update_configuration(new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2917
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify configuration was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2922
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify config manager was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2927
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_config_manager.update_config.assert_called_once_with("gesture_arpeggiator", new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2935
    SQL query detected - ensure parameterized queries are used
    Code: Code: event_bus.subscribe.assert_any_call("ui.context_changed", gesture_integration.update_ui_context)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2940
    SQL query detected - ensure parameterized queries are used
    Code: Code: event_bus.subscribe.assert_any_call("config.updated.gesture_integration", gesture_integration.update_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2945
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_update_ui_context(self, gesture_integration):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2950
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test UI context updates."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2955
    SQL query detected - ensure parameterized queries are used
    Code: Code: gesture_integration.update_ui_context(context_event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2960
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_update_config(self, gesture_integration):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2965
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test configuration updates."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2970
    SQL query detected - ensure parameterized queries are used
    Code: Code: gesture_integration.update_config(new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2978
    SQL query detected - ensure parameterized queries are used
    Code: Code: @patch('alejo.ui.pyside_ui.HolographicWidget.update')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2983
    SQL query detected - ensure parameterized queries are used
    Code: Code: def test_event_handler(self, mock_update):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2988
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2996
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3001
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check that config was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3006
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check that brain.update_config was called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3011
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_brain.update_config.assert_called_once_with(alejo_ui.config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3019
    SQL query detected - ensure parameterized queries are used
    Code: Code: service.update_arpeggiator_settings = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3024
    SQL query detected - ensure parameterized queries are used
    Code: Code: service.update_visualizer_settings = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3029
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify arpeggiator settings were updated with Joy parameters
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3034
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_arpeggiator_service.update_arpeggiator_settings.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3039
    SQL query detected - ensure parameterized queries are used
    Code: Code: args = mock_arpeggiator_service.update_arpeggiator_settings.call_args[0][0]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3044
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Verify visualizer settings were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3049
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_arpeggiator_service.update_visualizer_settings.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3054
    SQL query detected - ensure parameterized queries are used
    Code: Code: vis_args = mock_arpeggiator_service.update_visualizer_settings.call_args[0][0]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3059
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_arpeggiator_service.update_arpeggiator_settings.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3064
    SQL query detected - ensure parameterized queries are used
    Code: Code: args = mock_arpeggiator_service.update_arpeggiator_settings.call_args[0][0]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3069
    SQL query detected - ensure parameterized queries are used
    Code: Code: mock_arpeggiator_service.update_arpeggiator_settings.reset_mock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3077
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent.parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3082
    SQL query detected - ensure parameterized queries are used
    Code: Code: "page_title": "Test Page Updated",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3090
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(__file__).parent.parent.parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3098
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3103
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Check that last_used was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3111
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert sent_data["type"] == "config_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3116
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_handle_ui_update(websocket_handler, mock_websocket):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3121
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test handling of UI update events"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3126
    SQL query detected - ensure parameterized queries are used
    Code: Code: "update": {
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3131
    SQL query detected - ensure parameterized queries are used
    Code: Code: await websocket_handler._handle_ui_update(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3136
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert sent_data["type"] == "ui_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3141
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert sent_data["update"] == event["update"]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3146
    SQL query detected - ensure parameterized queries are used
    Code: Code: async def test_handle_config_update(websocket_handler, mock_websocket):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3151
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Test handling of configuration update events"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3156
    SQL query detected - ensure parameterized queries are used
    Code: Code: await websocket_handler._handle_config_update(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3161
    SQL query detected - ensure parameterized queries are used
    Code: Code: assert sent_data["type"] == "config_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3165
    SQL query detected - ensure parameterized queries are used
    Code: File: update_manager.py
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3169
    SQL query detected - ensure parameterized queries are used
    Code: Code: ALEJO Update Manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3174
    SQL query detected - ensure parameterized queries are used
    Code: Code: Automatically checks for and applies updates before ALEJO starts.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3179
    SQL query detected - ensure parameterized queries are used
    Code: Code: logging.FileHandler("alejo_update.log"),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3184
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger = logging.getLogger("alejo.update_manager")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3189
    SQL query detected - ensure parameterized queries are used
    Code: Code: class UpdateManager:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3194
    SQL query detected - ensure parameterized queries are used
    Code: Code: Manages automatic updates for ALEJO system
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3199
    SQL query detected - ensure parameterized queries are used
    Code: Code: This class checks for updates from the main repository and applies them
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3204
    SQL query detected - ensure parameterized queries are used
    Code: Code: Initialize the Update Manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3209
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.update_cache_file = self.alejo_dir / ".update_cache"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3214
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.update_lock_file = self.alejo_dir / ".update_lock"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3219
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.force_update = self.config.get("force_update", False)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3224
    SQL query detected - ensure parameterized queries are used
    Code: Code: def should_check_for_updates(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3229
    SQL query detected - ensure parameterized queries are used
    Code: Code: Determine if we should check for updates based on last check time
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3234
    SQL query detected - ensure parameterized queries are used
    Code: Code: if self.force_update:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3239
    SQL query detected - ensure parameterized queries are used
    Code: Code: if not self.update_cache_file.exists():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3244
    SQL query detected - ensure parameterized queries are used
    Code: Code: with open(self.update_cache_file, "r") as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3249
    SQL query detected - ensure parameterized queries are used
    Code: Code: def update_check_cache(self, update_available=False, version=None):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3254
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Update the cache file with current check information"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3259
    SQL query detected - ensure parameterized queries are used
    Code: Code: "update_available": update_available,
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3264
    SQL query detected - ensure parameterized queries are used
    Code: Code: with open(self.update_cache_file, "w") as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3269
    SQL query detected - ensure parameterized queries are used
    Code: Code: def check_for_updates(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3274
    SQL query detected - ensure parameterized queries are used
    Code: Code: Check if updates are available
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3279
    SQL query detected - ensure parameterized queries are used
    Code: Code: tuple: (update_available, current_version, latest_version)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3284
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.warning("Not a git repository, cannot check for updates")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3289
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Create a lock file to prevent concurrent update checks
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3294
    SQL query detected - ensure parameterized queries are used
    Code: Code: if self.update_lock_file.exists():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3299
    SQL query detected - ensure parameterized queries are used
    Code: Code: if time.time() - os.path.getmtime(self.update_lock_file) > 600:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3304
    SQL query detected - ensure parameterized queries are used
    Code: Code: os.remove(self.update_lock_file)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3309
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Update check already in progress, skipping")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3314
    SQL query detected - ensure parameterized queries are used
    Code: Code: with open(self.update_lock_file, "w") as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3319
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_available = current_version != latest_version
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3324
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.update_check_cache(update_available, current_version)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3329
    SQL query detected - ensure parameterized queries are used
    Code: Code: return update_available, current_version, latest_version
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3334
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.error(f"Error checking for updates: {str(e)}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3339
    SQL query detected - ensure parameterized queries are used
    Code: Code: if self.update_lock_file.exists():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3344
    SQL query detected - ensure parameterized queries are used
    Code: Code: os.remove(self.update_lock_file)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3349
    SQL query detected - ensure parameterized queries are used
    Code: Code: def apply_update(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3354
    SQL query detected - ensure parameterized queries are used
    Code: Code: Apply available updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3359
    SQL query detected - ensure parameterized queries are used
    Code: Code: bool: True if update was successful, False otherwise
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3364
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.warning("Not a git repository, cannot apply updates")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3369
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.error(f"Error pulling updates: {result.stderr}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3374
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update database schema if needed
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3379
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.update_database_schema()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3384
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Update completed successfully")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3389
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.error(f"Error applying update: {str(e)}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3394
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Restore ALEJO from backup in case of update failure"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3399
    SQL query detected - ensure parameterized queries are used
    Code: Code: def update_database_schema(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3404
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Update database schema if necessary"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3409
    SQL query detected - ensure parameterized queries are used
    Code: Code: def run_update_check(self, auto_apply=True):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3414
    SQL query detected - ensure parameterized queries are used
    Code: Code: Run a full update check and optionally apply updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3419
    SQL query detected - ensure parameterized queries are used
    Code: Code: auto_apply: Whether to automatically apply updates if available
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3424
    SQL query detected - ensure parameterized queries are used
    Code: Code: bool: True if system is up to date, False if update failed
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3429
    SQL query detected - ensure parameterized queries are used
    Code: Code: if not self.should_check_for_updates():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3434
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Update check was performed recently, skipping")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3439
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Checking for ALEJO updates")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3444
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_available, current_version, latest_version = self.check_for_updates()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3449
    SQL query detected - ensure parameterized queries are used
    Code: Code: if update_available:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3454
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info(f"Update available: {current_version[:7]} -> {latest_version[:7]}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3459
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Applying update automatically")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3464
    SQL query detected - ensure parameterized queries are used
    Code: Code: return self.apply_update()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3469
    SQL query detected - ensure parameterized queries are used
    Code: Code: logger.info("Update available but not applying automatically")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3474
    SQL query detected - ensure parameterized queries are used
    Code: Code: parser = argparse.ArgumentParser(description="ALEJO Update Manager")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3479
    SQL query detected - ensure parameterized queries are used
    Code: Code: parser.add_argument("--check-only", action="store_true", help="Only check for updates, don't apply them")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3484
    SQL query detected - ensure parameterized queries are used
    Code: Code: parser.add_argument("--force", action="store_true", help="Force update check even if done recently")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3489
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Create update manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3494
    SQL query detected - ensure parameterized queries are used
    Code: Code: config = {"force_update": args.force}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3499
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3504
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Run update check
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3509
    SQL query detected - ensure parameterized queries are used
    Code: Code: update_manager.run_update_check(auto_apply=not args.check_only)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3517
    SQL query detected - ensure parameterized queries are used
    Code: Code: await r.delete(test_key)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3525
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, str(Path(script_path).parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3533
    SQL query detected - ensure parameterized queries are used
    Code: Code: Y]O?gjOEb?0)r   id  r  )r#   r#   gh㈵>g7P>{r   )r#   r#   gh㈵>g7P>0)r   i  	fix_flags)r   r   guR#>g&p>{r   )r   r   guR#>g&p>0)r   i  r   )r   r   g>g+|c?{r   )r   r   g>g+|c?0)rS   rT   rU   )r)   r)   g0D4>g =T?{0)DC:\Users\magic\AppData\Local\Programs\Python\Python39\lib\weakref.pyi   r   )r)   r)   glӎ>g4vxU>{rY   )r)   r)   glӎ>g4vxU>0)r  i"  update)r)   r)   gavt>g:ܳS>{)r  r  r   )r)   r)   gavt>g:ܳS>0)FC:\Users\magic\AppData\Local\Programs\Python\Python39\lib\threading.pyr   RLock)r#   r#   gkNu>gkNu>{rZ   iv  
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3541
    SQL query detected - ensure parameterized queries are used
    Code: Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3546
    SQL query detected - ensure parameterized queries are used
    Code: Code: """Process the command and update the log"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3551
    SQL query detected - ensure parameterized queries are used
    Code: Code: def _update():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3556
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.log_text.insert(tk.END, message + "\n\n", color)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3561
    SQL query detected - ensure parameterized queries are used
    Code: Code: # Update in the main thread
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3566
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.root.after(0, _update)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3571
    SQL query detected - ensure parameterized queries are used
    Code: Code: self.log_text.delete(1.0, tk.END)
    Remediation: Use parameterized queries with placeholders for all user input

[LOW] PseudoRandom line 2294
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: op = random.choice(['command', 'event', 'memory'])
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 2299
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: 'emotional_state': {'valence': random.random()}
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 3579
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: if random.random() < 0.3:  # 30% chance of rate limit
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 3584
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: if random.random() < 0.5:  # 50% chance of network error
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 3592
    Pseudo-random number generator used - not suitable for security purposes
    Code: Code: {"cascade_id": random.randint(1, 1000)}
    Remediation: Use secrets module for security-sensitive randomness needs


File: .update_cache
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 1
    SQL query detected - ensure parameterized queries are used
    Code: {"last_check": "2025-06-30T23:52:42.890553", "update_available": false, "current_version": "abcd1234"}
    Remediation: Use parameterized queries with placeholders for all user input


File: CI_CD.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 33
    SQL query detected - ensure parameterized queries are used
    Code: - Updates services with zero downtime
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 88
    SQL query detected - ensure parameterized queries are used
    Code: - Dependency updates
    Remediation: Use parameterized queries with placeholders for all user input


File: DISTRIBUTED_INTELLIGENCE.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 51
    SQL query detected - ensure parameterized queries are used
    Code: * Regular model updates containing collective insights
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 55
    SQL query detected - ensure parameterized queries are used
    Code: * User control over update frequency and domains
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 73
    SQL query detected - ensure parameterized queries are used
    Code: * Users can delete their local learning data at any time
    Remediation: Use parameterized queries with placeholders for all user input


File: Dockerfile
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 6
    SQL query detected - ensure parameterized queries are used
    Code: RUN apt-get update && apt-get install -y \
    Remediation: Use parameterized queries with placeholders for all user input


File: GESTURE_SYSTEM.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 35
    SQL query detected - ensure parameterized queries are used
    Code: - Manages dynamic UI updates and DOM manipulation for gesture-enabled elements.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 43
    SQL query detected - ensure parameterized queries are used
    Code: - Provides methods to update, enable, or disable elements based on their gesture properties.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 135
    SQL query detected - ensure parameterized queries are used
    Code: - CI/CD pipelines have been updated to include backend validation, integration testing, and security compliance.
    Remediation: Use parameterized queries with placeholders for all user input


File: README.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 47
    SQL query detected - ensure parameterized queries are used
    Code: - **Web Interface**: Modern, responsive web interface with real-time updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 76
    SQL query detected - ensure parameterized queries are used
    Code: - **ServiceRegistry**: Manages service registration and health updates, providing a single source of truth for service status.
    Remediation: Use parameterized queries with placeholders for all user input


File: README_GESTURE_SYSTEM.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 131
    SQL query detected - ensure parameterized queries are used
    Code: 3. Update the frontend UI in `alejo/templates/gesture_enabled_interface.html`
    Remediation: Use parameterized queries with placeholders for all user input


File: README_SECURITY.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 240
    SQL query detected - ensure parameterized queries are used
    Code: {"action": "delete_file"},
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 380
    SQL query detected - ensure parameterized queries are used
    Code: 5. **Updates**: Keep all dependencies up to date.
    Remediation: Use parameterized queries with placeholders for all user input


File: alejo_update.log
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 1
    SQL query detected - ensure parameterized queries are used
    Code: 2025-06-30 23:52:21,057 - alejo.update_manager - INFO - Pulling latest changes from repository
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 2
    SQL query detected - ensure parameterized queries are used
    Code: 2025-06-30 23:52:21,058 - alejo.update_manager - ERROR - Error pulling updates: Failed to pull
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3
    SQL query detected - ensure parameterized queries are used
    Code: 2025-06-30 23:52:21,062 - alejo.update_manager - INFO - Pulling latest changes from repository
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4
    SQL query detected - ensure parameterized queries are used
    Code: 2025-06-30 23:52:21,063 - alejo.update_manager - INFO - Updating dependencies
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 5
    SQL query detected - ensure parameterized queries are used
    Code: 2025-06-30 23:52:21,063 - alejo.update_manager - INFO - Update completed successfully
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 6
    SQL query detected - ensure parameterized queries are used
    Code: 2025-06-30 23:52:21,068 - alejo.update_manager - INFO - Backing up current ALEJO installation to C:\Users\magic\AppData\Local\Temp\alejo_backup_h5jwy8dw
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7
    SQL query detected - ensure parameterized queries are used
    Code: 2025-06-30 23:52:21,083 - alejo.update_manager - INFO - Restoring ALEJO from backup C:\Users\magic\AppData\Local\Temp\alejo_backup_h5jwy8dw
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 8
    SQL query detected - ensure parameterized queries are used
    Code: 2025-06-30 23:52:42,882 - alejo.update_manager - ERROR - Error restoring backup: [WinError 32] The process cannot access the file because it is being used by another process: 'C:\\Users\\magic\\CascadeProjects\\ALEJO\\alejo_update.log'
    Remediation: Use parameterized queries with placeholders for all user input


File: architecture\migration_guide.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 101
    SQL query detected - ensure parameterized queries are used
    Code: - Update references to use the new module
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 106
    SQL query detected - ensure parameterized queries are used
    Code: - Update references to use the new module
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 108
    SQL query detected - ensure parameterized queries are used
    Code: 4. **Update Tests**:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 113
    SQL query detected - ensure parameterized queries are used
    Code: 5. **Update Documentation**:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 115
    SQL query detected - ensure parameterized queries are used
    Code: - Update user guide
    Remediation: Use parameterized queries with placeholders for all user input


File: architecture\package_structure.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 102
    SQL query detected - ensure parameterized queries are used
    Code: 2. Update imports to use package structure
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 120
    SQL query detected - ensure parameterized queries are used
    Code: 3. Update imports to use package structure
    Remediation: Use parameterized queries with placeholders for all user input


File: auto_fix_selenium_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 51
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(self.script_path.parent))
    Remediation: Use parameterized queries with placeholders for all user input


File: bin\alejo-browser-test
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 14
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(Path(__file__).parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input


File: cleanup_processes.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 16
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input


File: direct_gaze_test.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 17
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input


File: docs\ADR\0001_system_architecture.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 15
    SQL query detected - ensure parameterized queries are used
    Code: 5. **Brain Integration**: Update ALEJOBrain and other components to automatically self-register with the ServiceRegistry and intercommunicate via the EventBus.
    Remediation: Use parameterized queries with placeholders for all user input


File: docs\ALEJO_ROBOTICS_INTEGRATION.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 204
    SQL query detected - ensure parameterized queries are used
    Code: - Create secure update mechanisms
    Remediation: Use parameterized queries with placeholders for all user input


File: docs\AUTO_UPDATE_README.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 1
    SQL query detected - ensure parameterized queries are used
    Code: # ALEJO Automatic Update System
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 3
    SQL query detected - ensure parameterized queries are used
    Code: This document explains the automatic update system implemented in ALEJO to ensure users always have the latest security patches and features.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 7
    SQL query detected - ensure parameterized queries are used
    Code: The ALEJO update system performs the following operations:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 9
    SQL query detected - ensure parameterized queries are used
    Code: 1. **Pre-launch Update Check**: Before ALEJO starts, it automatically checks for updates from the main repository.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 10
    SQL query detected - ensure parameterized queries are used
    Code: 2. **Secure Update Process**:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 11
    SQL query detected - ensure parameterized queries are used
    Code: - Creates a backup of the current installation before applying any updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 12
    SQL query detected - ensure parameterized queries are used
    Code: - Updates the codebase from the repository
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 13
    SQL query detected - ensure parameterized queries are used
    Code: - Updates dependencies if necessary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 15
    SQL query detected - ensure parameterized queries are used
    Code: - Rolls back to the backup if any errors occur during the update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 16
    SQL query detected - ensure parameterized queries are used
    Code: 3. **Scheduled Checks**: Updates are checked at configurable intervals (default: every 4 hours) to avoid excessive network traffic.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 20
    SQL query detected - ensure parameterized queries are used
    Code: The update system works automatically and requires no user intervention. However, several command-line options are available:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 23
    SQL query detected - ensure parameterized queries are used
    Code: # Normal startup with automatic update check
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 26
    SQL query detected - ensure parameterized queries are used
    Code: # Skip update check during startup
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 27
    SQL query detected - ensure parameterized queries are used
    Code: python start_alejo_with_gestures.py --skip-updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 29
    SQL query detected - ensure parameterized queries are used
    Code: # Manually check for updates without starting ALEJO
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 30
    SQL query detected - ensure parameterized queries are used
    Code: python update_manager.py --check-only
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 32
    SQL query detected - ensure parameterized queries are used
    Code: # Force update check regardless of when the last check occurred
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 33
    SQL query detected - ensure parameterized queries are used
    Code: python update_manager.py --force
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 38
    SQL query detected - ensure parameterized queries are used
    Code: The update system can be configured through environment variables:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 42
    SQL query detected - ensure parameterized queries are used
    Code: - `ALEJO_UPDATE_INTERVAL`: Set the minimum hours between update checks (default: 4)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 46
    SQL query detected - ensure parameterized queries are used
    Code: If you encounter issues with the automatic update system:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 48
    SQL query detected - ensure parameterized queries are used
    Code: 1. Check the log file (`alejo_update.log`) for detailed error messages
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 49
    SQL query detected - ensure parameterized queries are used
    Code: 2. Try running a manual update with `python update_manager.py --force`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 50
    SQL query detected - ensure parameterized queries are used
    Code: 3. If updates consistently fail, you can bypass them with `--skip-updates` and update manually
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 54
    SQL query detected - ensure parameterized queries are used
    Code: The automatic update system enhances ALEJO's security by ensuring users always have the latest security patches. The system:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 57
    SQL query detected - ensure parameterized queries are used
    Code: - Creates backups before applying updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 59
    SQL query detected - ensure parameterized queries are used
    Code: - Maintains a log of all update operations
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 63
    SQL query detected - ensure parameterized queries are used
    Code: To extend or modify the update system:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 65
    SQL query detected - ensure parameterized queries are used
    Code: 1. The core functionality is in `update_manager.py`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 66
    SQL query detected - ensure parameterized queries are used
    Code: 2. Test cases are available in `test_update_manager.py`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 67
    SQL query detected - ensure parameterized queries are used
    Code: 3. The update system is integrated into ALEJO's startup process in `start_alejo_with_gestures.py`
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 72
    SQL query detected - ensure parameterized queries are used
    Code: python -m unittest test_update_manager.py
    Remediation: Use parameterized queries with placeholders for all user input


File: docs\SPINNAKER_NEUROMORPHIC_IMPLEMENTATION.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 194
    SQL query detected - ensure parameterized queries are used
    Code: - **Event-Driven Updates**: Computing only when necessary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 246
    SQL query detected - ensure parameterized queries are used
    Code: - **Processing Efficiency**: Neural updates per second
    Remediation: Use parameterized queries with placeholders for all user input


File: docs\architecture_review.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 15
    SQL query detected - ensure parameterized queries are used
    Code: - **Modularity**: Components are well-separated, making it easier to update individual parts.
    Remediation: Use parameterized queries with placeholders for all user input


File: docs\plugin_development_guide.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 243
    SQL query detected - ensure parameterized queries are used
    Code: - Update plugins to compatible versions
    Remediation: Use parameterized queries with placeholders for all user input


File: examples\browser_testing_example.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 14
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(Path(__file__).parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input


File: fix_common_issues.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 221
    SQL query detected - ensure parameterized queries are used
    Code: # Insert before the first import
    Remediation: Use parameterized queries with placeholders for all user input


File: fix_js_issues.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 121
    SQL query detected - ensure parameterized queries are used
    Code: # Find a good place to insert the polyfill
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 122
    SQL query detected - ensure parameterized queries are used
    Code: # Try to insert after imports or at the beginning of the file
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 130
    SQL query detected - ensure parameterized queries are used
    Code: # Insert at the beginning of the file
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 182
    SQL query detected - ensure parameterized queries are used
    Code: # Insert catch block before the last closing brace
    Remediation: Use parameterized queries with placeholders for all user input


File: fix_localstorage_issues.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 197
    SQL query detected - ensure parameterized queries are used
    Code: # Find a good place to insert the wrapper
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 202
    SQL query detected - ensure parameterized queries are used
    Code: # Insert after script tag
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 203
    SQL query detected - ensure parameterized queries are used
    Code: insert_pos = script_tag_match.end()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 204
    SQL query detected - ensure parameterized queries are used
    Code: content = content[:insert_pos] + secure_storage_wrapper + content[insert_pos:]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 206
    SQL query detected - ensure parameterized queries are used
    Code: # Insert after imports
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 207
    SQL query detected - ensure parameterized queries are used
    Code: insert_pos = import_match.end()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 208
    SQL query detected - ensure parameterized queries are used
    Code: content = content[:insert_pos] + secure_storage_wrapper + content[insert_pos:]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 210
    SQL query detected - ensure parameterized queries are used
    Code: # Insert at the beginning with a comment explaining
    Remediation: Use parameterized queries with placeholders for all user input


File: fix_random_issues.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 138
    SQL query detected - ensure parameterized queries are used
    Code: modified_lines.insert(import_section_end, "import secrets  # More secure for cryptographic purposes")
    Remediation: Use parameterized queries with placeholders for all user input

[LOW] PseudoRandom line 91
    Pseudo-random number generator used - not suitable for security purposes
    Code: # Replace random.random() with secrets.randbelow() / 2**32 or similar
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 98
    Pseudo-random number generator used - not suitable for security purposes
    Code: # Replace random.randint with secrets.randbelow
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 107
    Pseudo-random number generator used - not suitable for security purposes
    Code: # Replace random.choice with secrets.choice
    Remediation: Use secrets module for security-sensitive randomness needs


File: installer.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 125
    SQL query detected - ensure parameterized queries are used
    Code: progress_bar.update(len(data))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 160
    SQL query detected - ensure parameterized queries are used
    Code: sha256_hash.update(byte_block)
    Remediation: Use parameterized queries with placeholders for all user input


File: k8s\README.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 136
    SQL query detected - ensure parameterized queries are used
    Code: 1. Update images:
    Remediation: Use parameterized queries with placeholders for all user input


File: k8s\monitoring\README.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 124
    SQL query detected - ensure parameterized queries are used
    Code: 1. Update Istio:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 129
    SQL query detected - ensure parameterized queries are used
    Code: 2. Update monitoring stack:
    Remediation: Use parameterized queries with placeholders for all user input


File: logs\error_log.json
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 15
    SQL query detected - ensure parameterized queries are used
    Code: "last_updated": "2025-06-17T06:34:00.742317"
    Remediation: Use parameterized queries with placeholders for all user input


File: logs\optimization.log
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 32
    SQL query detected - ensure parameterized queries are used
    Code: 2025-06-11 07:31:08,226 - __main__ - INFO - Updated index.html
    Remediation: Use parameterized queries with placeholders for all user input


File: optimization_priorities.md
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 87
    SQL query detected - ensure parameterized queries are used
    Code: 1. Review and update priorities weekly
    Remediation: Use parameterized queries with placeholders for all user input


File: optimize_performance.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 83
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(self.project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 132
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(self.project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 243
    SQL query detected - ensure parameterized queries are used
    Code: # Update results
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 313
    SQL query detected - ensure parameterized queries are used
    Code: # Update results
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 323
    SQL query detected - ensure parameterized queries are used
    Code: def update_html_references(self, js_dir, css_dir):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 324
    SQL query detected - ensure parameterized queries are used
    Code: """Update HTML templates to use optimized files"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 365
    SQL query detected - ensure parameterized queries are used
    Code: # Update JS references
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 385
    SQL query detected - ensure parameterized queries are used
    Code: # Update CSS references
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 405
    SQL query detected - ensure parameterized queries are used
    Code: # Write updated content
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 409
    SQL query detected - ensure parameterized queries are used
    Code: logger.info(f"Updated {html_file.name}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 524
    SQL query detected - ensure parameterized queries are used
    Code: # Update HTML references
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 526
    SQL query detected - ensure parameterized queries are used
    Code: optimizer.update_html_references(js_dir, css_dir)
    Remediation: Use parameterized queries with placeholders for all user input


File: preview_alejo.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 298
    SQL query detected - ensure parameterized queries are used
    Code: # Send status updates
    Remediation: Use parameterized queries with placeholders for all user input


File: run_alejo_optimized.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 193
    SQL query detected - ensure parameterized queries are used
    Code: logger.warning(f"{env_file} already exists. Please delete it first if you want to create a new one.")
    Remediation: Use parameterized queries with placeholders for all user input


File: run_comprehensive_tests.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 41
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(PROJECT_ROOT))
    Remediation: Use parameterized queries with placeholders for all user input


File: run_gaze_test.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 16
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input


File: run_integration_tests.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 9
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.dirname(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input


File: run_tests.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 11
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input


File: scripts\apply_improvements.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 19
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(Path(__file__).resolve().parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 97
    SQL query detected - ensure parameterized queries are used
    Code: # Update improvements status in data manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 99
    SQL query detected - ensure parameterized queries are used
    Code: await data_manager.update_improvements(applied_improvements)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 100
    SQL query detected - ensure parameterized queries are used
    Code: logger.info(f"Updated status for {len(applied_improvements)} improvements")
    Remediation: Use parameterized queries with placeholders for all user input


File: scripts\benchmark_performance.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 23
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, project_root)
    Remediation: Use parameterized queries with placeholders for all user input


File: scripts\generate_improvements.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 20
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(Path(__file__).resolve().parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input


File: scripts\model_fetcher.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 26
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(script_dir.parent))
    Remediation: Use parameterized queries with placeholders for all user input


File: scripts\process_insights.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 20
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(Path(__file__).resolve().parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input


File: scripts\run_integration_tests.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 17
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input


File: scripts\setup_test_env.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 88
    SQL query detected - ensure parameterized queries are used
    Code: """Update test configuration"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 94
    SQL query detected - ensure parameterized queries are used
    Code: # Update database paths in config
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 107
    SQL query detected - ensure parameterized queries are used
    Code: logger.info("Updated test configuration")
    Remediation: Use parameterized queries with placeholders for all user input


File: scripts\smoke_test.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 23
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(PROJECT_ROOT))
    Remediation: Use parameterized queries with placeholders for all user input


File: secure_alejo.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 82
    SQL query detected - ensure parameterized queries are used
    Code: # Update config with file values
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 83
    SQL query detected - ensure parameterized queries are used
    Code: self._update_dict(config, file_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 95
    SQL query detected - ensure parameterized queries are used
    Code: def _update_dict(self, target: Dict, source: Dict) -> None:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 97
    SQL query detected - ensure parameterized queries are used
    Code: Recursively update dictionary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 105
    SQL query detected - ensure parameterized queries are used
    Code: self._update_dict(target[key], value)
    Remediation: Use parameterized queries with placeholders for all user input


File: start_alejo_with_gestures.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 18
    SQL query detected - ensure parameterized queries are used
    Code: # Import update manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 20
    SQL query detected - ensure parameterized queries are used
    Code: from update_manager import UpdateManager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 21
    SQL query detected - ensure parameterized queries are used
    Code: UPDATE_MANAGER_AVAILABLE = True
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 23
    SQL query detected - ensure parameterized queries are used
    Code: UPDATE_MANAGER_AVAILABLE = False
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 96
    SQL query detected - ensure parameterized queries are used
    Code: # Add update-related command line arguments
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 98
    SQL query detected - ensure parameterized queries are used
    Code: "--skip-updates",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 100
    SQL query detected - ensure parameterized queries are used
    Code: help="Skip checking for updates before starting"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 416
    SQL query detected - ensure parameterized queries are used
    Code: # Check for updates before starting services
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 417
    SQL query detected - ensure parameterized queries are used
    Code: if UPDATE_MANAGER_AVAILABLE and not args.skip_updates:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 418
    SQL query detected - ensure parameterized queries are used
    Code: logger.info("Checking for ALEJO updates...")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 420
    SQL query detected - ensure parameterized queries are used
    Code: update_manager = UpdateManager()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 421
    SQL query detected - ensure parameterized queries are used
    Code: update_success = update_manager.run_update_check(auto_apply=True)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 422
    SQL query detected - ensure parameterized queries are used
    Code: if not update_success:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 423
    SQL query detected - ensure parameterized queries are used
    Code: logger.error("Update process encountered errors. Starting with current version.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 425
    SQL query detected - ensure parameterized queries are used
    Code: logger.info("Update check completed successfully.")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 427
    SQL query detected - ensure parameterized queries are used
    Code: logger.error(f"Error during update process: {str(e)}")
    Remediation: Use parameterized queries with placeholders for all user input


File: test_component.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 35
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(PROJECT_ROOT))
    Remediation: Use parameterized queries with placeholders for all user input


File: test_event_bus.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 10
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input


File: test_gesture_docker.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 197
    SQL query detected - ensure parameterized queries are used
    Code: # Update the timestamp
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 285
    SQL query detected - ensure parameterized queries are used
    Code: # Update default URLs if provided
    Remediation: Use parameterized queries with placeholders for all user input


File: test_gesture_system.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 99
    SQL query detected - ensure parameterized queries are used
    Code: # Update the timestamp
    Remediation: Use parameterized queries with placeholders for all user input


File: test_resource_management.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 110
    SQL query detected - ensure parameterized queries are used
    Code: # Check updated allocations
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 113
    SQL query detected - ensure parameterized queries are used
    Code: logger.info(f"Updated allocations: {allocations}")
    Remediation: Use parameterized queries with placeholders for all user input


File: test_update_manager.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 3
    SQL query detected - ensure parameterized queries are used
    Code: Test script for ALEJO Update Manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4
    SQL query detected - ensure parameterized queries are used
    Code: This script tests the functionality of the update manager to ensure it works correctly.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 16
    SQL query detected - ensure parameterized queries are used
    Code: # Import the update manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 18
    SQL query detected - ensure parameterized queries are used
    Code: from update_manager import UpdateManager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 21
    SQL query detected - ensure parameterized queries are used
    Code: class TestUpdateManager(unittest.TestCase):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 22
    SQL query detected - ensure parameterized queries are used
    Code: """Test cases for the ALEJO Update Manager"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 27
    SQL query detected - ensure parameterized queries are used
    Code: self.test_dir = tempfile.mkdtemp(prefix="alejo_update_test_")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 39
    SQL query detected - ensure parameterized queries are used
    Code: "force_update": True
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 53
    SQL query detected - ensure parameterized queries are used
    Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 54
    SQL query detected - ensure parameterized queries are used
    Code: self.assertTrue(update_manager.is_git_repo())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 58
    SQL query detected - ensure parameterized queries are used
    Code: self.assertFalse(update_manager.is_git_repo())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 61
    SQL query detected - ensure parameterized queries are used
    Code: def test_check_for_updates_no_updates(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 62
    SQL query detected - ensure parameterized queries are used
    Code: """Test checking for updates when none are available"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 73
    SQL query detected - ensure parameterized queries are used
    Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 74
    SQL query detected - ensure parameterized queries are used
    Code: update_available, current, latest = update_manager.check_for_updates()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 76
    SQL query detected - ensure parameterized queries are used
    Code: self.assertFalse(update_available)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 81
    SQL query detected - ensure parameterized queries are used
    Code: def test_check_for_updates_available(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 82
    SQL query detected - ensure parameterized queries are used
    Code: """Test checking for updates when updates are available"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 93
    SQL query detected - ensure parameterized queries are used
    Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 94
    SQL query detected - ensure parameterized queries are used
    Code: update_available, current, latest = update_manager.check_for_updates()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 96
    SQL query detected - ensure parameterized queries are used
    Code: self.assertTrue(update_available)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 105
    SQL query detected - ensure parameterized queries are used
    Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 115
    SQL query detected - ensure parameterized queries are used
    Code: backup_dir = update_manager.backup_current_version()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 123
    SQL query detected - ensure parameterized queries are used
    Code: update_manager.restore_backup(backup_dir)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 126
    SQL query detected - ensure parameterized queries are used
    Code: def test_apply_update_success(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 127
    SQL query detected - ensure parameterized queries are used
    Code: """Test successful update application"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 131
    SQL query detected - ensure parameterized queries are used
    Code: mock.Mock(stdout="Updated files", stderr="", returncode=0),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 136
    SQL query detected - ensure parameterized queries are used
    Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 140
    SQL query detected - ensure parameterized queries are used
    Code: UpdateManager, 'backup_current_version',
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 143
    SQL query detected - ensure parameterized queries are used
    Code: # Create requirements.txt for testing dependency updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 147
    SQL query detected - ensure parameterized queries are used
    Code: result = update_manager.apply_update()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 151
    SQL query detected - ensure parameterized queries are used
    Code: def test_apply_update_failure(self, mock_run):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 152
    SQL query detected - ensure parameterized queries are used
    Code: """Test failed update application"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 159
    SQL query detected - ensure parameterized queries are used
    Code: update_manager = UpdateManager(self.test_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 163
    SQL query detected - ensure parameterized queries are used
    Code: UpdateManager, 'backup_current_version',
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 166
    SQL query detected - ensure parameterized queries are used
    Code: with mock.patch.object(UpdateManager, 'restore_backup') as mock_restore:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 167
    SQL query detected - ensure parameterized queries are used
    Code: result = update_manager.apply_update()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 172
    SQL query detected - ensure parameterized queries are used
    Code: def test_should_check_for_updates(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 173
    SQL query detected - ensure parameterized queries are used
    Code: """Test the logic for determining if updates should be checked"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 174
    SQL query detected - ensure parameterized queries are used
    Code: # Force update should always return True
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 175
    SQL query detected - ensure parameterized queries are used
    Code: config = {"force_update": True, "check_interval_hours": 24}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 176
    SQL query detected - ensure parameterized queries are used
    Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 177
    SQL query detected - ensure parameterized queries are used
    Code: self.assertTrue(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 180
    SQL query detected - ensure parameterized queries are used
    Code: config = {"force_update": False, "check_interval_hours": 24}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 181
    SQL query detected - ensure parameterized queries are used
    Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 182
    SQL query detected - ensure parameterized queries are used
    Code: self.assertTrue(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 185
    SQL query detected - ensure parameterized queries are used
    Code: update_manager.update_check_cache()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 186
    SQL query detected - ensure parameterized queries are used
    Code: self.assertFalse(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 189
    SQL query detected - ensure parameterized queries are used
    Code: config = {"force_update": False, "check_interval_hours": 0}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 190
    SQL query detected - ensure parameterized queries are used
    Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 191
    SQL query detected - ensure parameterized queries are used
    Code: update_manager.update_check_cache()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 192
    SQL query detected - ensure parameterized queries are used
    Code: self.assertTrue(update_manager.should_check_for_updates())
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\benchmarks\test_emotional_benchmarks.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 131
    SQL query detected - ensure parameterized queries are used
    Code: # Test state updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 146
    SQL query detected - ensure parameterized queries are used
    Code: operation="update_state",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 149
    SQL query detected - ensure parameterized queries are used
    Code: async def update_state():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 150
    SQL query detected - ensure parameterized queries are used
    Code: await emotional_core.update_emotional_state(test_input)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 152
    SQL query detected - ensure parameterized queries are used
    Code: update_result = await update_state()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 153
    SQL query detected - ensure parameterized queries are used
    Code: assert update_result.mean_time < 0.02, "State update too slow"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 195
    SQL query detected - ensure parameterized queries are used
    Code: emotional_core.update_emotional_state({
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\brain\test_proactive_dialogue.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 99
    SQL query detected - ensure parameterized queries are used
    Code: # Verify emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 100
    SQL query detected - ensure parameterized queries are used
    Code: brain.emotional_processor.update_emotional_state.assert_called()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 181
    SQL query detected - ensure parameterized queries are used
    Code: # Should update emotional state and respond empathetically
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 182
    SQL query detected - ensure parameterized queries are used
    Code: brain.emotional_processor.update_emotional_state.assert_called()
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\cognitive\multimodal\test_brain_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 15
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 200
    SQL query detected - ensure parameterized queries are used
    Code: async def test_brain_context_update(multimodal_integration, mock_brain, temp_image):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 209
    SQL query detected - ensure parameterized queries are used
    Code: # Check that brain context was updated
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\cognitive\multimodal\test_multimodal_processor.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 15
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\cognitive\retrieval\test_brain_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 15
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\cognitive\retrieval\test_hybrid_retrieval.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 15
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..')))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\cognitive\test_learning_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 118
    SQL query detected - ensure parameterized queries are used
    Code: await event_bus.subscribe(EventType.ADAPTATION_UPDATED, collect_events)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 128
    SQL query detected - ensure parameterized queries are used
    Code: assert any(e.type == EventType.ADAPTATION_UPDATED for e in events)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 131
    SQL query detected - ensure parameterized queries are used
    Code: adaptation_event = next(e for e in events if e.type == EventType.ADAPTATION_UPDATED)
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\cognitive\test_proactive_cognition.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 155
    SQL query detected - ensure parameterized queries are used
    Code: # Verify emotional trajectory was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 191
    SQL query detected - ensure parameterized queries are used
    Code: # Verify topic was updated and depth reset
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 281
    SQL query detected - ensure parameterized queries are used
    Code: def test_update_configuration(self, proactive_engine, mock_config_manager):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 290
    SQL query detected - ensure parameterized queries are used
    Code: # Update configuration
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 291
    SQL query detected - ensure parameterized queries are used
    Code: proactive_engine.update_configuration(new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 293
    SQL query detected - ensure parameterized queries are used
    Code: # Verify configuration was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 298
    SQL query detected - ensure parameterized queries are used
    Code: # Verify config manager was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 299
    SQL query detected - ensure parameterized queries are used
    Code: mock_config_manager.update_config.assert_called_once_with("cognitive", new_config)
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\collective\test_improvement_engine.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 51
    SQL query detected - ensure parameterized queries are used
    Code: manager.update_improvement_status = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 296
    SQL query detected - ensure parameterized queries are used
    Code: data_manager.update_improvement_status.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 312
    SQL query detected - ensure parameterized queries are used
    Code: data_manager.update_improvement_status.assert_not_called()
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\components\emotional_intelligence\test_emotion_recognition.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 11
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\conftest.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 16
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\core\test_brain_extensions.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 15
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\core\test_code_healing.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 44
    SQL query detected - ensure parameterized queries are used
    Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 167
    SQL query detected - ensure parameterized queries are used
    Code: mock_repo.return_value.delete_head.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 212
    SQL query detected - ensure parameterized queries are used
    Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 234
    SQL query detected - ensure parameterized queries are used
    Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 247
    SQL query detected - ensure parameterized queries are used
    Code: with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\core\test_event_bus.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 27
    SQL query detected - ensure parameterized queries are used
    Code: Event(EventType.SYSTEM, {"status": "System update"}, priority=2),
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\core\test_service_mesh_advanced.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 87
    SQL query detected - ensure parameterized queries are used
    Code: """Test advanced health check metrics and updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 108
    SQL query detected - ensure parameterized queries are used
    Code: # Verify health metrics were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 173
    SQL query detected - ensure parameterized queries are used
    Code: service_mesh._service_dependencies.update({
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\core\test_service_mesh_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 62
    SQL query detected - ensure parameterized queries are used
    Code: if event.data.get("action") == "health_update":
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 86
    SQL query detected - ensure parameterized queries are used
    Code: assert event.data["action"] == "health_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 105
    SQL query detected - ensure parameterized queries are used
    Code: if event.data.get("action") == "dependency_update":
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 131
    SQL query detected - ensure parameterized queries are used
    Code: # Mock health checks to update dependencies
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\core\test_service_registry.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 131
    SQL query detected - ensure parameterized queries are used
    Code: async def test_service_updates_subscription(registry):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 132
    SQL query detected - ensure parameterized queries are used
    Code: """Test service update notifications"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 141
    SQL query detected - ensure parameterized queries are used
    Code: # Subscribe to updates
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\e2e\test_gesture_interface.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 87
    SQL query detected - ensure parameterized queries are used
    Code: # Wait for the feedback to update
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\e2e\test_ui_e2e.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 23
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 247
    SQL query detected - ensure parameterized queries are used
    Code: # Wait for sentiment score to update
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\emotional_intelligence\test_adaptive_processor_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 79
    SQL query detected - ensure parameterized queries are used
    Code: type=EventType.EMOTIONAL_STATE_UPDATE,
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 150
    SQL query detected - ensure parameterized queries are used
    Code: events = event_bus.get_recent_events(EventType.EMOTIONAL_STATE_UPDATE)
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\emotional_intelligence\test_emotional_core.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 74
    SQL query detected - ensure parameterized queries are used
    Code: # Verify personality traits were updated
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\emotional_intelligence\test_emotional_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 117
    SQL query detected - ensure parameterized queries are used
    Code: # Simulate an emotional state update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 121
    SQL query detected - ensure parameterized queries are used
    Code: "action": "state_update",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 133
    SQL query detected - ensure parameterized queries are used
    Code: # Verify emotional processor was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 134
    SQL query detected - ensure parameterized queries are used
    Code: assert emotional_integration.emotional_processor.update_emotional_state.called
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\emotional_intelligence\test_emotional_memory.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 5
    SQL query detected - ensure parameterized queries are used
    Code: interaction storage, relationship updates, value system storage, and event handling.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 92
    SQL query detected - ensure parameterized queries are used
    Code: # Verify that the state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 137
    SQL query detected - ensure parameterized queries are used
    Code: # Verify that the state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 142
    SQL query detected - ensure parameterized queries are used
    Code: async def test_update_relationship(self, emotional_memory, event_bus, memory_service):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 147
    SQL query detected - ensure parameterized queries are used
    Code: # Update relationship
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 148
    SQL query detected - ensure parameterized queries are used
    Code: await emotional_memory.update_relationship(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 154
    SQL query detected - ensure parameterized queries are used
    Code: memory_service.update_relationship_metrics.assert_called_once_with(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 161
    SQL query detected - ensure parameterized queries are used
    Code: assert event_bus.emit.call_count == 2  # First for init, second for update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 163
    SQL query detected - ensure parameterized queries are used
    Code: assert args[0] == "emotional.memory.relationship_updated"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 188
    SQL query detected - ensure parameterized queries are used
    Code: assert args[0] == "emotional.memory.value_updated"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 192
    SQL query detected - ensure parameterized queries are used
    Code: # Verify that the value was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 383
    SQL query detected - ensure parameterized queries are used
    Code: # Verify that the state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 393
    SQL query detected - ensure parameterized queries are used
    Code: # Test emotional update handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 407
    SQL query detected - ensure parameterized queries are used
    Code: await emotional_memory._handle_emotional_update(event_data)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 425
    SQL query detected - ensure parameterized queries are used
    Code: memory_service.update_relationship_metrics.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 427
    SQL query detected - ensure parameterized queries are used
    Code: # Test value update handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 437
    SQL query detected - ensure parameterized queries are used
    Code: await emotional_memory._handle_value_update(event_data)
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\emotional_intelligence\test_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 15
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 404
    SQL query detected - ensure parameterized queries are used
    Code: # Test update_emotional_memory event handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 405
    SQL query detected - ensure parameterized queries are used
    Code: result = await emotional_integration._handle_update_emotional_memory({
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\emotional_intelligence\test_proactive_dialogue.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 147
    SQL query detected - ensure parameterized queries are used
    Code: # Verify memory update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 198
    SQL query detected - ensure parameterized queries are used
    Code: # Verify interaction timing updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 201
    SQL query detected - ensure parameterized queries are used
    Code: # Verify memory and learning updates
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\ethical\test_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 15
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 80
    SQL query detected - ensure parameterized queries are used
    Code: def update_principle_weight(self, principle, weight):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 81
    SQL query detected - ensure parameterized queries are used
    Code: """Update principle weight"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 204
    SQL query detected - ensure parameterized queries are used
    Code: async def test_update_ethical_principle(ethical_integration, mock_ethical_framework):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 206
    SQL query detected - ensure parameterized queries are used
    Code: # Test valid update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 207
    SQL query detected - ensure parameterized queries are used
    Code: result = await ethical_integration.update_ethical_principle(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 219
    SQL query detected - ensure parameterized queries are used
    Code: result = await ethical_integration.update_ethical_principle(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 229
    SQL query detected - ensure parameterized queries are used
    Code: with patch.object(mock_ethical_framework, 'update_principle_weight', side_effect=ValueError("Unknown principle")):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 230
    SQL query detected - ensure parameterized queries are used
    Code: result = await ethical_integration.update_ethical_principle(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 278
    SQL query detected - ensure parameterized queries are used
    Code: # Test update_ethical_principle event handler
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 279
    SQL query detected - ensure parameterized queries are used
    Code: result = await ethical_integration._handle_update_ethical_principle({
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\gesture\test_gesture_e2e.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 18
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\gesture\test_gesture_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 15
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\gesture\test_gesture_unit.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 16
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 193
    SQL query detected - ensure parameterized queries are used
    Code: def test_delete_preset(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 199
    SQL query detected - ensure parameterized queries are used
    Code: # Delete the preset
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 200
    SQL query detected - ensure parameterized queries are used
    Code: self.preset_manager.delete_preset(test_preset["name"])
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 202
    SQL query detected - ensure parameterized queries are used
    Code: # Verify the preset was deleted
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\integration\test_brain_emotional_memory.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 37
    SQL query detected - ensure parameterized queries are used
    Code: temp_db = tempfile.NamedTemporaryFile(delete=False, suffix='.db')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 101
    SQL query detected - ensure parameterized queries are used
    Code: async def test_emotional_state_update_from_llm_response(self, brain, event_bus):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 102
    SQL query detected - ensure parameterized queries are used
    Code: """Test that emotional state is updated from LLM responses."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 125
    SQL query detected - ensure parameterized queries are used
    Code: # Verify that the emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 157
    SQL query detected - ensure parameterized queries are used
    Code: async def test_relationship_update_after_interaction(self, brain):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 158
    SQL query detected - ensure parameterized queries are used
    Code: """Test that relationship metrics are updated after interactions."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 162
    SQL query detected - ensure parameterized queries are used
    Code: # Mock the emotional processor and update_relationship
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 170
    SQL query detected - ensure parameterized queries are used
    Code: }), patch.object(brain.emotional_memory, 'update_relationship', AsyncMock()) as mock_update:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 175
    SQL query detected - ensure parameterized queries are used
    Code: # Verify that update_relationship was called with positive deltas
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 176
    SQL query detected - ensure parameterized queries are used
    Code: mock_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 177
    SQL query detected - ensure parameterized queries are used
    Code: args, kwargs = mock_update.call_args
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 213
    SQL query detected - ensure parameterized queries are used
    Code: # Emit a value update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 214
    SQL query detected - ensure parameterized queries are used
    Code: await brain.event_bus.emit("value.update", {
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 303
    SQL query detected - ensure parameterized queries are used
    Code: # Mock update_relationship
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 304
    SQL query detected - ensure parameterized queries are used
    Code: with patch.object(brain.emotional_memory, 'update_relationship', AsyncMock()) as mock_update:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 308
    SQL query detected - ensure parameterized queries are used
    Code: # Verify that update_relationship was called to save final state
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 309
    SQL query detected - ensure parameterized queries are used
    Code: mock_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\integration\test_brain_emotional_memory_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 17
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 127
    SQL query detected - ensure parameterized queries are used
    Code: self.assertIn("emotional.update", self.event_bus._subscribers)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 145
    SQL query detected - ensure parameterized queries are used
    Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 154
    SQL query detected - ensure parameterized queries are used
    Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 180
    SQL query detected - ensure parameterized queries are used
    Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 191
    SQL query detected - ensure parameterized queries are used
    Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 218
    SQL query detected - ensure parameterized queries are used
    Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 234
    SQL query detected - ensure parameterized queries are used
    Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 255
    SQL query detected - ensure parameterized queries are used
    Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 288
    SQL query detected - ensure parameterized queries are used
    Code: self.brain.emotional_memory._handle_emotional_update = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 290
    SQL query detected - ensure parameterized queries are used
    Code: # Emit an emotional update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 291
    SQL query detected - ensure parameterized queries are used
    Code: await self.event_bus.emit("emotional.update", {"emotion": "joy", "value": 0.8})
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 294
    SQL query detected - ensure parameterized queries are used
    Code: self.brain.emotional_memory._handle_emotional_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 304
    SQL query detected - ensure parameterized queries are used
    Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 314
    SQL query detected - ensure parameterized queries are used
    Code: self.brain.emotional_memory.update_relationship.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\integration\test_brain_emotional_processor.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 16
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 144
    SQL query detected - ensure parameterized queries are used
    Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\integration\test_brain_ethical_framework.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 16
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 119
    SQL query detected - ensure parameterized queries are used
    Code: self.brain.emotional_memory.update_relationship = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 153
    SQL query detected - ensure parameterized queries are used
    Code: self.assertIn("emotional.update", self.event_bus._subscribers)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 265
    SQL query detected - ensure parameterized queries are used
    Code: # Emit an emotional update event
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 266
    SQL query detected - ensure parameterized queries are used
    Code: await self.event_bus.emit("emotional.update", {"emotion": "anger", "value": 0.8})
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 351
    SQL query detected - ensure parameterized queries are used
    Code: async def update_value_system():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 355
    SQL query detected - ensure parameterized queries are used
    Code: self.brain.ethical_framework.update_value_system = AsyncMock(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 356
    SQL query detected - ensure parameterized queries are used
    Code: side_effect=update_value_system
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 359
    SQL query detected - ensure parameterized queries are used
    Code: # Update value system
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 360
    SQL query detected - ensure parameterized queries are used
    Code: await self.brain.ethical_framework.update_value_system()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 362
    SQL query detected - ensure parameterized queries are used
    Code: # Verify that value system was updated
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\integration\test_brain_multimodal_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 20
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\integration\test_extended_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 18
    SQL query detected - ensure parameterized queries are used
    Code: """Test that a service is auto-deregistered if not updated within the threshold
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 19
    SQL query detected - ensure parameterized queries are used
    Code: and validate that the DatabaseManager can insert and fetch interactions."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 24
    SQL query detected - ensure parameterized queries are used
    Code: # Simulate that the service's last update occurred sufficiently in the past
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 39
    SQL query detected - ensure parameterized queries are used
    Code: # Insert an interaction record
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 41
    SQL query detected - ensure parameterized queries are used
    Code: db.insert_interaction(test_data)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 48
    SQL query detected - ensure parameterized queries are used
    Code: assert record_found, "The inserted interaction data should be found in the database"
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\integration\test_service_auto_deregistration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 16
    SQL query detected - ensure parameterized queries are used
    Code: """Test that a service is auto-deregistered if no health update occurs within the threshold."""
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\learning\test_self_improvement.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 212
    SQL query detected - ensure parameterized queries are used
    Code: EventType.SYSTEM_IMPROVEMENT_UPDATE,
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 228
    SQL query detected - ensure parameterized queries are used
    Code: assert all(e.type == EventType.SYSTEM_IMPROVEMENT_UPDATE for e in events_received)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 232
    SQL query detected - ensure parameterized queries are used
    Code: async def test_analyze_and_update_error_patterns(improvement_system):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 233
    SQL query detected - ensure parameterized queries are used
    Code: """Test error pattern analysis and strategy updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 246
    SQL query detected - ensure parameterized queries are used
    Code: await improvement_system._analyze_and_update_error_patterns()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 250
    SQL query detected - ensure parameterized queries are used
    Code: improvement_system.error_tracker.update_recovery_strategy.assert_called_once_with(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 261
    SQL query detected - ensure parameterized queries are used
    Code: async def test_analyze_and_update_emotional_patterns(improvement_system):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 262
    SQL query detected - ensure parameterized queries are used
    Code: """Test emotional pattern analysis and parameter updates"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 275
    SQL query detected - ensure parameterized queries are used
    Code: await improvement_system._analyze_and_update_emotional_patterns()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 279
    SQL query detected - ensure parameterized queries are used
    Code: improvement_system.emotional_core.update_response_parameters.assert_called_once_with(
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\llm_client\test_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 15
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\llm_client\test_local_provider.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 16
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\llm_client\test_lora_manager.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 161
    SQL query detected - ensure parameterized queries are used
    Code: async def test_delete_adapter(lora_manager):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 165
    SQL query detected - ensure parameterized queries are used
    Code: name="adapter_to_delete",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 166
    SQL query detected - ensure parameterized queries are used
    Code: description="Adapter to delete",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 171
    SQL query detected - ensure parameterized queries are used
    Code: adapter_path = os.path.join(lora_manager.lora_dir, "adapter_to_delete")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 174
    SQL query detected - ensure parameterized queries are used
    Code: # Delete the adapter
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 175
    SQL query detected - ensure parameterized queries are used
    Code: result = await lora_manager.delete_adapter("adapter_to_delete")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 177
    SQL query detected - ensure parameterized queries are used
    Code: # Check that the delete was successful
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 286
    SQL query detected - ensure parameterized queries are used
    Code: # Try to delete a non-existent adapter
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 288
    SQL query detected - ensure parameterized queries are used
    Code: await lora_manager.delete_adapter("non_existent_adapter")
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\mocks.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 33
    SQL query detected - ensure parameterized queries are used
    Code: emotions.update(self.emotion_detector.detect_text_emotion(text))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 35
    SQL query detected - ensure parameterized queries are used
    Code: emotions.update(self.emotion_detector.detect_audio_emotion(audio_data))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 37
    SQL query detected - ensure parameterized queries are used
    Code: emotions.update(self.emotion_detector.detect_facial_emotion(image_data))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 49
    SQL query detected - ensure parameterized queries are used
    Code: self.personality_model.update(interaction)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 68
    SQL query detected - ensure parameterized queries are used
    Code: def update(self, interaction):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 69
    SQL query detected - ensure parameterized queries are used
    Code: """Update personality state"""
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\mocks\redis_mock.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 29
    SQL query detected - ensure parameterized queries are used
    Code: def delete(self, key):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 30
    SQL query detected - ensure parameterized queries are used
    Code: """Delete a key"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 40
    SQL query detected - ensure parameterized queries are used
    Code: self.sets[key].update(values)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 50
    SQL query detected - ensure parameterized queries are used
    Code: self.sorted_sets[key].update(mapping)
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\multimodal\test_fusion.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 24
    SQL query detected - ensure parameterized queries are used
    Code: with tempfile.NamedTemporaryFile(suffix='.jpg', delete=False) as f:
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\multimodal\test_multimodal_fusion.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 20
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\run_integration_tests.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 20
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, project_root)
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\scripts\test_collective_scripts.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 14
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(Path(__file__).parent.parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\services\test_service_communicator.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 74
    SQL query detected - ensure parameterized queries are used
    Code: """Test service heartbeat updates"""
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_advanced_features.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 58
    SQL query detected - ensure parameterized queries are used
    Code: # Update skill levels
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 59
    SQL query detected - ensure parameterized queries are used
    Code: curriculum_manager.update_skill_levels(task, True, 0.9)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 93
    SQL query detected - ensure parameterized queries are used
    Code: # Update performance and select again
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 94
    SQL query detected - ensure parameterized queries are used
    Code: meta_learner.update_strategy_performance(0.8)
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_advanced_reliability.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 209
    SQL query detected - ensure parameterized queries are used
    Code: # Verify system state updated
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_brain.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 15
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 363
    SQL query detected - ensure parameterized queries are used
    Code: valid_command_json = '{"command": "delete_file", "args": "protected.txt"}'
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 369
    SQL query detected - ensure parameterized queries are used
    Code: failure_message = "Failed to delete file: Permission denied"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 377
    SQL query detected - ensure parameterized queries are used
    Code: final_response = brain.process_command("delete the protected file")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 381
    SQL query detected - ensure parameterized queries are used
    Code: mock_cmd_processor.execute_command.assert_called_once_with("delete_file", "protected.txt")
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_brain_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 13
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_brain_integration_new.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 46
    SQL query detected - ensure parameterized queries are used
    Code: # Verify working memory was updated
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_command_processor.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 9
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 43
    SQL query detected - ensure parameterized queries are used
    Code: def test_handle_delete_file(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 44
    SQL query detected - ensure parameterized queries are used
    Code: """Test the internal _handle_delete_file method."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 45
    SQL query detected - ensure parameterized queries are used
    Code: test_file = self.test_dir / "file_to_delete.txt"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 46
    SQL query detected - ensure parameterized queries are used
    Code: test_file.touch() # Create the file to be deleted
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 50
    SQL query detected - ensure parameterized queries are used
    Code: result = self.cmd_processor._handle_delete_file(str(test_file))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 52
    SQL query detected - ensure parameterized queries are used
    Code: self.assertIn("Deleted file", result)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 53
    SQL query detected - ensure parameterized queries are used
    Code: self.assertFalse(test_file.exists(), "_handle_delete_file did not delete the file.")
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_commands.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 8
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 95
    SQL query detected - ensure parameterized queries are used
    Code: def test_05_delete_file_command_success(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 96
    SQL query detected - ensure parameterized queries are used
    Code: """Test the 'delete file' command handler for successful deletion."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 97
    SQL query detected - ensure parameterized queries are used
    Code: filename = "file_to_delete.txt"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 98
    SQL query detected - ensure parameterized queries are used
    Code: command = f"delete file {filename}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 109
    SQL query detected - ensure parameterized queries are used
    Code: self.assertEqual(result, f"Deleted file: {expected_path}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 113
    SQL query detected - ensure parameterized queries are used
    Code: def test_06_delete_file_not_found(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 114
    SQL query detected - ensure parameterized queries are used
    Code: """Test the 'delete file' command when the file does not exist."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 116
    SQL query detected - ensure parameterized queries are used
    Code: command = f"delete file {filename}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 133
    SQL query detected - ensure parameterized queries are used
    Code: def test_07_delete_file_protected_path_failure(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 137
    SQL query detected - ensure parameterized queries are used
    Code: command = f"delete file {protected_path}"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 152
    SQL query detected - ensure parameterized queries are used
    Code: def test_08_delete_file_decorator_error_handling(self, mock_exists, mock_remove):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 163
    SQL query detected - ensure parameterized queries are used
    Code: command = f"delete file {filename}"
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_coordinator.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 20
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(project_root))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 230
    SQL query detected - ensure parameterized queries are used
    Code: # Update summary
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 315
    SQL query detected - ensure parameterized queries are used
    Code: # Update summary
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_database.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 31
    SQL query detected - ensure parameterized queries are used
    Code: def test_update_and_get_relationship_data(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 38
    SQL query detected - ensure parameterized queries are used
    Code: self.db_manager.update_relationship_data(user_id, relationship_type, trust_level, rapport_level)
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_emotional_intelligence.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 59
    SQL query detected - ensure parameterized queries are used
    Code: def test_update_relationship_metrics(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 63
    SQL query detected - ensure parameterized queries are used
    Code: # Initial update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 64
    SQL query detected - ensure parameterized queries are used
    Code: self.memory.update_relationship_metrics(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 189
    SQL query detected - ensure parameterized queries are used
    Code: action = "delete_user_data"
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_emotional_memory.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 18
    SQL query detected - ensure parameterized queries are used
    Code: async def test_01_emotional_state_update(self, event_bus):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 23
    SQL query detected - ensure parameterized queries are used
    Code: # Update with positive emotion
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 24
    SQL query detected - ensure parameterized queries are used
    Code: item_id = await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 40
    SQL query detected - ensure parameterized queries are used
    Code: # Update with negative emotion
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 41
    SQL query detected - ensure parameterized queries are used
    Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 71
    SQL query detected - ensure parameterized queries are used
    Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 110
    SQL query detected - ensure parameterized queries are used
    Code: await memory.update_relationship_context(entity_id, context)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 118
    SQL query detected - ensure parameterized queries are used
    Code: # Update context
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 119
    SQL query detected - ensure parameterized queries are used
    Code: update = {
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 124
    SQL query detected - ensure parameterized queries are used
    Code: await memory.update_relationship_context(entity_id, update)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 126
    SQL query detected - ensure parameterized queries are used
    Code: # Check updated context
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 127
    SQL query detected - ensure parameterized queries are used
    Code: updated_context = await memory.get_relationship_context(entity_id)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 128
    SQL query detected - ensure parameterized queries are used
    Code: assert updated_context["trust_level"] == 0.9
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 129
    SQL query detected - ensure parameterized queries are used
    Code: assert len(updated_context["shared_experiences"]) == 3
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 157
    SQL query detected - ensure parameterized queries are used
    Code: # Check emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 187
    SQL query detected - ensure parameterized queries are used
    Code: # Check emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 210
    SQL query detected - ensure parameterized queries are used
    Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 221
    SQL query detected - ensure parameterized queries are used
    Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 240
    SQL query detected - ensure parameterized queries are used
    Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 248
    SQL query detected - ensure parameterized queries are used
    Code: await memory.update_emotional_state(
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_emotional_performance.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 152
    SQL query detected - ensure parameterized queries are used
    Code: def test_personality_state_updates(self, emotional_service):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 153
    SQL query detected - ensure parameterized queries are used
    Code: """Test personality state updates and persistence"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 165
    SQL query detected - ensure parameterized queries are used
    Code: assert final_state != initial_state  # State should update
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 167
    SQL query detected - ensure parameterized queries are used
    Code: logger.info("Personality state updates validated")
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_emotional_processor.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 73
    SQL query detected - ensure parameterized queries are used
    Code: async def test_04_empathy_model_updates(self, processor):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 78
    SQL query detected - ensure parameterized queries are used
    Code: await processor.update_empathy_model({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 88
    SQL query detected - ensure parameterized queries are used
    Code: await processor.update_empathy_model({
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 112
    SQL query detected - ensure parameterized queries are used
    Code: # Verify emotional state was updated
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_error_edge_cases.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 13
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_error_handling.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 14
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_error_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 12
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_ethical_framework.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 130
    SQL query detected - ensure parameterized queries are used
    Code: # Check priorities were updated
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_ethical_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 38
    SQL query detected - ensure parameterized queries are used
    Code: self.temp_config = tempfile.NamedTemporaryFile(delete=False, suffix='.json')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 47
    SQL query detected - ensure parameterized queries are used
    Code: self.temp_db = tempfile.NamedTemporaryFile(delete=False, suffix='.db')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 130
    SQL query detected - ensure parameterized queries are used
    Code: with tempfile.NamedTemporaryFile(delete=False, suffix='.json') as temp_file:
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_ethics.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 29
    SQL query detected - ensure parameterized queries are used
    Code: self.temp_db = tempfile.NamedTemporaryFile(delete=False, suffix='.db')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 170
    SQL query detected - ensure parameterized queries are used
    Code: "delete user data without confirmation",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 231
    SQL query detected - ensure parameterized queries are used
    Code: with tempfile.NamedTemporaryFile(delete=False, suffix='.json') as temp_file:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 244
    SQL query detected - ensure parameterized queries are used
    Code: with tempfile.NamedTemporaryFile(delete=False, suffix='.json') as temp_file:
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_event_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 105
    SQL query detected - ensure parameterized queries are used
    Code: # Verify emotional state update
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_full_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 58
    SQL query detected - ensure parameterized queries are used
    Code: assert result['memory_updates']
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 195
    SQL query detected - ensure parameterized queries are used
    Code: # Get updated metrics
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 199
    SQL query detected - ensure parameterized queries are used
    Code: # Verify metrics were updated
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_health_curiosity.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 19
    SQL query detected - ensure parameterized queries are used
    Code: """HealthMonitor should emit a *healthy* status update when the endpoint responds 200."""
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_lifecycle.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 16
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_memory_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 198
    SQL query detected - ensure parameterized queries are used
    Code: updated_items = await working_memory.get_active_items()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 199
    SQL query detected - ensure parameterized queries are used
    Code: assert len(updated_items) <= len(items)  # Should have decayed
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 202
    SQL query detected - ensure parameterized queries are used
    Code: for old, new in zip(items, updated_items):
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_memory_store.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 37
    SQL query detected - ensure parameterized queries are used
    Code: last_updated: float
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 92
    SQL query detected - ensure parameterized queries are used
    Code: last_updated=time.time(),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 149
    SQL query detected - ensure parameterized queries are used
    Code: last_updated=time.time(),
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_performance.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 16
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\test_system_reliability.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 122
    SQL query detected - ensure parameterized queries are used
    Code: await brain.emotional_processor.update_emotional_state({
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\ui\test_gesture_arpeggiator.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 97
    SQL query detected - ensure parameterized queries are used
    Code: mock_event_bus.subscribe.assert_any_call("config.updated", arpeggiator._handle_config_updated)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 202
    SQL query detected - ensure parameterized queries are used
    Code: async def test_handle_config_updated(self, arpeggiator):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 203
    SQL query detected - ensure parameterized queries are used
    Code: """Test handling configuration update events"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 204
    SQL query detected - ensure parameterized queries are used
    Code: # Replace update_configuration with a mock
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 205
    SQL query detected - ensure parameterized queries are used
    Code: arpeggiator.update_configuration = MagicMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 209
    SQL query detected - ensure parameterized queries are used
    Code: event_type="config.updated",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 217
    SQL query detected - ensure parameterized queries are used
    Code: await arpeggiator._handle_config_updated(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 219
    SQL query detected - ensure parameterized queries are used
    Code: # Verify update_configuration was called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 220
    SQL query detected - ensure parameterized queries are used
    Code: arpeggiator.update_configuration.assert_called_once_with({"sensitivity": 0.7})
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 224
    SQL query detected - ensure parameterized queries are used
    Code: event_type="config.updated",
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 232
    SQL query detected - ensure parameterized queries are used
    Code: arpeggiator.update_configuration.reset_mock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 235
    SQL query detected - ensure parameterized queries are used
    Code: await arpeggiator._handle_config_updated(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 237
    SQL query detected - ensure parameterized queries are used
    Code: # Verify update_configuration was not called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 238
    SQL query detected - ensure parameterized queries are used
    Code: assert not arpeggiator.update_configuration.called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 323
    SQL query detected - ensure parameterized queries are used
    Code: def test_update_configuration(self, arpeggiator, mock_config_manager):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 335
    SQL query detected - ensure parameterized queries are used
    Code: # Update configuration
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 336
    SQL query detected - ensure parameterized queries are used
    Code: arpeggiator.update_configuration(new_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 338
    SQL query detected - ensure parameterized queries are used
    Code: # Verify configuration was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 344
    SQL query detected - ensure parameterized queries are used
    Code: # Verify config manager was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 345
    SQL query detected - ensure parameterized queries are used
    Code: mock_config_manager.update_config.assert_called_once_with("gesture_arpeggiator", new_config)
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\ui\test_gesture_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 49
    SQL query detected - ensure parameterized queries are used
    Code: event_bus.subscribe.assert_any_call("ui.context_changed", gesture_integration.update_ui_context)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 50
    SQL query detected - ensure parameterized queries are used
    Code: event_bus.subscribe.assert_any_call("config.updated.gesture_integration", gesture_integration.update_config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 211
    SQL query detected - ensure parameterized queries are used
    Code: def test_update_ui_context(self, gesture_integration):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 212
    SQL query detected - ensure parameterized queries are used
    Code: """Test UI context updates."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 218
    SQL query detected - ensure parameterized queries are used
    Code: gesture_integration.update_ui_context(context_event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 222
    SQL query detected - ensure parameterized queries are used
    Code: def test_update_config(self, gesture_integration):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 223
    SQL query detected - ensure parameterized queries are used
    Code: """Test configuration updates."""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 235
    SQL query detected - ensure parameterized queries are used
    Code: gesture_integration.update_config(new_config)
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\ui\test_proactive_ui.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 71
    SQL query detected - ensure parameterized queries are used
    Code: @patch('alejo.ui.pyside_ui.HolographicWidget.update')
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 72
    SQL query detected - ensure parameterized queries are used
    Code: def test_event_handler(self, mock_update):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 94
    SQL query detected - ensure parameterized queries are used
    Code: mock_update.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\ui\test_ui_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 14
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 283
    SQL query detected - ensure parameterized queries are used
    Code: # Check that config was updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 288
    SQL query detected - ensure parameterized queries are used
    Code: # Check that brain.update_config was called
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 289
    SQL query detected - ensure parameterized queries are used
    Code: mock_brain.update_config.assert_called_once_with(alejo_ui.config)
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\unit\interaction\gesture_arpeggiator\test_emotional_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 28
    SQL query detected - ensure parameterized queries are used
    Code: service.update_arpeggiator_settings = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 29
    SQL query detected - ensure parameterized queries are used
    Code: service.update_visualizer_settings = AsyncMock()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 89
    SQL query detected - ensure parameterized queries are used
    Code: # Verify arpeggiator settings were updated with Joy parameters
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 91
    SQL query detected - ensure parameterized queries are used
    Code: mock_arpeggiator_service.update_arpeggiator_settings.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 92
    SQL query detected - ensure parameterized queries are used
    Code: args = mock_arpeggiator_service.update_arpeggiator_settings.call_args[0][0]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 98
    SQL query detected - ensure parameterized queries are used
    Code: # Verify visualizer settings were updated
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 99
    SQL query detected - ensure parameterized queries are used
    Code: mock_arpeggiator_service.update_visualizer_settings.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 100
    SQL query detected - ensure parameterized queries are used
    Code: vis_args = mock_arpeggiator_service.update_visualizer_settings.call_args[0][0]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 181
    SQL query detected - ensure parameterized queries are used
    Code: mock_arpeggiator_service.update_arpeggiator_settings.assert_called_once()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 182
    SQL query detected - ensure parameterized queries are used
    Code: args = mock_arpeggiator_service.update_arpeggiator_settings.call_args[0][0]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 187
    SQL query detected - ensure parameterized queries are used
    Code: mock_arpeggiator_service.update_arpeggiator_settings.reset_mock()
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\unit\testing\test_browser_compatibility.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 14
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(Path(__file__).parent.parent.parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 243
    SQL query detected - ensure parameterized queries are used
    Code: "page_title": "Test Page Updated",
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\unit\testing\test_browser_detector.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 12
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(Path(__file__).parent.parent.parent.parent))
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\utils\test_memory_optimization.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 14
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 112
    SQL query detected - ensure parameterized queries are used
    Code: # Check that last_used was updated
    Remediation: Use parameterized queries with placeholders for all user input


File: tests\websockets\test_gesture_socket.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 103
    SQL query detected - ensure parameterized queries are used
    Code: assert sent_data["type"] == "config_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 221
    SQL query detected - ensure parameterized queries are used
    Code: async def test_handle_ui_update(websocket_handler, mock_websocket):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 222
    SQL query detected - ensure parameterized queries are used
    Code: """Test handling of UI update events"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 227
    SQL query detected - ensure parameterized queries are used
    Code: "update": {
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 233
    SQL query detected - ensure parameterized queries are used
    Code: await websocket_handler._handle_ui_update(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 238
    SQL query detected - ensure parameterized queries are used
    Code: assert sent_data["type"] == "ui_update"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 239
    SQL query detected - ensure parameterized queries are used
    Code: assert sent_data["update"] == event["update"]
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 243
    SQL query detected - ensure parameterized queries are used
    Code: async def test_handle_config_update(websocket_handler, mock_websocket):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 244
    SQL query detected - ensure parameterized queries are used
    Code: """Test handling of configuration update events"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 255
    SQL query detected - ensure parameterized queries are used
    Code: await websocket_handler._handle_config_update(event)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 260
    SQL query detected - ensure parameterized queries are used
    Code: assert sent_data["type"] == "config_update"
    Remediation: Use parameterized queries with placeholders for all user input


File: update_manager.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 3
    SQL query detected - ensure parameterized queries are used
    Code: ALEJO Update Manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 4
    SQL query detected - ensure parameterized queries are used
    Code: Automatically checks for and applies updates before ALEJO starts.
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 25
    SQL query detected - ensure parameterized queries are used
    Code: logging.FileHandler("alejo_update.log"),
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 30
    SQL query detected - ensure parameterized queries are used
    Code: logger = logging.getLogger("alejo.update_manager")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 32
    SQL query detected - ensure parameterized queries are used
    Code: class UpdateManager:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 34
    SQL query detected - ensure parameterized queries are used
    Code: Manages automatic updates for ALEJO system
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 36
    SQL query detected - ensure parameterized queries are used
    Code: This class checks for updates from the main repository and applies them
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 42
    SQL query detected - ensure parameterized queries are used
    Code: Initialize the Update Manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 51
    SQL query detected - ensure parameterized queries are used
    Code: self.update_cache_file = self.alejo_dir / ".update_cache"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 52
    SQL query detected - ensure parameterized queries are used
    Code: self.update_lock_file = self.alejo_dir / ".update_lock"
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 54
    SQL query detected - ensure parameterized queries are used
    Code: self.force_update = self.config.get("force_update", False)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 56
    SQL query detected - ensure parameterized queries are used
    Code: def should_check_for_updates(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 58
    SQL query detected - ensure parameterized queries are used
    Code: Determine if we should check for updates based on last check time
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 63
    SQL query detected - ensure parameterized queries are used
    Code: if self.force_update:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 66
    SQL query detected - ensure parameterized queries are used
    Code: if not self.update_cache_file.exists():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 70
    SQL query detected - ensure parameterized queries are used
    Code: with open(self.update_cache_file, "r") as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 82
    SQL query detected - ensure parameterized queries are used
    Code: def update_check_cache(self, update_available=False, version=None):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 83
    SQL query detected - ensure parameterized queries are used
    Code: """Update the cache file with current check information"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 86
    SQL query detected - ensure parameterized queries are used
    Code: "update_available": update_available,
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 90
    SQL query detected - ensure parameterized queries are used
    Code: with open(self.update_cache_file, "w") as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 97
    SQL query detected - ensure parameterized queries are used
    Code: def check_for_updates(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 99
    SQL query detected - ensure parameterized queries are used
    Code: Check if updates are available
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 102
    SQL query detected - ensure parameterized queries are used
    Code: tuple: (update_available, current_version, latest_version)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 105
    SQL query detected - ensure parameterized queries are used
    Code: logger.warning("Not a git repository, cannot check for updates")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 109
    SQL query detected - ensure parameterized queries are used
    Code: # Create a lock file to prevent concurrent update checks
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 110
    SQL query detected - ensure parameterized queries are used
    Code: if self.update_lock_file.exists():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 112
    SQL query detected - ensure parameterized queries are used
    Code: if time.time() - os.path.getmtime(self.update_lock_file) > 600:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 113
    SQL query detected - ensure parameterized queries are used
    Code: os.remove(self.update_lock_file)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 115
    SQL query detected - ensure parameterized queries are used
    Code: logger.info("Update check already in progress, skipping")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 118
    SQL query detected - ensure parameterized queries are used
    Code: with open(self.update_lock_file, "w") as f:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 146
    SQL query detected - ensure parameterized queries are used
    Code: update_available = current_version != latest_version
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 147
    SQL query detected - ensure parameterized queries are used
    Code: self.update_check_cache(update_available, current_version)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 149
    SQL query detected - ensure parameterized queries are used
    Code: return update_available, current_version, latest_version
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 152
    SQL query detected - ensure parameterized queries are used
    Code: logger.error(f"Error checking for updates: {str(e)}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 156
    SQL query detected - ensure parameterized queries are used
    Code: if self.update_lock_file.exists():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 157
    SQL query detected - ensure parameterized queries are used
    Code: os.remove(self.update_lock_file)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 180
    SQL query detected - ensure parameterized queries are used
    Code: def apply_update(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 182
    SQL query detected - ensure parameterized queries are used
    Code: Apply available updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 185
    SQL query detected - ensure parameterized queries are used
    Code: bool: True if update was successful, False otherwise
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 188
    SQL query detected - ensure parameterized queries are used
    Code: logger.warning("Not a git repository, cannot apply updates")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 207
    SQL query detected - ensure parameterized queries are used
    Code: logger.error(f"Error pulling updates: {result.stderr}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 226
    SQL query detected - ensure parameterized queries are used
    Code: # Update database schema if needed
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 227
    SQL query detected - ensure parameterized queries are used
    Code: self.update_database_schema()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 229
    SQL query detected - ensure parameterized queries are used
    Code: logger.info("Update completed successfully")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 233
    SQL query detected - ensure parameterized queries are used
    Code: logger.error(f"Error applying update: {str(e)}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 238
    SQL query detected - ensure parameterized queries are used
    Code: """Restore ALEJO from backup in case of update failure"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 267
    SQL query detected - ensure parameterized queries are used
    Code: def update_database_schema(self):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 268
    SQL query detected - ensure parameterized queries are used
    Code: """Update database schema if necessary"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 284
    SQL query detected - ensure parameterized queries are used
    Code: def run_update_check(self, auto_apply=True):
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 286
    SQL query detected - ensure parameterized queries are used
    Code: Run a full update check and optionally apply updates
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 289
    SQL query detected - ensure parameterized queries are used
    Code: auto_apply: Whether to automatically apply updates if available
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 292
    SQL query detected - ensure parameterized queries are used
    Code: bool: True if system is up to date, False if update failed
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 294
    SQL query detected - ensure parameterized queries are used
    Code: if not self.should_check_for_updates():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 295
    SQL query detected - ensure parameterized queries are used
    Code: logger.info("Update check was performed recently, skipping")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 298
    SQL query detected - ensure parameterized queries are used
    Code: logger.info("Checking for ALEJO updates")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 299
    SQL query detected - ensure parameterized queries are used
    Code: update_available, current_version, latest_version = self.check_for_updates()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 301
    SQL query detected - ensure parameterized queries are used
    Code: if update_available:
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 302
    SQL query detected - ensure parameterized queries are used
    Code: logger.info(f"Update available: {current_version[:7]} -> {latest_version[:7]}")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 305
    SQL query detected - ensure parameterized queries are used
    Code: logger.info("Applying update automatically")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 306
    SQL query detected - ensure parameterized queries are used
    Code: return self.apply_update()
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 308
    SQL query detected - ensure parameterized queries are used
    Code: logger.info("Update available but not applying automatically")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 318
    SQL query detected - ensure parameterized queries are used
    Code: parser = argparse.ArgumentParser(description="ALEJO Update Manager")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 319
    SQL query detected - ensure parameterized queries are used
    Code: parser.add_argument("--check-only", action="store_true", help="Only check for updates, don't apply them")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 320
    SQL query detected - ensure parameterized queries are used
    Code: parser.add_argument("--force", action="store_true", help="Force update check even if done recently")
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 323
    SQL query detected - ensure parameterized queries are used
    Code: # Create update manager
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 324
    SQL query detected - ensure parameterized queries are used
    Code: config = {"force_update": args.force}
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 325
    SQL query detected - ensure parameterized queries are used
    Code: update_manager = UpdateManager(config)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 327
    SQL query detected - ensure parameterized queries are used
    Code: # Run update check
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 328
    SQL query detected - ensure parameterized queries are used
    Code: update_manager.run_update_check(auto_apply=not args.check_only)
    Remediation: Use parameterized queries with placeholders for all user input


File: validate_gesture_deployment.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 103
    SQL query detected - ensure parameterized queries are used
    Code: await r.delete(test_key)
    Remediation: Use parameterized queries with placeholders for all user input


File: verify_selenium_integration.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 64
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, str(Path(script_path).parent))
    Remediation: Use parameterized queries with placeholders for all user input


File: vision_initialization_profile.stats
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 47
    SQL query detected - ensure parameterized queries are used
    Code: Y]O?gjOEb?0)r   id  r  )r#   r#   gh㈵>g7P>{r   )r#   r#   gh㈵>g7P>0)r   i  	fix_flags)r   r   guR#>g&p>{r   )r   r   guR#>g&p>0)r   i  r   )r   r   g>g+|c?{r   )r   r   g>g+|c?0)rS   rT   rU   )r)   r)   g0D4>g =T?{0)DC:\Users\magic\AppData\Local\Programs\Python\Python39\lib\weakref.pyi   r   )r)   r)   glӎ>g4vxU>{rY   )r)   r)   glӎ>g4vxU>0)r  i"  update)r)   r)   gavt>g:ܳS>{)r  r  r   )r)   r)   gavt>g:ܳS>0)FC:\Users\magic\AppData\Local\Programs\Python\Python39\lib\threading.pyr   RLock)r#   r#   gkNu>gkNu>{rZ   iv  
    Remediation: Use parameterized queries with placeholders for all user input


File: voice_command_simulator.py
--------------------------------------------------------------------------------
[MEDIUM] SQLQuery line 25
    SQL query detected - ensure parameterized queries are used
    Code: sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 185
    SQL query detected - ensure parameterized queries are used
    Code: """Process the command and update the log"""
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 199
    SQL query detected - ensure parameterized queries are used
    Code: def _update():
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 201
    SQL query detected - ensure parameterized queries are used
    Code: self.log_text.insert(tk.END, message + "\n\n", color)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 206
    SQL query detected - ensure parameterized queries are used
    Code: # Update in the main thread
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 207
    SQL query detected - ensure parameterized queries are used
    Code: self.root.after(0, _update)
    Remediation: Use parameterized queries with placeholders for all user input

[MEDIUM] SQLQuery line 212
    SQL query detected - ensure parameterized queries are used
    Code: self.log_text.delete(1.0, tk.END)
    Remediation: Use parameterized queries with placeholders for all user input


File: examples\error_handling_demo.py
--------------------------------------------------------------------------------
[LOW] PseudoRandom line 56
    Pseudo-random number generator used - not suitable for security purposes
    Code: if random.random() < 0.3:  # 30% chance of rate limit
    Remediation: Use secrets module for security-sensitive randomness needs

[LOW] PseudoRandom line 63
    Pseudo-random number generator used - not suitable for security purposes
    Code: if random.random() < 0.5:  # 50% chance of network error
    Remediation: Use secrets module for security-sensitive randomness needs

