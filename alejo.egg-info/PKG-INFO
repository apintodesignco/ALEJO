Metadata-Version: 2.4
Name: alejo
Version: 1.0.0
Summary: Advanced browser compatibility testing framework with AI capabilities
Home-page: https://github.com/alejo-team/alejo
Author: ALEJO Team
Author-email: alejo@example.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
License-File: LICENSE.md
Requires-Dist: selenium>=4.0.0
Requires-Dist: opencv-python>=4.5.0
Requires-Dist: numpy>=1.20.0
Requires-Dist: cryptography>=36.0.0
Requires-Dist: flask>=2.0.0
Requires-Dist: pyotp>=2.6.0
Requires-Dist: qrcode>=7.3.0
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# ALEJO - Advanced Language and Execution Joint Operator

Created by Alejandro Pinto with AI collaboration

ALEJO is a powerful, self-contained, offline-capable AI system designed to be accessible, adaptable, and exceptionally helpful. This open source project is made available to benefit as many people as possible while maintaining its integrity and vision.

## About ALEJO

ALEJO combines cutting-edge AI capabilities with a commitment to accessibility and user autonomy. It's designed to work entirely offline with local models, ensuring your data remains private and secure.

## Quick Start - One-Click Installation

1. **[Download ALEJO](https://github.com/apintodesignco/ALEJO/releases/latest)** - Click to download the latest release
2. **Run the installer** - Double-click the downloaded file to start installation
3. **Launch ALEJO** - After installation completes, ALEJO will start automatically

The installer will:
- Set up all required dependencies (Python, Redis, Node.js)
- Configure security settings automatically
- Install the default Alejo Pinto voice and face
- Create desktop and start menu shortcuts

**System Requirements:**
- Windows 10/11, macOS 10.15+, or Ubuntu 20.04+
- 8GB RAM minimum (16GB recommended)
- 10GB free disk space
- Webcam (optional, for gesture system)
- Microphone (optional, for voice interaction)

## Distributed Intelligence

ALEJO is designed as a distributed intelligence system that can learn and evolve through collective usage. With user opt-in, ALEJO instances across the world can contribute anonymized learning data to improve the collective intelligence of the system. This creates a form of "superconsciousness" that grows smarter through the combined experiences of millions of users, while maintaining individual privacy and control.

Key aspects of this distributed intelligence:

* **Federated Learning**: ALEJO learns locally on your device, then shares only anonymized insights
* **Collective Evolution**: The system becomes more helpful through aggregated experiences
* **Privacy-Preserving**: All learning is opt-in and respects user privacy
* **Guided Growth**: Core evolution is overseen by Alejandro Pinto and authorized AI systems

## Customization

ALEJO can be customized by users for their own personal use cases and test scenarios. You are encouraged to adapt ALEJO to your specific needs while respecting the license terms that protect the main codebase.

## Offline Installer

To create an offline installer, run:


```python
python installer.py
```

This will package the entire project into a zip file for offline installation. - Advanced Language and Execution Joint Operator

ALEJO is a modern AI assistant that combines the power of natural language processing, voice interaction, and a web-based interface to provide a seamless user experience. ALEJO is designed as a comprehensive AI system with advanced features and capabilities.

## Features

### Built-in Accessibility
Alejo delivers every response twice: on-screen text and synthesized voice. If voice is enabled but a microphone or speakers are missing, Alejo falls back gracefully and still renders text.

On startup with `--voice` Alejo enumerates available input/output devices (when `sounddevice` or `pyaudio` present) and lets the user pick. A default is selected after 10 s of no answer, ensuring blind users aren’t blocked.

- **Natural Language Processing**: Understand and respond to user commands in natural language
- **Web Interface**: Modern, responsive web interface with real-time updates
- **Voice Interaction**: Speech recognition and text-to-speech capabilities
- **System Monitoring**: Real-time monitoring of CPU, memory, and disk usage
- **Vision Analysis**: Screenshot and image analysis capabilities
- **Holographic UI**: Optional 3D interface for a futuristic experience

## System Architecture

## Installation Instructions

To install ALEJO, simply run the installer script:

```
python installer.py
```

The installer will request administrator privileges and will prompt for full access to your camera and microphone. After granting permission, it will automatically download the latest ALEJO installer package from GitHub releases and install it via pip. Once installed, launch ALEJO microservices using:

```
python run_services.py
```

For further details, consult the documentation below.


ALEJO’s core infrastructure has been enhanced as follows:

- **EventBus**: A central asynchronous messaging system using Redis Pub/Sub for reliable inter-service communication.
- **HealthMonitor**: Continuously monitors registered services, auto-deregistering those that are unresponsive to ensure system stability.
- **ServiceRegistry**: Manages service registration and health updates, providing a single source of truth for service status.
- **Observability**: A new module that exposes system metrics and health data via an HTTP endpoint (using FastAPI) for real‐time monitoring.
- **Brain Integration**: ALEJOBrain (and other microservices) now automatically register themselves with the ServiceRegistry and publish events via the EventBus for coordinated, dynamic service orchestration.

## System Requirements

- Python 3.8 or higher
- Modern web browser (Chrome, Firefox, Edge, Safari)
- Windows, macOS, or Linux operating system
- Microphone (for voice interaction)
- Speakers (for voice responses)

## Installation

1. Clone the repository or download the source code
2. Configure your environment variables (see [Environment Setup](#environment-setup-guide))
3. Run the PowerShell launcher script:


```powershell
.\Start-ALEJO.ps1
```

This script will:

- Create a virtual environment if it doesn't exist
- Install all required dependencies
- Start the ALEJO web interface

### Using the run_alejo.py Script (Recommended)

For the most reliable experience with the full holographic UI:

```bash
python run_alejo.py
```

This script will:

- Initialize all ALEJO components properly
- Start the web interface with the holographic UI enabled
- Open your default browser automatically
- Provide detailed logging for troubleshooting

## Quick smoke test
After cloning and installing dependencies you can verify an end-to-end baseline (no camera/voice/UI) with:
```bash
python scripts/smoke_test.py
```
Expect ✔ when all core modules are healthy.

---

## Manual Installation

If you prefer to install manually:

1. Create a virtual environment:

```bash
python -m venv venv
```

2. Activate the virtual environment:
   - Windows: `..\venv\Scripts\activate`
   - macOS/Linux: `source venv/bin/activate`

3. Install dependencies:

```bash
pip install -r requirements.txt
```

4. Run ALEJO:

```bash
python alejo.py --web
```

## Command Line Options

The `alejo.py` script accepts the following command line options:

- `--web`: Start the web interface (default: off)
- `--voice`: Enable voice interface (default: off)
- `--port PORT`: Web interface port (default: 5000)
- `--host HOST`: Web interface host (default: 0.0.0.0)
- `--debug`: Enable debug mode (default: off)

## Web Interface

The web interface is accessible at `http://localhost:5000` by default. It provides:

- Chat interface for text-based interaction
- Vision interface for image analysis
- Voice interface for speech recognition
- Settings for customizing the experience

## Error Handling System

ALEJO includes a robust error handling system with automatic recovery strategies, performance monitoring, and comprehensive logging.

### Key Features

- **Automatic Recovery**: Built-in strategies for common error types
  - Connection errors with exponential backoff
  - Memory management and garbage collection
  - Permission and file access recovery
  - API rate limit handling
  - Network and service recovery

- **Performance Monitoring**
  - Recovery time tracking
  - Success rate calculation
  - Error frequency monitoring
  - Resource usage analytics
  - Real-time performance reporting

- **Production Logging**
  - Rotating file handlers
  - JSON-formatted logs for analytics
  - Configurable alert thresholds
  - Error statistics and trends
  - Component health monitoring

### Usage

```python
from alejo.utils.error_handling import handle_errors
from alejo.utils.metrics import get_metrics
from alejo.utils.monitoring import get_monitor

# Decorate functions for automatic error handling
@handle_errors(component='my_component', category='file_operation')
def process_file(path):
    # Your code here
    pass

# Track performance metrics
metrics = get_metrics()
metrics.record_recovery_time('my_component', 'file_recovery', 1.5)

# Monitor errors in production
monitor = get_monitor()
monitor.log_error({
    'component': 'my_component',
    'category': 'critical',
    'message': 'File access denied'
})
```

### Configuration

Error handling can be configured in `config.yaml`:

```yaml
error_handling:
  alert_thresholds:
    critical: 1
    system: 3
    operational: 5
  log_dir: logs
  test_mode: false
```

For more details, see the [Error Handling Documentation](alejo/utils/README.md).

## Directory Structure

```
ALEJO/
├── alejo.py                # Main entry point
├── requirements.txt        # Python dependencies
├── Start-ALEJO.ps1         # PowerShell launcher script
├── core/                   # Core modules
│   ├── __init__.py
│   ├── brain/              # AI processing
│   │   ├── __init__.py
│   │   └── alejo_brain.py
│   ├── voice/              # Voice processing
│   │   ├── __init__.py
│   │   └── voice_service.py
│   ├── web/                # Web interface
│   │   ├── __init__.py
│   │   ├── static/         # Static assets
│   │   │   ├── css/
│   │   │   ├── js/
│   │   │   └── images/
│   │   ├── templates/      # HTML templates
│   │   └── web_interface/  # Web server
│   │       └── __init__.py
│   └── utils/              # Utility functions
│       └── __init__.py
├── data/                   # Data storage
└── logs/                   # Log files
```

## Development

To contribute to ALEJO:

1. Fork the repository
2. Create a feature branch
3. Make your changes
4. Submit a pull request

## License

This project is licensed under the MIT License with ALEJO-specific terms - see the [LICENSE.md](LICENSE.md) file for details.

While ALEJO follows the permissive MIT License framework, there are specific governance terms that maintain Alejandro Pinto's control over the core codebase while enabling community contributions through the distributed intelligence system.

## Sponsorship and Support

ALEJO is being released as a free and accessible tool to help people first and foremost. However, development and maintenance require resources. If you would like to sponsor this project or help with funding, you can contribute through the following methods:

- **Stripe**: Sponsorships are available through our GitHub-linked Stripe account
- **Cash App**: **$apintodesignco**
- **Direct Contact**: Reach out to Alejandro Pinto at al.pintoemail@gmail.com

Your support helps ensure that ALEJO remains available to those who need it, especially people with disabilities who can benefit from its capabilities. Any contributions beyond what's needed for development are reinvested into making ALEJO better or given back to the community.

Thank you! Your contribution, no matter the size, is greatly appreciated and will be used to help people who really need it even further.

We believe in helping each other first and foremost - that's why ALEJO is free and accessible to all.

## Acknowledgments

ALEJO is a comprehensive AI system with advanced features and capabilities designed for seamless human-computer interaction.
