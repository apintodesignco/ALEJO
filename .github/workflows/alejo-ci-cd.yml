name: ALEJO CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety pytest pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          
      - name: Run security scanner
        run: |
          python alejo_security_scanner.py --ci --report
          
      - name: Check for hardcoded secrets
        run: |
          bandit -r . -ll -ii -x "tests/*,node_modules/*"
          
      - name: Check for vulnerable dependencies
        run: |
          safety check

  test:
    name: Comprehensive Testing
    runs-on: ubuntu-latest
    needs: security-scan
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install Redis
        run: |
          sudo apt-get update
          sudo apt-get install -y redis-server
          redis-server --daemonize yes
          redis-cli ping
          
      - name: Run comprehensive tests
        run: |
          python run_comprehensive_tests.py --all --report --ci
          
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-reports/

  build:
    name: Build ALEJO
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          npm ci
          
      - name: Build application
        run: |
          npm run build
          
      - name: Package application
        run: |
          mkdir -p dist
          cp -r build/* dist/
          cp -r src dist/
          cp start_alejo_with_gestures.py dist/
          cp README.md dist/
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: alejo-build
          path: dist/

  deploy-staging:
    name: Deploy to Staging
    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging')
    runs-on: ubuntu-latest
    needs: build
    environment: staging
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: alejo-build
          path: dist
          
      - name: Deploy to staging server
        run: |
          echo "Deploying to staging environment"
          # Add your deployment commands here
          # This is a placeholder for your actual deployment process
          
      - name: Validate deployment
        run: |
          echo "Validating deployment"
          # Add validation commands here

  deploy-production:
    name: Deploy to Production
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'
    runs-on: ubuntu-latest
    needs: deploy-staging
    environment: production
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: alejo-build
          path: dist
          
      - name: Deploy to production server
        run: |
          echo "Deploying to production environment"
          # Add your production deployment commands here
          # This is a placeholder for your actual deployment process
          
      - name: Validate production deployment
        run: |
          echo "Validating production deployment"
          # Add validation commands here
