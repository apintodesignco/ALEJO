name: ALEJO Deployment

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        type: choice
        options:
          - development
          - staging
          - production
        required: true
        default: 'development'

jobs:
  build:
    name: Build ALEJO
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: alejo-build
          path: |
            dist/
            build/
          retention-days: 5

  validate:
    name: Validate Gesture System Deployment
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: alejo-build
          path: dist
          
      - name: Validate gesture system deployment
        run: python alejo/tools/validate_gesture_deployment.py
          
  test-docker:
    name: Test Docker Deployment
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Build and run Docker container
        run: |
          docker build -t alejo:test .
          docker run -d --name alejo-test -p 8080:8080 alejo:test
          
      - name: Test Docker container
        run: |
          sleep 10
          curl -sSf http://localhost:8080/healthcheck || exit 1
          python alejo/tools/test_gesture_docker.py
          
      - name: Cleanup
        run: docker rm -f alejo-test

  deploy-development:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: [validate, test-docker]
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'development'
    # IMPORTANT: Uncomment and configure the environment once it's created in GitHub repository settings
    # Go to your repository Settings → Environments → Create 'development' environment
    # environment: development
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: alejo-build
          path: dist
          
      - name: Deploy to development environment
        run: |
          echo "Deploying to development environment"
          # Add your deployment commands here
          # Examples:
          # - Deploy to Heroku
          # - Deploy to Netlify
          # - Deploy to your own server
          
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [validate, test-docker]
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging'
    # IMPORTANT: Uncomment and configure the environment once it's created in GitHub repository settings
    # Go to your repository Settings → Environments → Create 'staging' environment
    # environment: staging
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: alejo-build
          path: dist
          
      - name: Deploy to staging environment
        run: |
          echo "Deploying to staging environment"
          # Add your deployment commands here
          
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [validate, test-docker]
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production' || startsWith(github.ref, 'refs/tags/v')
    # IMPORTANT: Uncomment and configure the environment once it's created in GitHub repository settings
    # Go to your repository Settings → Environments → Create 'production' environment
    # environment: production
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: alejo-build
          path: dist
          
      - name: Deploy to production environment
        run: |
          echo "Deploying to production environment"
          # Add your deployment commands here
