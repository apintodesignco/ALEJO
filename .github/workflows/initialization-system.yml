name: Initialization System CI/CD

on:
  push:
    paths:
      - 'src/core/system/**'
      - 'tests/core/system/**'
      - '.github/workflows/initialization-system.yml'
    tags:
      - '[PERFORMANCE]*'
      - '[UX]*'
  pull_request:
    paths:
      - 'src/core/system/**'
      - 'tests/core/system/**'

jobs:
  test:
    name: Test Initialization System
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Verify required files
        run: |
          for file in initialization-manager.js fallback-manager.js progressive-loading-manager.js initialization-log-viewer.js monitoring-dashboard.js error-handler.js; do
            if [ ! -f "src/core/system/$file" ]; then
              echo "Missing required file: src/core/system/$file"
              exit 1
            fi
          done
          
      - name: Run tests
        run: npm test -- tests/core/system --coverage
        
      - name: Upload test coverage
        uses: codecov/codecov-action@v3
        with:
          directory: ./coverage/
          flags: initialization-system
          
  performance:
    name: Performance Testing
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/[PERFORMANCE]')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run performance tests
        run: |
          npm test -- tests/core/system/performance.test.js
          
      - name: Generate performance report
        run: node tools/generate-performance-report.js --module=initialization
        
      - name: Upload performance artifacts
        uses: actions/upload-artifact@v3
        with:
          name: performance-report
          path: reports/performance/initialization-system-report.html
          
  accessibility:
    name: Accessibility Testing
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/[UX]')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run accessibility tests
        run: |
          npm test -- tests/core/system/accessibility.test.js
          
      - name: Generate accessibility report
        run: node tools/generate-accessibility-report.js --module=initialization
        
      - name: Upload accessibility artifacts
        uses: actions/upload-artifact@v3
        with:
          name: accessibility-report
          path: reports/accessibility/initialization-system-report.html
          
  build:
    name: Build Initialization System
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build system
        run: node tools/deploy-initialization-system.js development
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: initialization-system-build
          path: dist/core/system/
          
  deploy:
    name: Deploy Initialization System
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: initialization-system-build
          path: dist/core/system/
          
      - name: Deploy to production
        run: node tools/deploy-initialization-system.js production
        
      - name: Update documentation
        run: |
          npm run docs:generate
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add docs/
          git commit -m "Update initialization system documentation [skip ci]" || echo "No changes to commit"
          git push
          
  notify:
    name: Notify Team
    runs-on: ubuntu-latest
    needs: deploy
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Send deployment notification
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          event-type: initialization-system-deployed
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
