name: Accessibility Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/personalization/hearing/**'
      - 'src/personalization/vision/**'
      - 'test/personalization/hearing/**'
      - 'test/personalization/vision/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/personalization/hearing/**'
      - 'src/personalization/vision/**'
      - 'test/personalization/hearing/**'
      - 'test/personalization/vision/**'
  # Allow manual triggering
  workflow_dispatch:

jobs:
  hearing-accessibility-tests:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run hearing accessibility tests
        run: node test/personalization/hearing/run-hearing-accessibility-tests.js
      
      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: hearing-accessibility-test-reports
          path: reports/hearing-accessibility
          retention-days: 7

  vision-accessibility-tests:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run vision accessibility tests
        run: node test/personalization/vision/run-vision-accessibility-tests.js
      
      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: vision-accessibility-test-reports
          path: reports/vision-accessibility
          retention-days: 7

  accessibility-compliance:
    runs-on: ubuntu-latest
    needs: [hearing-accessibility-tests, vision-accessibility-tests]
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install axe-core and puppeteer
        run: npm install axe-core puppeteer
      
      - name: Run accessibility compliance tests
        run: node test/accessibility/compliance-tests.js
      
      - name: Upload compliance reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: accessibility-compliance-reports
          path: reports/accessibility-compliance
          retention-days: 7

  notify:
    runs-on: ubuntu-latest
    needs: [hearing-accessibility-tests, vision-accessibility-tests, accessibility-compliance]
    if: always()
    
    steps:
      - name: Check test results
        id: check
        run: |
          if [ "${{ needs.hearing-accessibility-tests.result }}" == "success" ] && [ "${{ needs.vision-accessibility-tests.result }}" == "success" ] && [ "${{ needs.accessibility-compliance.result }}" == "success" ]; then
            echo "status=success" >> $GITHUB_OUTPUT
          else
            echo "status=failure" >> $GITHUB_OUTPUT
          fi
      
      - name: Notify team of test results
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const status = "${{ steps.check.outputs.status }}";
            const emoji = status === "success" ? "✅" : "❌";
            const message = `${emoji} Accessibility Tests: ${status.toUpperCase()}`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });
